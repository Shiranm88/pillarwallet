diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_createNamedExportFrom.js b/node_modules/@sentry/utils/cjs/buildPolyfills/_createNamedExportFrom.js
deleted file mode 100644
index 1834945..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_createNamedExportFrom.js
+++ /dev/null
@@ -1,22 +0,0 @@
-Object.defineProperty(exports, '__esModule', { value: true });
-
-/**
- * Copy a property from the given object into `exports`, under the given name.
- *
- * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
- *
- * @param obj The object containing the property to copy.
- * @param localName The name under which to export the property
- * @param importedName The name under which the property lives in `obj`
- */
-function _createNamedExportFrom(obj, localName, importedName) {
-  exports[localName] = obj[importedName];
-}
-
-// Sucrase version:
-// function _createNamedExportFrom(obj, localName, importedName) {
-//   Object.defineProperty(exports, localName, {enumerable: true, get: () => obj[importedName]});
-// }
-
-exports._createNamedExportFrom = _createNamedExportFrom;
-//# sourceMappingURL=_createNamedExportFrom.js.map
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_createNamedExportFrom.js.map b/node_modules/@sentry/utils/cjs/buildPolyfills/_createNamedExportFrom.js.map
deleted file mode 100644
index fc12c7e..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_createNamedExportFrom.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_createNamedExportFrom.js","sources":["../../../src/buildPolyfills/_createNamedExportFrom.ts"],"sourcesContent":["// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericObject } from './types';\n\ndeclare const exports: GenericObject;\n\n/**\n * Copy a property from the given object into `exports`, under the given name.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param obj The object containing the property to copy.\n * @param localName The name under which to export the property\n * @param importedName The name under which the property lives in `obj`\n */\nexport function _createNamedExportFrom(obj: GenericObject, localName: string, importedName: string): void {\n  exports[localName] = obj[importedName];\n}\n\n// Sucrase version:\n// function _createNamedExportFrom(obj, localName, importedName) {\n//   Object.defineProperty(exports, localName, {enumerable: true, get: () => obj[importedName]});\n// }\n"],"names":[],"mappings":";;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,sBAAA,CAAA,GAAA,EAAA,SAAA,EAAA,YAAA,EAAA;AACA,EAAA,OAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,YAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_createStarExport.js b/node_modules/@sentry/utils/cjs/buildPolyfills/_createStarExport.js
deleted file mode 100644
index d121407..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_createStarExport.js
+++ /dev/null
@@ -1,29 +0,0 @@
-Object.defineProperty(exports, '__esModule', { value: true });
-
-/**
- * Copy properties from an object into `exports`.
- *
- * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
- *
- * @param obj The object containing the properties to copy.
- */
-function _createStarExport(obj) {
-  Object.keys(obj)
-    .filter(key => key !== 'default' && key !== '__esModule' && !(key in exports))
-    .forEach(key => (exports[key] = obj[key]));
-}
-
-// Sucrase version:
-// function _createStarExport(obj) {
-//   Object.keys(obj)
-//     .filter(key => key !== 'default' && key !== '__esModule')
-//     .forEach(key => {
-//       if (exports.hasOwnProperty(key)) {
-//         return;
-//       }
-//       Object.defineProperty(exports, key, { enumerable: true, get: () => obj[key] });
-//     });
-// }
-
-exports._createStarExport = _createStarExport;
-//# sourceMappingURL=_createStarExport.js.map
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_createStarExport.js.map b/node_modules/@sentry/utils/cjs/buildPolyfills/_createStarExport.js.map
deleted file mode 100644
index 5cab28c..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_createStarExport.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_createStarExport.js","sources":["../../../src/buildPolyfills/_createStarExport.ts"],"sourcesContent":["// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericObject } from './types';\n\ndeclare const exports: GenericObject;\n\n/**\n * Copy properties from an object into `exports`.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param obj The object containing the properties to copy.\n */\nexport function _createStarExport(obj: GenericObject): void {\n  Object.keys(obj)\n    .filter(key => key !== 'default' && key !== '__esModule' && !(key in exports))\n    .forEach(key => (exports[key] = obj[key]));\n}\n\n// Sucrase version:\n// function _createStarExport(obj) {\n//   Object.keys(obj)\n//     .filter(key => key !== 'default' && key !== '__esModule')\n//     .forEach(key => {\n//       if (exports.hasOwnProperty(key)) {\n//         return;\n//       }\n//       Object.defineProperty(exports, key, { enumerable: true, get: () => obj[key] });\n//     });\n// }\n"],"names":[],"mappings":";;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,iBAAA,CAAA,GAAA,EAAA;AACA,EAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,KAAA,MAAA,CAAA,GAAA,IAAA,GAAA,KAAA,SAAA,IAAA,GAAA,KAAA,YAAA,IAAA,EAAA,GAAA,IAAA,OAAA,CAAA,CAAA;AACA,KAAA,OAAA,CAAA,GAAA,KAAA,OAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopDefault.js b/node_modules/@sentry/utils/cjs/buildPolyfills/_interopDefault.js
deleted file mode 100644
index 156e288..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopDefault.js
+++ /dev/null
@@ -1,21 +0,0 @@
-Object.defineProperty(exports, '__esModule', { value: true });
-
-/**
- * Unwraps a module if it has been wrapped in an object under the key `default`.
- *
- * Adapted from Rollup (https://github.com/rollup/rollup)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns The full module, unwrapped if necessary.
- */
-function _interopDefault$1(requireResult) {
-  return requireResult.__esModule ? (requireResult.default ) : requireResult;
-}
-
-// Rollup version:
-// function _interopDefault(e) {
-//   return e && e.__esModule ? e['default'] : e;
-// }
-
-exports._interopDefault = _interopDefault$1;
-//# sourceMappingURL=_interopDefault.js.map
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopDefault.js.map b/node_modules/@sentry/utils/cjs/buildPolyfills/_interopDefault.js.map
deleted file mode 100644
index a4f7e52..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopDefault.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopDefault.js","sources":["../../../src/buildPolyfills/_interopDefault.ts"],"sourcesContent":["// https://github.com/rollup/rollup/tree/c2cda424e69686671ba010d628c0f70c43a563f8\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 [these people](https://github.com/rollup/rollup/graphs/contributors)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions\n// of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT\n// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Unwraps a module if it has been wrapped in an object under the key `default`.\n *\n * Adapted from Rollup (https://github.com/rollup/rollup)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns The full module, unwrapped if necessary.\n */\nexport function _interopDefault(requireResult: RequireResult): RequireResult {\n  return requireResult.__esModule ? (requireResult.default as RequireResult) : requireResult;\n}\n\n// Rollup version:\n// function _interopDefault(e) {\n//   return e && e.__esModule ? e['default'] : e;\n// }\n"],"names":["_interopDefault"],"mappings":";;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAAA,iBAAA,CAAA,aAAA,EAAA;AACA,EAAA,OAAA,aAAA,CAAA,UAAA,IAAA,aAAA,CAAA,OAAA,KAAA,aAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopNamespace.js b/node_modules/@sentry/utils/cjs/buildPolyfills/_interopNamespace.js
deleted file mode 100644
index 10ed1ea..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopNamespace.js
+++ /dev/null
@@ -1,29 +0,0 @@
-Object.defineProperty(exports, '__esModule', { value: true });
-
-/**
- * Adds a self-referential `default` property to CJS modules which aren't the result of transpilation from ESM modules.
- *
- * Adapted from Rollup (https://github.com/rollup/rollup)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property
- */
-function _interopNamespace$1(requireResult) {
-  return requireResult.__esModule ? requireResult : { ...requireResult, default: requireResult };
-}
-
-// Rollup version (with `output.externalLiveBindings` and `output.freeze` both set to false)
-// function _interopNamespace(e) {
-//   if (e && e.__esModule) return e;
-//   var n = Object.create(null);
-//   if (e) {
-//     for (var k in e) {
-//       n[k] = e[k];
-//     }
-//   }
-//   n["default"] = e;
-//   return n;
-// }
-
-exports._interopNamespace = _interopNamespace$1;
-//# sourceMappingURL=_interopNamespace.js.map
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopNamespace.js.map b/node_modules/@sentry/utils/cjs/buildPolyfills/_interopNamespace.js.map
deleted file mode 100644
index f89635d..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopNamespace.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopNamespace.js","sources":["../../../src/buildPolyfills/_interopNamespace.ts"],"sourcesContent":["// https://github.com/rollup/rollup/tree/c2cda424e69686671ba010d628c0f70c43a563f8\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 [these people](https://github.com/rollup/rollup/graphs/contributors)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions\n// of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT\n// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Adds a self-referential `default` property to CJS modules which aren't the result of transpilation from ESM modules.\n *\n * Adapted from Rollup (https://github.com/rollup/rollup)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property\n */\nexport function _interopNamespace(requireResult: RequireResult): RequireResult {\n  return requireResult.__esModule ? requireResult : { ...requireResult, default: requireResult };\n}\n\n// Rollup version (with `output.externalLiveBindings` and `output.freeze` both set to false)\n// function _interopNamespace(e) {\n//   if (e && e.__esModule) return e;\n//   var n = Object.create(null);\n//   if (e) {\n//     for (var k in e) {\n//       n[k] = e[k];\n//     }\n//   }\n//   n[\"default\"] = e;\n//   return n;\n// }\n"],"names":["_interopNamespace"],"mappings":";;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAAA,mBAAA,CAAA,aAAA,EAAA;AACA,EAAA,OAAA,aAAA,CAAA,UAAA,GAAA,aAAA,GAAA,EAAA,GAAA,aAAA,EAAA,OAAA,EAAA,aAAA,EAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopNamespaceDefaultOnly.js b/node_modules/@sentry/utils/cjs/buildPolyfills/_interopNamespaceDefaultOnly.js
deleted file mode 100644
index 514b085..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopNamespaceDefaultOnly.js
+++ /dev/null
@@ -1,27 +0,0 @@
-Object.defineProperty(exports, '__esModule', { value: true });
-
-/**
- * Wrap a module in an object, as the value under the key `default`.
- *
- * Adapted from Rollup (https://github.com/rollup/rollup)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns An object containing the key-value pair (`default`, `requireResult`)
- */
-function _interopNamespaceDefaultOnly$1(requireResult) {
-  return {
-    __proto__: null,
-    default: requireResult,
-  };
-}
-
-// Rollup version
-// function _interopNamespaceDefaultOnly(e) {
-//   return {
-//     __proto__: null,
-//     'default': e
-//   };
-// }
-
-exports._interopNamespaceDefaultOnly = _interopNamespaceDefaultOnly$1;
-//# sourceMappingURL=_interopNamespaceDefaultOnly.js.map
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopNamespaceDefaultOnly.js.map b/node_modules/@sentry/utils/cjs/buildPolyfills/_interopNamespaceDefaultOnly.js.map
deleted file mode 100644
index a1ec6c6..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopNamespaceDefaultOnly.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopNamespaceDefaultOnly.js","sources":["../../../src/buildPolyfills/_interopNamespaceDefaultOnly.ts"],"sourcesContent":["// https://github.com/rollup/rollup/tree/c2cda424e69686671ba010d628c0f70c43a563f8\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 [these people](https://github.com/rollup/rollup/graphs/contributors)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions\n// of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT\n// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Wrap a module in an object, as the value under the key `default`.\n *\n * Adapted from Rollup (https://github.com/rollup/rollup)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns An object containing the key-value pair (`default`, `requireResult`)\n */\nexport function _interopNamespaceDefaultOnly(requireResult: RequireResult): RequireResult {\n  return {\n    __proto__: null,\n    default: requireResult,\n  };\n}\n\n// Rollup version\n// function _interopNamespaceDefaultOnly(e) {\n//   return {\n//     __proto__: null,\n//     'default': e\n//   };\n// }\n"],"names":["_interopNamespaceDefaultOnly"],"mappings":";;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAAA,8BAAA,CAAA,aAAA,EAAA;AACA,EAAA,OAAA;AACA,IAAA,SAAA,EAAA,IAAA;AACA,IAAA,OAAA,EAAA,aAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopRequireDefault.js b/node_modules/@sentry/utils/cjs/buildPolyfills/_interopRequireDefault.js
deleted file mode 100644
index e0ca4db..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopRequireDefault.js
+++ /dev/null
@@ -1,21 +0,0 @@
-Object.defineProperty(exports, '__esModule', { value: true });
-
-/**
- * Wraps modules which aren't the result of transpiling an ESM module in an object under the key `default`
- *
- * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns `requireResult` or `requireResult` wrapped in an object, keyed as `default`
- */
-function _interopRequireDefault(requireResult) {
-  return requireResult.__esModule ? requireResult : { default: requireResult };
-}
-
-// Sucrase version
-// function _interopRequireDefault(obj) {
-//   return obj && obj.__esModule ? obj : { default: obj };
-// }
-
-exports._interopRequireDefault = _interopRequireDefault;
-//# sourceMappingURL=_interopRequireDefault.js.map
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopRequireDefault.js.map b/node_modules/@sentry/utils/cjs/buildPolyfills/_interopRequireDefault.js.map
deleted file mode 100644
index 2907da6..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopRequireDefault.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopRequireDefault.js","sources":["../../../src/buildPolyfills/_interopRequireDefault.ts"],"sourcesContent":["// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Wraps modules which aren't the result of transpiling an ESM module in an object under the key `default`\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns `requireResult` or `requireResult` wrapped in an object, keyed as `default`\n */\nexport function _interopRequireDefault(requireResult: RequireResult): RequireResult {\n  return requireResult.__esModule ? requireResult : { default: requireResult };\n}\n\n// Sucrase version\n// function _interopRequireDefault(obj) {\n//   return obj && obj.__esModule ? obj : { default: obj };\n// }\n"],"names":[],"mappings":";;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,sBAAA,CAAA,aAAA,EAAA;AACA,EAAA,OAAA,aAAA,CAAA,UAAA,GAAA,aAAA,GAAA,EAAA,OAAA,EAAA,aAAA,EAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopRequireWildcard.js b/node_modules/@sentry/utils/cjs/buildPolyfills/_interopRequireWildcard.js
deleted file mode 100644
index 6d3e1d2..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopRequireWildcard.js
+++ /dev/null
@@ -1,34 +0,0 @@
-Object.defineProperty(exports, '__esModule', { value: true });
-
-/**
- * Adds a `default` property to CJS modules which aren't the result of transpilation from ESM modules.
- *
- * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property
- */
-function _interopRequireWildcard(requireResult) {
-  return requireResult.__esModule ? requireResult : { ...requireResult, default: requireResult };
-}
-
-// Sucrase version
-// function _interopRequireWildcard(obj) {
-//   if (obj && obj.__esModule) {
-//     return obj;
-//   } else {
-//     var newObj = {};
-//     if (obj != null) {
-//       for (var key in obj) {
-//         if (Object.prototype.hasOwnProperty.call(obj, key)) {
-//           newObj[key] = obj[key];
-//         }
-//       }
-//     }
-//     newObj.default = obj;
-//     return newObj;
-//   }
-// }
-
-exports._interopRequireWildcard = _interopRequireWildcard;
-//# sourceMappingURL=_interopRequireWildcard.js.map
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopRequireWildcard.js.map b/node_modules/@sentry/utils/cjs/buildPolyfills/_interopRequireWildcard.js.map
deleted file mode 100644
index b1c0fb8..0000000
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/_interopRequireWildcard.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopRequireWildcard.js","sources":["../../../src/buildPolyfills/_interopRequireWildcard.ts"],"sourcesContent":["// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Adds a `default` property to CJS modules which aren't the result of transpilation from ESM modules.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property\n */\nexport function _interopRequireWildcard(requireResult: RequireResult): RequireResult {\n  return requireResult.__esModule ? requireResult : { ...requireResult, default: requireResult };\n}\n\n// Sucrase version\n// function _interopRequireWildcard(obj) {\n//   if (obj && obj.__esModule) {\n//     return obj;\n//   } else {\n//     var newObj = {};\n//     if (obj != null) {\n//       for (var key in obj) {\n//         if (Object.prototype.hasOwnProperty.call(obj, key)) {\n//           newObj[key] = obj[key];\n//         }\n//       }\n//     }\n//     newObj.default = obj;\n//     return newObj;\n//   }\n// }\n"],"names":[],"mappings":";;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,uBAAA,CAAA,aAAA,EAAA;AACA,EAAA,OAAA,aAAA,CAAA,UAAA,GAAA,aAAA,GAAA,EAAA,GAAA,aAAA,EAAA,OAAA,EAAA,aAAA,EAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/index.js b/node_modules/@sentry/utils/cjs/buildPolyfills/index.js
index 7c848c9..b280aa2 100644
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/index.js
+++ b/node_modules/@sentry/utils/cjs/buildPolyfills/index.js
@@ -3,13 +3,6 @@ Object.defineProperty(exports, '__esModule', { value: true });
 const _asyncNullishCoalesce = require('./_asyncNullishCoalesce.js');
 const _asyncOptionalChain = require('./_asyncOptionalChain.js');
 const _asyncOptionalChainDelete = require('./_asyncOptionalChainDelete.js');
-const _createNamedExportFrom = require('./_createNamedExportFrom.js');
-const _createStarExport = require('./_createStarExport.js');
-const _interopDefault$1 = require('./_interopDefault.js');
-const _interopNamespace$1 = require('./_interopNamespace.js');
-const _interopNamespaceDefaultOnly$1 = require('./_interopNamespaceDefaultOnly.js');
-const _interopRequireDefault = require('./_interopRequireDefault.js');
-const _interopRequireWildcard = require('./_interopRequireWildcard.js');
 const _nullishCoalesce = require('./_nullishCoalesce.js');
 const _optionalChain = require('./_optionalChain.js');
 const _optionalChainDelete = require('./_optionalChainDelete.js');
@@ -19,13 +12,6 @@ const _optionalChainDelete = require('./_optionalChainDelete.js');
 exports._asyncNullishCoalesce = _asyncNullishCoalesce._asyncNullishCoalesce;
 exports._asyncOptionalChain = _asyncOptionalChain._asyncOptionalChain;
 exports._asyncOptionalChainDelete = _asyncOptionalChainDelete._asyncOptionalChainDelete;
-exports._createNamedExportFrom = _createNamedExportFrom._createNamedExportFrom;
-exports._createStarExport = _createStarExport._createStarExport;
-exports._interopDefault = _interopDefault$1._interopDefault;
-exports._interopNamespace = _interopNamespace$1._interopNamespace;
-exports._interopNamespaceDefaultOnly = _interopNamespaceDefaultOnly$1._interopNamespaceDefaultOnly;
-exports._interopRequireDefault = _interopRequireDefault._interopRequireDefault;
-exports._interopRequireWildcard = _interopRequireWildcard._interopRequireWildcard;
 exports._nullishCoalesce = _nullishCoalesce._nullishCoalesce;
 exports._optionalChain = _optionalChain._optionalChain;
 exports._optionalChainDelete = _optionalChainDelete._optionalChainDelete;
diff --git a/node_modules/@sentry/utils/cjs/buildPolyfills/index.js.map b/node_modules/@sentry/utils/cjs/buildPolyfills/index.js.map
index fee1d88..eb47718 100644
--- a/node_modules/@sentry/utils/cjs/buildPolyfills/index.js.map
+++ b/node_modules/@sentry/utils/cjs/buildPolyfills/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sources":[],"sourcesContent":[],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
+{"version":3,"file":"index.js","sources":[],"sourcesContent":[],"names":[],"mappings":";;;;;;;;;;;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/env.js b/node_modules/@sentry/utils/cjs/env.js
index c273bef..67ef13f 100644
--- a/node_modules/@sentry/utils/cjs/env.js
+++ b/node_modules/@sentry/utils/cjs/env.js
@@ -28,7 +28,7 @@ function isBrowserBundle() {
  * Get source of SDK.
  */
 function getSDKSource() {
-  // @ts-ignore "npm" is injected by rollup during build process
+  // @ts-expect-error "npm" is injected by rollup during build process
   return "npm";
 }
 
diff --git a/node_modules/@sentry/utils/cjs/env.js.map b/node_modules/@sentry/utils/cjs/env.js.map
index 899495f..4a82f78 100644
--- a/node_modules/@sentry/utils/cjs/env.js.map
+++ b/node_modules/@sentry/utils/cjs/env.js.map
@@ -1 +1 @@
-{"version":3,"file":"env.js","sources":["../../src/env.ts"],"sourcesContent":["/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-ignore __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA,SAAA,eAAA,GAAA;AACA,EAAA,OAAA,OAAA,yBAAA,KAAA,WAAA,IAAA,CAAA,CAAA,yBAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,YAAA,GAAA;AACA;AACA,EAAA,OAAA,KAAA,CAAA;AACA;;;;;"}
\ No newline at end of file
+{"version":3,"file":"env.js","sources":["../../src/env.ts"],"sourcesContent":["/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-expect-error __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA,SAAA,eAAA,GAAA;AACA,EAAA,OAAA,OAAA,yBAAA,KAAA,WAAA,IAAA,CAAA,CAAA,yBAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,YAAA,GAAA;AACA;AACA,EAAA,OAAA,KAAA,CAAA;AACA;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/eventbuilder.js b/node_modules/@sentry/utils/cjs/eventbuilder.js
new file mode 100644
index 0000000..26c9f72
--- /dev/null
+++ b/node_modules/@sentry/utils/cjs/eventbuilder.js
@@ -0,0 +1,128 @@
+Object.defineProperty(exports, '__esModule', { value: true });
+
+const is = require('./is.js');
+const misc = require('./misc.js');
+const normalize = require('./normalize.js');
+const object = require('./object.js');
+
+/**
+ * Extracts stack frames from the error.stack string
+ */
+function parseStackFrames(stackParser, error) {
+  return stackParser(error.stack || '', 1);
+}
+
+/**
+ * Extracts stack frames from the error and builds a Sentry Exception
+ */
+function exceptionFromError(stackParser, error) {
+  const exception = {
+    type: error.name || error.constructor.name,
+    value: error.message,
+  };
+
+  const frames = parseStackFrames(stackParser, error);
+  if (frames.length) {
+    exception.stacktrace = { frames };
+  }
+
+  return exception;
+}
+
+/**
+ * Builds and Event from a Exception
+ * @hidden
+ */
+function eventFromUnknownInput(
+  getCurrentHub,
+  stackParser,
+  exception,
+  hint,
+) {
+  let ex = exception;
+  const providedMechanism =
+    hint && hint.data && (hint.data ).mechanism;
+  const mechanism = providedMechanism || {
+    handled: true,
+    type: 'generic',
+  };
+
+  if (!is.isError(exception)) {
+    if (is.isPlainObject(exception)) {
+      // This will allow us to group events based on top-level keys
+      // which is much better than creating new group when any key/value change
+      const message = `Non-Error exception captured with keys: ${object.extractExceptionKeysForMessage(exception)}`;
+
+      const hub = getCurrentHub();
+      const client = hub.getClient();
+      const normalizeDepth = client && client.getOptions().normalizeDepth;
+      hub.configureScope(scope => {
+        scope.setExtra('__serialized__', normalize.normalizeToSize(exception, normalizeDepth));
+      });
+
+      ex = (hint && hint.syntheticException) || new Error(message);
+      (ex ).message = message;
+    } else {
+      // This handles when someone does: `throw "something awesome";`
+      // We use synthesized Error here so we can extract a (rough) stack trace.
+      ex = (hint && hint.syntheticException) || new Error(exception );
+      (ex ).message = exception ;
+    }
+    mechanism.synthetic = true;
+  }
+
+  const event = {
+    exception: {
+      values: [exceptionFromError(stackParser, ex )],
+    },
+  };
+
+  misc.addExceptionTypeValue(event, undefined, undefined);
+  misc.addExceptionMechanism(event, mechanism);
+
+  return {
+    ...event,
+    event_id: hint && hint.event_id,
+  };
+}
+
+/**
+ * Builds and Event from a Message
+ * @hidden
+ */
+function eventFromMessage(
+  stackParser,
+  message,
+  // eslint-disable-next-line deprecation/deprecation
+  level = 'info',
+  hint,
+  attachStacktrace,
+) {
+  const event = {
+    event_id: hint && hint.event_id,
+    level,
+    message,
+  };
+
+  if (attachStacktrace && hint && hint.syntheticException) {
+    const frames = parseStackFrames(stackParser, hint.syntheticException);
+    if (frames.length) {
+      event.exception = {
+        values: [
+          {
+            value: message,
+            stacktrace: { frames },
+          },
+        ],
+      };
+    }
+  }
+
+  return event;
+}
+
+exports.eventFromMessage = eventFromMessage;
+exports.eventFromUnknownInput = eventFromUnknownInput;
+exports.exceptionFromError = exceptionFromError;
+exports.parseStackFrames = parseStackFrames;
+//# sourceMappingURL=eventbuilder.js.map
diff --git a/node_modules/@sentry/utils/cjs/eventbuilder.js.map b/node_modules/@sentry/utils/cjs/eventbuilder.js.map
new file mode 100644
index 0000000..8dda935
--- /dev/null
+++ b/node_modules/@sentry/utils/cjs/eventbuilder.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"eventbuilder.js","sources":["../../src/eventbuilder.ts"],"sourcesContent":["import type {\n  Event,\n  EventHint,\n  Exception,\n  Hub,\n  Mechanism,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\n\nimport { isError, isPlainObject } from './is';\nimport { addExceptionMechanism, addExceptionTypeValue } from './misc';\nimport { normalizeToSize } from './normalize';\nimport { extractExceptionKeysForMessage } from './object';\n\n/**\n * Extracts stack frames from the error.stack string\n */\nexport function parseStackFrames(stackParser: StackParser, error: Error): StackFrame[] {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nexport function exceptionFromError(stackParser: StackParser, error: Error): Exception {\n  const exception: Exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nexport function eventFromUnknownInput(\n  getCurrentHub: () => Hub,\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n): Event {\n  let ex: unknown = exception;\n  const providedMechanism: Mechanism | undefined =\n    hint && hint.data && (hint.data as { mechanism: Mechanism }).mechanism;\n  const mechanism: Mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  if (!isError(exception)) {\n    if (isPlainObject(exception)) {\n      // This will allow us to group events based on top-level keys\n      // which is much better than creating new group when any key/value change\n      const message = `Non-Error exception captured with keys: ${extractExceptionKeysForMessage(exception)}`;\n\n      const hub = getCurrentHub();\n      const client = hub.getClient();\n      const normalizeDepth = client && client.getOptions().normalizeDepth;\n      hub.configureScope(scope => {\n        scope.setExtra('__serialized__', normalizeToSize(exception, normalizeDepth));\n      });\n\n      ex = (hint && hint.syntheticException) || new Error(message);\n      (ex as Error).message = message;\n    } else {\n      // This handles when someone does: `throw \"something awesome\";`\n      // We use synthesized Error here so we can extract a (rough) stack trace.\n      ex = (hint && hint.syntheticException) || new Error(exception as string);\n      (ex as Error).message = exception as string;\n    }\n    mechanism.synthetic = true;\n  }\n\n  const event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex as Error)],\n    },\n  };\n\n  addExceptionTypeValue(event, undefined, undefined);\n  addExceptionMechanism(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {\n    event_id: hint && hint.event_id,\n    level,\n    message,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n    }\n  }\n\n  return event;\n}\n"],"names":["isError","isPlainObject","extractExceptionKeysForMessage","normalizeToSize","addExceptionTypeValue","addExceptionMechanism"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/index.js b/node_modules/@sentry/utils/cjs/index.js
index 1781855..e69b971 100644
--- a/node_modules/@sentry/utils/cjs/index.js
+++ b/node_modules/@sentry/utils/cjs/index.js
@@ -31,6 +31,7 @@ const baggage = require('./baggage.js');
 const url = require('./url.js');
 const userIntegrations = require('./userIntegrations.js');
 const cache = require('./cache.js');
+const eventbuilder = require('./eventbuilder.js');
 const escapeStringForRegex = require('./vendor/escapeStringForRegex.js');
 const supportsHistory = require('./vendor/supportsHistory.js');
 
@@ -49,7 +50,10 @@ exports.getGlobalObject = worldwide.getGlobalObject;
 exports.getGlobalSingleton = worldwide.getGlobalSingleton;
 exports.SENTRY_XHR_DATA_KEY = instrument.SENTRY_XHR_DATA_KEY;
 exports.addInstrumentationHandler = instrument.addInstrumentationHandler;
+exports.instrumentDOM = instrument.instrumentDOM;
+exports.instrumentXHR = instrument.instrumentXHR;
 exports.parseFetchArgs = instrument.parseFetchArgs;
+exports.resetInstrumentationHandlers = instrument.resetInstrumentationHandlers;
 exports.isDOMError = is.isDOMError;
 exports.isDOMException = is.isDOMException;
 exports.isElement = is.isElement;
@@ -64,12 +68,11 @@ exports.isRegExp = is.isRegExp;
 exports.isString = is.isString;
 exports.isSyntheticEvent = is.isSyntheticEvent;
 exports.isThenable = is.isThenable;
+exports.isVueViewModel = is.isVueViewModel;
 exports.CONSOLE_LEVELS = logger.CONSOLE_LEVELS;
 exports.consoleSandbox = logger.consoleSandbox;
-Object.defineProperty(exports, 'logger', {
-	enumerable: true,
-	get: () => logger.logger
-});
+exports.logger = logger.logger;
+exports.originalConsoleMethods = logger.originalConsoleMethods;
 exports.memoBuilder = memo.memoBuilder;
 exports.addContextToFrame = misc.addContextToFrame;
 exports.addExceptionMechanism = misc.addExceptionMechanism;
@@ -173,6 +176,10 @@ exports.parseUrl = url.parseUrl;
 exports.stripUrlQueryAndFragment = url.stripUrlQueryAndFragment;
 exports.addOrUpdateIntegration = userIntegrations.addOrUpdateIntegration;
 exports.makeFifoCache = cache.makeFifoCache;
+exports.eventFromMessage = eventbuilder.eventFromMessage;
+exports.eventFromUnknownInput = eventbuilder.eventFromUnknownInput;
+exports.exceptionFromError = eventbuilder.exceptionFromError;
+exports.parseStackFrames = eventbuilder.parseStackFrames;
 exports.escapeStringForRegex = escapeStringForRegex.escapeStringForRegex;
 exports.supportsHistory = supportsHistory.supportsHistory;
 //# sourceMappingURL=index.js.map
diff --git a/node_modules/@sentry/utils/cjs/index.js.map b/node_modules/@sentry/utils/cjs/index.js.map
index 8e29f72..9449f38 100644
--- a/node_modules/@sentry/utils/cjs/index.js.map
+++ b/node_modules/@sentry/utils/cjs/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sources":[],"sourcesContent":[],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
+{"version":3,"file":"index.js","sources":[],"sourcesContent":[],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/instrument.js b/node_modules/@sentry/utils/cjs/instrument.js
index 1bf2a93..2cc3f85 100644
--- a/node_modules/@sentry/utils/cjs/instrument.js
+++ b/node_modules/@sentry/utils/cjs/instrument.js
@@ -74,6 +74,16 @@ function addInstrumentationHandler(type, callback) {
   instrument(type);
 }
 
+/**
+ * Reset all instrumentation handlers.
+ * This can be used by tests to ensure we have a clean slate of instrumentation handlers.
+ */
+function resetInstrumentationHandlers() {
+  Object.keys(handlers).forEach(key => {
+    handlers[key ] = undefined;
+  });
+}
+
 /** JSDoc */
 function triggerHandlers(type, data) {
   if (!type || !handlers[type]) {
@@ -95,23 +105,23 @@ function triggerHandlers(type, data) {
 
 /** JSDoc */
 function instrumentConsole() {
-  if (!('console' in WINDOW)) {
+  if (!('console' in worldwide.GLOBAL_OBJ)) {
     return;
   }
 
   logger.CONSOLE_LEVELS.forEach(function (level) {
-    if (!(level in WINDOW.console)) {
+    if (!(level in worldwide.GLOBAL_OBJ.console)) {
       return;
     }
 
-    object.fill(WINDOW.console, level, function (originalConsoleMethod) {
+    object.fill(worldwide.GLOBAL_OBJ.console, level, function (originalConsoleMethod) {
+      logger.originalConsoleMethods[level] = originalConsoleMethod;
+
       return function (...args) {
         triggerHandlers('console', { args, level });
 
-        // this fails for some browsers. :(
-        if (originalConsoleMethod) {
-          originalConsoleMethod.apply(WINDOW.console, args);
-        }
+        const log = logger.originalConsoleMethods[level];
+        log && log.apply(worldwide.GLOBAL_OBJ.console, args);
       };
     });
   });
@@ -123,7 +133,7 @@ function instrumentFetch() {
     return;
   }
 
-  object.fill(WINDOW, 'fetch', function (originalFetch) {
+  object.fill(worldwide.GLOBAL_OBJ, 'fetch', function (originalFetch) {
     return function (...args) {
       const { method, url } = parseFetchArgs(args);
 
@@ -141,7 +151,7 @@ function instrumentFetch() {
       });
 
       // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
-      return originalFetch.apply(WINDOW, args).then(
+      return originalFetch.apply(worldwide.GLOBAL_OBJ, args).then(
         (response) => {
           triggerHandlers('fetch', {
             ...handlerData,
@@ -216,7 +226,8 @@ function parseFetchArgs(fetchArgs) {
 
 /** JSDoc */
 function instrumentXHR() {
-  if (!('XMLHttpRequest' in WINDOW)) {
+  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
+  if (!(WINDOW ).XMLHttpRequest) {
     return;
   }
 
@@ -487,7 +498,7 @@ function makeDOMEventHandler(handler, globalListener = false) {
 
 /** JSDoc */
 function instrumentDOM() {
-  if (!('document' in WINDOW)) {
+  if (!WINDOW.document) {
     return;
   }
 
@@ -631,5 +642,8 @@ function instrumentUnhandledRejection() {
 
 exports.SENTRY_XHR_DATA_KEY = SENTRY_XHR_DATA_KEY;
 exports.addInstrumentationHandler = addInstrumentationHandler;
+exports.instrumentDOM = instrumentDOM;
+exports.instrumentXHR = instrumentXHR;
 exports.parseFetchArgs = parseFetchArgs;
+exports.resetInstrumentationHandlers = resetInstrumentationHandlers;
 //# sourceMappingURL=instrument.js.map
diff --git a/node_modules/@sentry/utils/cjs/instrument.js.map b/node_modules/@sentry/utils/cjs/instrument.js.map
index 22e058a..3e8fdd2 100644
--- a/node_modules/@sentry/utils/cjs/instrument.js.map
+++ b/node_modules/@sentry/utils/cjs/instrument.js.map
@@ -1 +1 @@
-{"version":3,"file":"instrument.js","sources":["../../src/instrument.ts"],"sourcesContent":["/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type {\n  HandlerDataFetch,\n  HandlerDataXhr,\n  SentryWrappedXMLHttpRequest,\n  SentryXhrData,\n  WrappedFunction,\n} from '@sentry/types';\n\nimport { isString } from './is';\nimport { CONSOLE_LEVELS, logger } from './logger';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v2__';\n\nexport type InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      __DEBUG_BUILD__ && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(type: InstrumentHandlerType, callback: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      __DEBUG_BUILD__ &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in WINDOW)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: string): void {\n    if (!(level in WINDOW.console)) {\n      return;\n    }\n\n    fill(WINDOW.console, level, function (originalConsoleMethod: () => any): Function {\n      return function (...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(WINDOW.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(WINDOW, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(WINDOW, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\n/** JSDoc */\nfunction instrumentXHR(): void {\n  if (!('XMLHttpRequest' in WINDOW)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const url = args[1];\n      const xhrInfo: SentryXhrData = (this[SENTRY_XHR_DATA_KEY] = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n        request_headers: {},\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args: args as [string, string],\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr: this,\n          } as HandlerDataXhr);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs as [string, string];\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n      if (sentryXhrData && args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous: Event | undefined, current: Event): boolean {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event: Event): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target as HTMLElement;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler: Function, globalListener: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\n/** JSDoc */\nfunction instrumentDOM(): void {\n  if (!('document' in WINDOW)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler: (typeof WINDOW)['onerror'] | null = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg: unknown, url: unknown, line: unknown, column: unknown, error: unknown): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  WINDOW.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nlet _oldOnUnhandledRejectionHandler: (typeof WINDOW)['onunhandledrejection'] | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  WINDOW.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n"],"names":["getGlobalObject","logger","getFunctionName","CONSOLE_LEVELS","fill","supportsNativeFetch","isString","supportsHistory"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"instrument.js","sources":["../../src/instrument.ts"],"sourcesContent":["/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type {\n  HandlerDataFetch,\n  HandlerDataXhr,\n  SentryWrappedXMLHttpRequest,\n  SentryXhrData,\n  WrappedFunction,\n} from '@sentry/types';\n\nimport { isString } from './is';\nimport type { ConsoleLevel } from './logger';\nimport { CONSOLE_LEVELS, logger, originalConsoleMethods } from './logger';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\nimport { getGlobalObject, GLOBAL_OBJ } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v2__';\n\nexport type InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      __DEBUG_BUILD__ && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(type: InstrumentHandlerType, callback: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(callback);\n  instrument(type);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      __DEBUG_BUILD__ &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\n/** JSDoc */\nexport function instrumentXHR(): void {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW as any).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const url = args[1];\n      const xhrInfo: SentryXhrData = (this[SENTRY_XHR_DATA_KEY] = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n        request_headers: {},\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args: args as [string, string],\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr: this,\n          } as HandlerDataXhr);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs as [string, string];\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n      if (sentryXhrData && args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous: Event | undefined, current: Event): boolean {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event: Event): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target as HTMLElement;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler: Function, globalListener: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\n/** JSDoc */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler: (typeof WINDOW)['onerror'] | null = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg: unknown, url: unknown, line: unknown, column: unknown, error: unknown): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  WINDOW.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nlet _oldOnUnhandledRejectionHandler: (typeof WINDOW)['onunhandledrejection'] | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  WINDOW.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n"],"names":["getGlobalObject","logger","getFunctionName","GLOBAL_OBJ","CONSOLE_LEVELS","fill","originalConsoleMethods","supportsNativeFetch","isString","supportsHistory"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/is.js b/node_modules/@sentry/utils/cjs/is.js
index 29cfc55..dbb8097 100644
--- a/node_modules/@sentry/utils/cjs/is.js
+++ b/node_modules/@sentry/utils/cjs/is.js
@@ -177,6 +177,17 @@ function isInstanceOf(wat, base) {
   }
 }
 
+/**
+ * Checks whether given value's type is a Vue ViewModel.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+function isVueViewModel(wat) {
+  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.
+  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));
+}
+
 exports.isDOMError = isDOMError;
 exports.isDOMException = isDOMException;
 exports.isElement = isElement;
@@ -191,4 +202,5 @@ exports.isRegExp = isRegExp;
 exports.isString = isString;
 exports.isSyntheticEvent = isSyntheticEvent;
 exports.isThenable = isThenable;
+exports.isVueViewModel = isVueViewModel;
 //# sourceMappingURL=is.js.map
diff --git a/node_modules/@sentry/utils/cjs/is.js.map b/node_modules/@sentry/utils/cjs/is.js.map
index ea45a52..2188ef5 100644
--- a/node_modules/@sentry/utils/cjs/is.js.map
+++ b/node_modules/@sentry/utils/cjs/is.js.map
@@ -1 +1 @@
-{"version":3,"file":"is.js","sources":["../../src/is.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"is.js","sources":["../../src/is.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/logger.js b/node_modules/@sentry/utils/cjs/logger.js
index 25bc460..34f161d 100644
--- a/node_modules/@sentry/utils/cjs/logger.js
+++ b/node_modules/@sentry/utils/cjs/logger.js
@@ -7,6 +7,13 @@ const PREFIX = 'Sentry Logger ';
 
 const CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;
 
+/** This may be mutated by the console instrumentation. */
+const originalConsoleMethods
+
+ = {};
+
+/** JSDoc */
+
 /**
  * Temporarily disable sentry console instrumentations.
  *
@@ -18,26 +25,24 @@ function consoleSandbox(callback) {
     return callback();
   }
 
-  const originalConsole = worldwide.GLOBAL_OBJ.console ;
-  const wrappedLevels = {};
+  const console = worldwide.GLOBAL_OBJ.console ;
+  const wrappedFuncs = {};
+
+  const wrappedLevels = Object.keys(originalConsoleMethods) ;
 
   // Restore all wrapped console methods
-  CONSOLE_LEVELS.forEach(level => {
-    // TODO(v7): Remove this check as it's only needed for Node 6
-    const originalWrappedFunc =
-      originalConsole[level] && (originalConsole[level] ).__sentry_original__;
-    if (level in originalConsole && originalWrappedFunc) {
-      wrappedLevels[level] = originalConsole[level] ;
-      originalConsole[level] = originalWrappedFunc ;
-    }
+  wrappedLevels.forEach(level => {
+    const originalConsoleMethod = originalConsoleMethods[level] ;
+    wrappedFuncs[level] = console[level] ;
+    console[level] = originalConsoleMethod;
   });
 
   try {
     return callback();
   } finally {
     // Revert restoration to wrapped state
-    Object.keys(wrappedLevels).forEach(level => {
-      originalConsole[level] = wrappedLevels[level ];
+    wrappedLevels.forEach(level => {
+      console[level] = wrappedFuncs[level] ;
     });
   }
 }
@@ -73,14 +78,10 @@ function makeLogger() {
   return logger ;
 }
 
-// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used
-exports.logger = void 0;
-if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {
-  exports.logger = worldwide.getGlobalSingleton('logger', makeLogger);
-} else {
-  exports.logger = makeLogger();
-}
+const logger = makeLogger();
 
 exports.CONSOLE_LEVELS = CONSOLE_LEVELS;
 exports.consoleSandbox = consoleSandbox;
+exports.logger = logger;
+exports.originalConsoleMethods = originalConsoleMethods;
 //# sourceMappingURL=logger.js.map
diff --git a/node_modules/@sentry/utils/cjs/logger.js.map b/node_modules/@sentry/utils/cjs/logger.js.map
index b7452e9..84a80c1 100644
--- a/node_modules/@sentry/utils/cjs/logger.js.map
+++ b/node_modules/@sentry/utils/cjs/logger.js.map
@@ -1 +1 @@
-{"version":3,"file":"logger.js","sources":["../../src/logger.ts"],"sourcesContent":["import type { WrappedFunction } from '@sentry/types';\n\nimport { getGlobalSingleton, GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] as const;\nexport type ConsoleLevel = (typeof CONSOLE_LEVELS)[number];\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<(typeof CONSOLE_LEVELS)[number], LoggerMethod>;\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = GLOBAL_OBJ.console as Console & Record<string, unknown>;\n  const wrappedLevels: Partial<LoggerConsoleMethods> = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] as WrappedFunction).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] as LoggerConsoleMethods[typeof level];\n      originalConsole[level] = originalWrappedFunc as Console[typeof level];\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level as (typeof CONSOLE_LEVELS)[number]];\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if (__DEBUG_BUILD__) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger: Logger;\nif (__DEBUG_BUILD__) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { logger };\n"],"names":["GLOBAL_OBJ","logger","getGlobalSingleton"],"mappings":";;;;AAIA;AACA,MAAA,MAAA,GAAA,gBAAA,CAAA;AACA;AACA,MAAA,cAAA,GAAA,CAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA,OAAA,CAAA,EAAA;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,cAAA,CAAA,QAAA,EAAA;AACA,EAAA,IAAA,EAAA,SAAA,IAAAA,oBAAA,CAAA,EAAA;AACA,IAAA,OAAA,QAAA,EAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,eAAA,GAAAA,oBAAA,CAAA,OAAA,EAAA;AACA,EAAA,MAAA,aAAA,GAAA,EAAA,CAAA;AACA;AACA;AACA,EAAA,cAAA,CAAA,OAAA,CAAA,KAAA,IAAA;AACA;AACA,IAAA,MAAA,mBAAA;AACA,MAAA,eAAA,CAAA,KAAA,CAAA,IAAA,CAAA,eAAA,CAAA,KAAA,CAAA,GAAA,mBAAA,CAAA;AACA,IAAA,IAAA,KAAA,IAAA,eAAA,IAAA,mBAAA,EAAA;AACA,MAAA,aAAA,CAAA,KAAA,CAAA,GAAA,eAAA,CAAA,KAAA,CAAA,EAAA;AACA,MAAA,eAAA,CAAA,KAAA,CAAA,GAAA,mBAAA,EAAA;AACA,KAAA;AACA,GAAA,CAAA,CAAA;AACA;AACA,EAAA,IAAA;AACA,IAAA,OAAA,QAAA,EAAA,CAAA;AACA,GAAA,SAAA;AACA;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,OAAA,CAAA,KAAA,IAAA;AACA,MAAA,eAAA,CAAA,KAAA,CAAA,GAAA,aAAA,CAAA,KAAA,EAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA;AACA,CAAA;AACA;AACA,SAAA,UAAA,GAAA;AACA,EAAA,IAAA,OAAA,GAAA,KAAA,CAAA;AACA,EAAA,MAAA,MAAA,GAAA;AACA,IAAA,MAAA,EAAA,MAAA;AACA,MAAA,OAAA,GAAA,IAAA,CAAA;AACA,KAAA;AACA,IAAA,OAAA,EAAA,MAAA;AACA,MAAA,OAAA,GAAA,KAAA,CAAA;AACA,KAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,KAAA,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA,GAAA;AACA,IAAA,cAAA,CAAA,OAAA,CAAA,IAAA,IAAA;AACA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,IAAA,KAAA;AACA,QAAA,IAAA,OAAA,EAAA;AACA,UAAA,cAAA,CAAA,MAAA;AACA,YAAAA,oBAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,EAAA,GAAA,IAAA,CAAA,CAAA;AACA,WAAA,CAAA,CAAA;AACA,SAAA;AACA,OAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA,MAAA;AACA,IAAA,cAAA,CAAA,OAAA,CAAA,IAAA,IAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,GAAA,MAAA,SAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA,MAAA,EAAA;AACA,CAAA;AACA;AACA;AACAC,wBAAA;AACA,KAAA,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA,GAAA;AACA,EAAAA,cAAA,GAAAC,4BAAA,CAAA,QAAA,EAAA,UAAA,CAAA,CAAA;AACA,CAAA,MAAA;AACA,EAAAD,cAAA,GAAA,UAAA,EAAA,CAAA;AACA;;;;;"}
\ No newline at end of file
+{"version":3,"file":"logger.js","sources":["../../src/logger.ts"],"sourcesContent":["import { GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] as const;\nexport type ConsoleLevel = (typeof CONSOLE_LEVELS)[number];\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key in ConsoleLevel]?: (...args: any[]) => void;\n} = {};\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\n    wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as LoggerMethod;\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if (__DEBUG_BUILD__) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\nexport const logger = makeLogger();\n"],"names":["GLOBAL_OBJ"],"mappings":";;;;AAEA;AACA,MAAA,MAAA,GAAA,gBAAA,CAAA;AACA;AACA,MAAA,cAAA,GAAA,CAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA,OAAA,CAAA,EAAA;;AAMA;AACA,MAAA,sBAAA;;AAGA,GAAA,GAAA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,cAAA,CAAA,QAAA,EAAA;AACA,EAAA,IAAA,EAAA,SAAA,IAAAA,oBAAA,CAAA,EAAA;AACA,IAAA,OAAA,QAAA,EAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,OAAA,GAAAA,oBAAA,CAAA,OAAA,EAAA;AACA,EAAA,MAAA,YAAA,GAAA,EAAA,CAAA;AACA;AACA,EAAA,MAAA,aAAA,GAAA,MAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,EAAA;AACA;AACA;AACA,EAAA,aAAA,CAAA,OAAA,CAAA,KAAA,IAAA;AACA,IAAA,MAAA,qBAAA,GAAA,sBAAA,CAAA,KAAA,CAAA,EAAA;AACA,IAAA,YAAA,CAAA,KAAA,CAAA,GAAA,OAAA,CAAA,KAAA,CAAA,EAAA;AACA,IAAA,OAAA,CAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AACA,GAAA,CAAA,CAAA;AACA;AACA,EAAA,IAAA;AACA,IAAA,OAAA,QAAA,EAAA,CAAA;AACA,GAAA,SAAA;AACA;AACA,IAAA,aAAA,CAAA,OAAA,CAAA,KAAA,IAAA;AACA,MAAA,OAAA,CAAA,KAAA,CAAA,GAAA,YAAA,CAAA,KAAA,CAAA,EAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA;AACA,CAAA;AACA;AACA,SAAA,UAAA,GAAA;AACA,EAAA,IAAA,OAAA,GAAA,KAAA,CAAA;AACA,EAAA,MAAA,MAAA,GAAA;AACA,IAAA,MAAA,EAAA,MAAA;AACA,MAAA,OAAA,GAAA,IAAA,CAAA;AACA,KAAA;AACA,IAAA,OAAA,EAAA,MAAA;AACA,MAAA,OAAA,GAAA,KAAA,CAAA;AACA,KAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,KAAA,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA,GAAA;AACA,IAAA,cAAA,CAAA,OAAA,CAAA,IAAA,IAAA;AACA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,IAAA,KAAA;AACA,QAAA,IAAA,OAAA,EAAA;AACA,UAAA,cAAA,CAAA,MAAA;AACA,YAAAA,oBAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,EAAA,GAAA,IAAA,CAAA,CAAA;AACA,WAAA,CAAA,CAAA;AACA,SAAA;AACA,OAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA,MAAA;AACA,IAAA,cAAA,CAAA,OAAA,CAAA,IAAA,IAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,GAAA,MAAA,SAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA,MAAA,EAAA;AACA,CAAA;AACA;AACA,MAAA,MAAA,GAAA,UAAA;;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/misc.js b/node_modules/@sentry/utils/cjs/misc.js
index ab2eee8..3d322a9 100644
--- a/node_modules/@sentry/utils/cjs/misc.js
+++ b/node_modules/@sentry/utils/cjs/misc.js
@@ -13,13 +13,19 @@ function uuid4() {
   const gbl = worldwide.GLOBAL_OBJ ;
   const crypto = gbl.crypto || gbl.msCrypto;
 
-  if (crypto && crypto.randomUUID) {
-    return crypto.randomUUID().replace(/-/g, '');
+  let getRandomByte = () => Math.random() * 16;
+  try {
+    if (crypto && crypto.randomUUID) {
+      return crypto.randomUUID().replace(/-/g, '');
+    }
+    if (crypto && crypto.getRandomValues) {
+      getRandomByte = () => crypto.getRandomValues(new Uint8Array(1));
+    }
+  } catch (_) {
+    // some runtimes can crash invoking crypto
+    // https://github.com/getsentry/sentry-javascript/issues/8935
   }
 
-  const getRandomByte =
-    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;
-
   // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523
   // Concatenating the following numbers as strings results in '10000000100040008000100000000000'
   return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>
diff --git a/node_modules/@sentry/utils/cjs/misc.js.map b/node_modules/@sentry/utils/cjs/misc.js.map
index 0ff7de8..bbf194b 100644
--- a/node_modules/@sentry/utils/cjs/misc.js.map
+++ b/node_modules/@sentry/utils/cjs/misc.js.map
@@ -1 +1 @@
-{"version":3,"file":"misc.js","sources":["../../src/misc.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n"],"names":["GLOBAL_OBJ","snipLine","addNonEnumerableProperty"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"misc.js","sources":["../../src/misc.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => crypto.getRandomValues(new Uint8Array(1))[0];\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n"],"names":["GLOBAL_OBJ","snipLine","addNonEnumerableProperty"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/normalize.js b/node_modules/@sentry/utils/cjs/normalize.js
index db6f5dc..56d3341 100644
--- a/node_modules/@sentry/utils/cjs/normalize.js
+++ b/node_modules/@sentry/utils/cjs/normalize.js
@@ -203,6 +203,10 @@ function stringifyValue(
       return '[Document]';
     }
 
+    if (is.isVueViewModel(value)) {
+      return '[VueViewModel]';
+    }
+
     // React's SyntheticEvent thingy
     if (is.isSyntheticEvent(value)) {
       return '[SyntheticEvent]';
diff --git a/node_modules/@sentry/utils/cjs/normalize.js.map b/node_modules/@sentry/utils/cjs/normalize.js.map
index 6e39e74..f3bf484 100644
--- a/node_modules/@sentry/utils/cjs/normalize.js.map
+++ b/node_modules/@sentry/utils/cjs/normalize.js.map
@@ -1 +1 @@
-{"version":3,"file":"normalize.js","sources":["../../src/normalize.ts"],"sourcesContent":["import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n// TODO remove this in v7 (this means the method will no longer be exported, under any name)\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n"],"names":["memo","memoBuilder","isNaN","convertToPlainObject","isSyntheticEvent","getFunctionName"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"normalize.js","sources":["../../src/normalize.ts"],"sourcesContent":["import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent, isVueViewModel } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n// TODO remove this in v7 (this means the method will no longer be exported, under any name)\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n"],"names":["memo","memoBuilder","isNaN","convertToPlainObject","isVueViewModel","isSyntheticEvent","getFunctionName"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/string.js b/node_modules/@sentry/utils/cjs/string.js
index 61af62e..be56186 100644
--- a/node_modules/@sentry/utils/cjs/string.js
+++ b/node_modules/@sentry/utils/cjs/string.js
@@ -76,7 +76,16 @@ function safeJoin(input, delimiter) {
   for (let i = 0; i < input.length; i++) {
     const value = input[i];
     try {
-      output.push(String(value));
+      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of
+      // console warnings. This happens when a Vue template is rendered with
+      // an undeclared variable, which we try to stringify, ultimately causing
+      // Vue to issue another warning which repeats indefinitely.
+      // see: https://github.com/getsentry/sentry-javascript/pull/8981
+      if (is.isVueViewModel(value)) {
+        output.push('[VueViewModel]');
+      } else {
+        output.push(String(value));
+      }
     } catch (e) {
       output.push('[value cannot be serialized]');
     }
diff --git a/node_modules/@sentry/utils/cjs/string.js.map b/node_modules/@sentry/utils/cjs/string.js.map
index dd5c508..2baaabf 100644
--- a/node_modules/@sentry/utils/cjs/string.js.map
+++ b/node_modules/@sentry/utils/cjs/string.js.map
@@ -1 +1 @@
-{"version":3,"file":"string.js","sources":["../../src/string.ts"],"sourcesContent":["import { isRegExp, isString } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n"],"names":["isString","isRegExp"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"string.js","sources":["../../src/string.ts"],"sourcesContent":["import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n"],"names":["isVueViewModel","isString","isRegExp"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/supports.js b/node_modules/@sentry/utils/cjs/supports.js
index 59a777b..5a42baa 100644
--- a/node_modules/@sentry/utils/cjs/supports.js
+++ b/node_modules/@sentry/utils/cjs/supports.js
@@ -31,7 +31,7 @@ function supportsDOMError() {
   try {
     // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':
     // 1 argument required, but only 0 present.
-    // @ts-ignore It really needs 1 argument, not 0.
+    // @ts-expect-error It really needs 1 argument, not 0.
     new DOMError('');
     return true;
   } catch (e) {
diff --git a/node_modules/@sentry/utils/cjs/supports.js.map b/node_modules/@sentry/utils/cjs/supports.js.map
index 3bf9594..8456711 100644
--- a/node_modules/@sentry/utils/cjs/supports.js.map
+++ b/node_modules/@sentry/utils/cjs/supports.js.map
@@ -1 +1 @@
-{"version":3,"file":"supports.js","sources":["../../src/supports.ts"],"sourcesContent":["import { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      __DEBUG_BUILD__ &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n"],"names":["getGlobalObject","logger"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"supports.js","sources":["../../src/supports.ts"],"sourcesContent":["import { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      __DEBUG_BUILD__ &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n"],"names":["getGlobalObject","logger"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/cjs/tracing.js b/node_modules/@sentry/utils/cjs/tracing.js
index 9fa29ae..0366154 100644
--- a/node_modules/@sentry/utils/cjs/tracing.js
+++ b/node_modules/@sentry/utils/cjs/tracing.js
@@ -59,7 +59,7 @@ function tracingContextFromHeaders(
   const propagationContext = {
     traceId: traceId || misc.uuid4(),
     spanId: misc.uuid4().substring(16),
-    sampled: parentSampled === undefined ? false : parentSampled,
+    sampled: parentSampled,
   };
 
   if (parentSpanId) {
diff --git a/node_modules/@sentry/utils/cjs/tracing.js.map b/node_modules/@sentry/utils/cjs/tracing.js.map
index 5eb3009..f08fcbb 100644
--- a/node_modules/@sentry/utils/cjs/tracing.js.map
+++ b/node_modules/@sentry/utils/cjs/tracing.js.map
@@ -1 +1 @@
-{"version":3,"file":"tracing.js","sources":["../../src/tracing.ts"],"sourcesContent":["import type { DynamicSamplingContext, PropagationContext, TraceparentData } from '@sentry/types';\n\nimport { baggageHeaderToDynamicSamplingContext } from './baggage';\nimport { uuid4 } from './misc';\n\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent?: string): TraceparentData | undefined {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled: boolean | undefined;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n */\nexport function tracingContextFromHeaders(\n  sentryTrace: Parameters<typeof extractTraceparentData>[0],\n  baggage: Parameters<typeof baggageHeaderToDynamicSamplingContext>[0],\n): {\n  traceparentData: ReturnType<typeof extractTraceparentData>;\n  dynamicSamplingContext: ReturnType<typeof baggageHeaderToDynamicSamplingContext>;\n  propagationContext: PropagationContext;\n} {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  const propagationContext: PropagationContext = {\n    traceId: traceId || uuid4(),\n    spanId: uuid4().substring(16),\n    sampled: parentSampled === undefined ? false : parentSampled,\n  };\n\n  if (parentSpanId) {\n    propagationContext.parentSpanId = parentSpanId;\n  }\n\n  if (dynamicSamplingContext) {\n    propagationContext.dsc = dynamicSamplingContext as DynamicSamplingContext;\n  }\n\n  return {\n    traceparentData,\n    dynamicSamplingContext,\n    propagationContext,\n  };\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nexport function generateSentryTraceHeader(\n  traceId: string = uuid4(),\n  spanId: string = uuid4().substring(16),\n  sampled?: boolean,\n): string {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n"],"names":["baggage","baggageHeaderToDynamicSamplingContext","uuid4"],"mappings":";;;;;AAKA,MAAA,kBAAA,GAAA,IAAA,MAAA;AACA,EAAA,UAAA;AACA,IAAA,iBAAA;AACA,IAAA,mBAAA;AACA,IAAA,WAAA;AACA,IAAA,UAAA;AACA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,sBAAA,CAAA,WAAA,EAAA;AACA,EAAA,IAAA,CAAA,WAAA,EAAA;AACA,IAAA,OAAA,SAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,OAAA,GAAA,WAAA,CAAA,KAAA,CAAA,kBAAA,CAAA,CAAA;AACA,EAAA,IAAA,CAAA,OAAA,EAAA;AACA,IAAA,OAAA,SAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,aAAA,CAAA;AACA,EAAA,IAAA,OAAA,CAAA,CAAA,CAAA,KAAA,GAAA,EAAA;AACA,IAAA,aAAA,GAAA,IAAA,CAAA;AACA,GAAA,MAAA,IAAA,OAAA,CAAA,CAAA,CAAA,KAAA,GAAA,EAAA;AACA,IAAA,aAAA,GAAA,KAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA;AACA,IAAA,OAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,IAAA,aAAA;AACA,IAAA,YAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,yBAAA;AACA,EAAA,WAAA;AACA,EAAAA,SAAA;AACA;;AAIA,CAAA;AACA,EAAA,MAAA,eAAA,GAAA,sBAAA,CAAA,WAAA,CAAA,CAAA;AACA,EAAA,MAAA,sBAAA,GAAAC,6CAAA,CAAAD,SAAA,CAAA,CAAA;AACA;AACA,EAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,aAAA,EAAA,GAAA,eAAA,IAAA,EAAA,CAAA;AACA;AACA,EAAA,MAAA,kBAAA,GAAA;AACA,IAAA,OAAA,EAAA,OAAA,IAAAE,UAAA,EAAA;AACA,IAAA,MAAA,EAAAA,UAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA;AACA,IAAA,OAAA,EAAA,aAAA,KAAA,SAAA,GAAA,KAAA,GAAA,aAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,IAAA,YAAA,EAAA;AACA,IAAA,kBAAA,CAAA,YAAA,GAAA,YAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,sBAAA,EAAA;AACA,IAAA,kBAAA,CAAA,GAAA,GAAA,sBAAA,EAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA;AACA,IAAA,eAAA;AACA,IAAA,sBAAA;AACA,IAAA,kBAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,yBAAA;AACA,EAAA,OAAA,GAAAA,UAAA,EAAA;AACA,EAAA,MAAA,GAAAA,UAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA;AACA,EAAA,OAAA;AACA,EAAA;AACA,EAAA,IAAA,aAAA,GAAA,EAAA,CAAA;AACA,EAAA,IAAA,OAAA,KAAA,SAAA,EAAA;AACA,IAAA,aAAA,GAAA,OAAA,GAAA,IAAA,GAAA,IAAA,CAAA;AACA,GAAA;AACA,EAAA,OAAA,CAAA,EAAA,OAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,aAAA,CAAA,CAAA,CAAA;AACA;;;;;;;"}
\ No newline at end of file
+{"version":3,"file":"tracing.js","sources":["../../src/tracing.ts"],"sourcesContent":["import type { DynamicSamplingContext, PropagationContext, TraceparentData } from '@sentry/types';\n\nimport { baggageHeaderToDynamicSamplingContext } from './baggage';\nimport { uuid4 } from './misc';\n\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent?: string): TraceparentData | undefined {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled: boolean | undefined;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n */\nexport function tracingContextFromHeaders(\n  sentryTrace: Parameters<typeof extractTraceparentData>[0],\n  baggage: Parameters<typeof baggageHeaderToDynamicSamplingContext>[0],\n): {\n  traceparentData: ReturnType<typeof extractTraceparentData>;\n  dynamicSamplingContext: ReturnType<typeof baggageHeaderToDynamicSamplingContext>;\n  propagationContext: PropagationContext;\n} {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  const propagationContext: PropagationContext = {\n    traceId: traceId || uuid4(),\n    spanId: uuid4().substring(16),\n    sampled: parentSampled,\n  };\n\n  if (parentSpanId) {\n    propagationContext.parentSpanId = parentSpanId;\n  }\n\n  if (dynamicSamplingContext) {\n    propagationContext.dsc = dynamicSamplingContext as DynamicSamplingContext;\n  }\n\n  return {\n    traceparentData,\n    dynamicSamplingContext,\n    propagationContext,\n  };\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nexport function generateSentryTraceHeader(\n  traceId: string = uuid4(),\n  spanId: string = uuid4().substring(16),\n  sampled?: boolean,\n): string {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n"],"names":["baggage","baggageHeaderToDynamicSamplingContext","uuid4"],"mappings":";;;;;AAKA,MAAA,kBAAA,GAAA,IAAA,MAAA;AACA,EAAA,UAAA;AACA,IAAA,iBAAA;AACA,IAAA,mBAAA;AACA,IAAA,WAAA;AACA,IAAA,UAAA;AACA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,sBAAA,CAAA,WAAA,EAAA;AACA,EAAA,IAAA,CAAA,WAAA,EAAA;AACA,IAAA,OAAA,SAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,OAAA,GAAA,WAAA,CAAA,KAAA,CAAA,kBAAA,CAAA,CAAA;AACA,EAAA,IAAA,CAAA,OAAA,EAAA;AACA,IAAA,OAAA,SAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,aAAA,CAAA;AACA,EAAA,IAAA,OAAA,CAAA,CAAA,CAAA,KAAA,GAAA,EAAA;AACA,IAAA,aAAA,GAAA,IAAA,CAAA;AACA,GAAA,MAAA,IAAA,OAAA,CAAA,CAAA,CAAA,KAAA,GAAA,EAAA;AACA,IAAA,aAAA,GAAA,KAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA;AACA,IAAA,OAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,IAAA,aAAA;AACA,IAAA,YAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,yBAAA;AACA,EAAA,WAAA;AACA,EAAAA,SAAA;AACA;;AAIA,CAAA;AACA,EAAA,MAAA,eAAA,GAAA,sBAAA,CAAA,WAAA,CAAA,CAAA;AACA,EAAA,MAAA,sBAAA,GAAAC,6CAAA,CAAAD,SAAA,CAAA,CAAA;AACA;AACA,EAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,aAAA,EAAA,GAAA,eAAA,IAAA,EAAA,CAAA;AACA;AACA,EAAA,MAAA,kBAAA,GAAA;AACA,IAAA,OAAA,EAAA,OAAA,IAAAE,UAAA,EAAA;AACA,IAAA,MAAA,EAAAA,UAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA;AACA,IAAA,OAAA,EAAA,aAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,IAAA,YAAA,EAAA;AACA,IAAA,kBAAA,CAAA,YAAA,GAAA,YAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,sBAAA,EAAA;AACA,IAAA,kBAAA,CAAA,GAAA,GAAA,sBAAA,EAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA;AACA,IAAA,eAAA;AACA,IAAA,sBAAA;AACA,IAAA,kBAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,yBAAA;AACA,EAAA,OAAA,GAAAA,UAAA,EAAA;AACA,EAAA,MAAA,GAAAA,UAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA;AACA,EAAA,OAAA;AACA,EAAA;AACA,EAAA,IAAA,aAAA,GAAA,EAAA,CAAA;AACA,EAAA,IAAA,OAAA,KAAA,SAAA,EAAA;AACA,IAAA,aAAA,GAAA,OAAA,GAAA,IAAA,GAAA,IAAA,CAAA;AACA,GAAA;AACA,EAAA,OAAA,CAAA,EAAA,OAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,aAAA,CAAA,CAAA,CAAA;AACA;;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_createNamedExportFrom.js b/node_modules/@sentry/utils/esm/buildPolyfills/_createNamedExportFrom.js
deleted file mode 100644
index 113c2ce..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_createNamedExportFrom.js
+++ /dev/null
@@ -1,20 +0,0 @@
-/**
- * Copy a property from the given object into `exports`, under the given name.
- *
- * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
- *
- * @param obj The object containing the property to copy.
- * @param localName The name under which to export the property
- * @param importedName The name under which the property lives in `obj`
- */
-function _createNamedExportFrom(obj, localName, importedName) {
-  exports[localName] = obj[importedName];
-}
-
-// Sucrase version:
-// function _createNamedExportFrom(obj, localName, importedName) {
-//   Object.defineProperty(exports, localName, {enumerable: true, get: () => obj[importedName]});
-// }
-
-export { _createNamedExportFrom };
-//# sourceMappingURL=_createNamedExportFrom.js.map
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_createNamedExportFrom.js.map b/node_modules/@sentry/utils/esm/buildPolyfills/_createNamedExportFrom.js.map
deleted file mode 100644
index 0bdea93..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_createNamedExportFrom.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_createNamedExportFrom.js","sources":["../../../src/buildPolyfills/_createNamedExportFrom.ts"],"sourcesContent":["// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericObject } from './types';\n\ndeclare const exports: GenericObject;\n\n/**\n * Copy a property from the given object into `exports`, under the given name.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param obj The object containing the property to copy.\n * @param localName The name under which to export the property\n * @param importedName The name under which the property lives in `obj`\n */\nexport function _createNamedExportFrom(obj: GenericObject, localName: string, importedName: string): void {\n  exports[localName] = obj[importedName];\n}\n\n// Sucrase version:\n// function _createNamedExportFrom(obj, localName, importedName) {\n//   Object.defineProperty(exports, localName, {enumerable: true, get: () => obj[importedName]});\n// }\n"],"names":[],"mappings":"AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,sBAAA,CAAA,GAAA,EAAA,SAAA,EAAA,YAAA,EAAA;AACA,EAAA,OAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,YAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_createStarExport.js b/node_modules/@sentry/utils/esm/buildPolyfills/_createStarExport.js
deleted file mode 100644
index d410a4d..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_createStarExport.js
+++ /dev/null
@@ -1,27 +0,0 @@
-/**
- * Copy properties from an object into `exports`.
- *
- * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
- *
- * @param obj The object containing the properties to copy.
- */
-function _createStarExport(obj) {
-  Object.keys(obj)
-    .filter(key => key !== 'default' && key !== '__esModule' && !(key in exports))
-    .forEach(key => (exports[key] = obj[key]));
-}
-
-// Sucrase version:
-// function _createStarExport(obj) {
-//   Object.keys(obj)
-//     .filter(key => key !== 'default' && key !== '__esModule')
-//     .forEach(key => {
-//       if (exports.hasOwnProperty(key)) {
-//         return;
-//       }
-//       Object.defineProperty(exports, key, { enumerable: true, get: () => obj[key] });
-//     });
-// }
-
-export { _createStarExport };
-//# sourceMappingURL=_createStarExport.js.map
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_createStarExport.js.map b/node_modules/@sentry/utils/esm/buildPolyfills/_createStarExport.js.map
deleted file mode 100644
index fad6dd3..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_createStarExport.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_createStarExport.js","sources":["../../../src/buildPolyfills/_createStarExport.ts"],"sourcesContent":["// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericObject } from './types';\n\ndeclare const exports: GenericObject;\n\n/**\n * Copy properties from an object into `exports`.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param obj The object containing the properties to copy.\n */\nexport function _createStarExport(obj: GenericObject): void {\n  Object.keys(obj)\n    .filter(key => key !== 'default' && key !== '__esModule' && !(key in exports))\n    .forEach(key => (exports[key] = obj[key]));\n}\n\n// Sucrase version:\n// function _createStarExport(obj) {\n//   Object.keys(obj)\n//     .filter(key => key !== 'default' && key !== '__esModule')\n//     .forEach(key => {\n//       if (exports.hasOwnProperty(key)) {\n//         return;\n//       }\n//       Object.defineProperty(exports, key, { enumerable: true, get: () => obj[key] });\n//     });\n// }\n"],"names":[],"mappings":"AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,iBAAA,CAAA,GAAA,EAAA;AACA,EAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,KAAA,MAAA,CAAA,GAAA,IAAA,GAAA,KAAA,SAAA,IAAA,GAAA,KAAA,YAAA,IAAA,EAAA,GAAA,IAAA,OAAA,CAAA,CAAA;AACA,KAAA,OAAA,CAAA,GAAA,KAAA,OAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_interopDefault.js b/node_modules/@sentry/utils/esm/buildPolyfills/_interopDefault.js
deleted file mode 100644
index 90bb7b0..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_interopDefault.js
+++ /dev/null
@@ -1,19 +0,0 @@
-/**
- * Unwraps a module if it has been wrapped in an object under the key `default`.
- *
- * Adapted from Rollup (https://github.com/rollup/rollup)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns The full module, unwrapped if necessary.
- */
-function _interopDefault(requireResult) {
-  return requireResult.__esModule ? (requireResult.default ) : requireResult;
-}
-
-// Rollup version:
-// function _interopDefault(e) {
-//   return e && e.__esModule ? e['default'] : e;
-// }
-
-export { _interopDefault };
-//# sourceMappingURL=_interopDefault.js.map
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_interopDefault.js.map b/node_modules/@sentry/utils/esm/buildPolyfills/_interopDefault.js.map
deleted file mode 100644
index 11598c2..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_interopDefault.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopDefault.js","sources":["../../../src/buildPolyfills/_interopDefault.ts"],"sourcesContent":["// https://github.com/rollup/rollup/tree/c2cda424e69686671ba010d628c0f70c43a563f8\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 [these people](https://github.com/rollup/rollup/graphs/contributors)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions\n// of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT\n// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Unwraps a module if it has been wrapped in an object under the key `default`.\n *\n * Adapted from Rollup (https://github.com/rollup/rollup)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns The full module, unwrapped if necessary.\n */\nexport function _interopDefault(requireResult: RequireResult): RequireResult {\n  return requireResult.__esModule ? (requireResult.default as RequireResult) : requireResult;\n}\n\n// Rollup version:\n// function _interopDefault(e) {\n//   return e && e.__esModule ? e['default'] : e;\n// }\n"],"names":[],"mappings":"AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,eAAA,CAAA,aAAA,EAAA;AACA,EAAA,OAAA,aAAA,CAAA,UAAA,IAAA,aAAA,CAAA,OAAA,KAAA,aAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespace.js b/node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespace.js
deleted file mode 100644
index 0a9a806..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespace.js
+++ /dev/null
@@ -1,27 +0,0 @@
-/**
- * Adds a self-referential `default` property to CJS modules which aren't the result of transpilation from ESM modules.
- *
- * Adapted from Rollup (https://github.com/rollup/rollup)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property
- */
-function _interopNamespace(requireResult) {
-  return requireResult.__esModule ? requireResult : { ...requireResult, default: requireResult };
-}
-
-// Rollup version (with `output.externalLiveBindings` and `output.freeze` both set to false)
-// function _interopNamespace(e) {
-//   if (e && e.__esModule) return e;
-//   var n = Object.create(null);
-//   if (e) {
-//     for (var k in e) {
-//       n[k] = e[k];
-//     }
-//   }
-//   n["default"] = e;
-//   return n;
-// }
-
-export { _interopNamespace };
-//# sourceMappingURL=_interopNamespace.js.map
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespace.js.map b/node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespace.js.map
deleted file mode 100644
index add76e3..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespace.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopNamespace.js","sources":["../../../src/buildPolyfills/_interopNamespace.ts"],"sourcesContent":["// https://github.com/rollup/rollup/tree/c2cda424e69686671ba010d628c0f70c43a563f8\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 [these people](https://github.com/rollup/rollup/graphs/contributors)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions\n// of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT\n// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Adds a self-referential `default` property to CJS modules which aren't the result of transpilation from ESM modules.\n *\n * Adapted from Rollup (https://github.com/rollup/rollup)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property\n */\nexport function _interopNamespace(requireResult: RequireResult): RequireResult {\n  return requireResult.__esModule ? requireResult : { ...requireResult, default: requireResult };\n}\n\n// Rollup version (with `output.externalLiveBindings` and `output.freeze` both set to false)\n// function _interopNamespace(e) {\n//   if (e && e.__esModule) return e;\n//   var n = Object.create(null);\n//   if (e) {\n//     for (var k in e) {\n//       n[k] = e[k];\n//     }\n//   }\n//   n[\"default\"] = e;\n//   return n;\n// }\n"],"names":[],"mappings":"AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,iBAAA,CAAA,aAAA,EAAA;AACA,EAAA,OAAA,aAAA,CAAA,UAAA,GAAA,aAAA,GAAA,EAAA,GAAA,aAAA,EAAA,OAAA,EAAA,aAAA,EAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespaceDefaultOnly.js b/node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespaceDefaultOnly.js
deleted file mode 100644
index 2ee758b..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespaceDefaultOnly.js
+++ /dev/null
@@ -1,25 +0,0 @@
-/**
- * Wrap a module in an object, as the value under the key `default`.
- *
- * Adapted from Rollup (https://github.com/rollup/rollup)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns An object containing the key-value pair (`default`, `requireResult`)
- */
-function _interopNamespaceDefaultOnly(requireResult) {
-  return {
-    __proto__: null,
-    default: requireResult,
-  };
-}
-
-// Rollup version
-// function _interopNamespaceDefaultOnly(e) {
-//   return {
-//     __proto__: null,
-//     'default': e
-//   };
-// }
-
-export { _interopNamespaceDefaultOnly };
-//# sourceMappingURL=_interopNamespaceDefaultOnly.js.map
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespaceDefaultOnly.js.map b/node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespaceDefaultOnly.js.map
deleted file mode 100644
index 4f92dca..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespaceDefaultOnly.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopNamespaceDefaultOnly.js","sources":["../../../src/buildPolyfills/_interopNamespaceDefaultOnly.ts"],"sourcesContent":["// https://github.com/rollup/rollup/tree/c2cda424e69686671ba010d628c0f70c43a563f8\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 [these people](https://github.com/rollup/rollup/graphs/contributors)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions\n// of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT\n// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Wrap a module in an object, as the value under the key `default`.\n *\n * Adapted from Rollup (https://github.com/rollup/rollup)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns An object containing the key-value pair (`default`, `requireResult`)\n */\nexport function _interopNamespaceDefaultOnly(requireResult: RequireResult): RequireResult {\n  return {\n    __proto__: null,\n    default: requireResult,\n  };\n}\n\n// Rollup version\n// function _interopNamespaceDefaultOnly(e) {\n//   return {\n//     __proto__: null,\n//     'default': e\n//   };\n// }\n"],"names":[],"mappings":"AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,4BAAA,CAAA,aAAA,EAAA;AACA,EAAA,OAAA;AACA,IAAA,SAAA,EAAA,IAAA;AACA,IAAA,OAAA,EAAA,aAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireDefault.js b/node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireDefault.js
deleted file mode 100644
index 90a34c3..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireDefault.js
+++ /dev/null
@@ -1,19 +0,0 @@
-/**
- * Wraps modules which aren't the result of transpiling an ESM module in an object under the key `default`
- *
- * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns `requireResult` or `requireResult` wrapped in an object, keyed as `default`
- */
-function _interopRequireDefault(requireResult) {
-  return requireResult.__esModule ? requireResult : { default: requireResult };
-}
-
-// Sucrase version
-// function _interopRequireDefault(obj) {
-//   return obj && obj.__esModule ? obj : { default: obj };
-// }
-
-export { _interopRequireDefault };
-//# sourceMappingURL=_interopRequireDefault.js.map
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireDefault.js.map b/node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireDefault.js.map
deleted file mode 100644
index dd0944b..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireDefault.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopRequireDefault.js","sources":["../../../src/buildPolyfills/_interopRequireDefault.ts"],"sourcesContent":["// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Wraps modules which aren't the result of transpiling an ESM module in an object under the key `default`\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns `requireResult` or `requireResult` wrapped in an object, keyed as `default`\n */\nexport function _interopRequireDefault(requireResult: RequireResult): RequireResult {\n  return requireResult.__esModule ? requireResult : { default: requireResult };\n}\n\n// Sucrase version\n// function _interopRequireDefault(obj) {\n//   return obj && obj.__esModule ? obj : { default: obj };\n// }\n"],"names":[],"mappings":"AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,sBAAA,CAAA,aAAA,EAAA;AACA,EAAA,OAAA,aAAA,CAAA,UAAA,GAAA,aAAA,GAAA,EAAA,OAAA,EAAA,aAAA,EAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireWildcard.js b/node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireWildcard.js
deleted file mode 100644
index c28b21b..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireWildcard.js
+++ /dev/null
@@ -1,32 +0,0 @@
-/**
- * Adds a `default` property to CJS modules which aren't the result of transpilation from ESM modules.
- *
- * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property
- */
-function _interopRequireWildcard(requireResult) {
-  return requireResult.__esModule ? requireResult : { ...requireResult, default: requireResult };
-}
-
-// Sucrase version
-// function _interopRequireWildcard(obj) {
-//   if (obj && obj.__esModule) {
-//     return obj;
-//   } else {
-//     var newObj = {};
-//     if (obj != null) {
-//       for (var key in obj) {
-//         if (Object.prototype.hasOwnProperty.call(obj, key)) {
-//           newObj[key] = obj[key];
-//         }
-//       }
-//     }
-//     newObj.default = obj;
-//     return newObj;
-//   }
-// }
-
-export { _interopRequireWildcard };
-//# sourceMappingURL=_interopRequireWildcard.js.map
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireWildcard.js.map b/node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireWildcard.js.map
deleted file mode 100644
index 3e72118..0000000
--- a/node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireWildcard.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopRequireWildcard.js","sources":["../../../src/buildPolyfills/_interopRequireWildcard.ts"],"sourcesContent":["// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Adds a `default` property to CJS modules which aren't the result of transpilation from ESM modules.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property\n */\nexport function _interopRequireWildcard(requireResult: RequireResult): RequireResult {\n  return requireResult.__esModule ? requireResult : { ...requireResult, default: requireResult };\n}\n\n// Sucrase version\n// function _interopRequireWildcard(obj) {\n//   if (obj && obj.__esModule) {\n//     return obj;\n//   } else {\n//     var newObj = {};\n//     if (obj != null) {\n//       for (var key in obj) {\n//         if (Object.prototype.hasOwnProperty.call(obj, key)) {\n//           newObj[key] = obj[key];\n//         }\n//       }\n//     }\n//     newObj.default = obj;\n//     return newObj;\n//   }\n// }\n"],"names":[],"mappings":"AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,uBAAA,CAAA,aAAA,EAAA;AACA,EAAA,OAAA,aAAA,CAAA,UAAA,GAAA,aAAA,GAAA,EAAA,GAAA,aAAA,EAAA,OAAA,EAAA,aAAA,EAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/index.js b/node_modules/@sentry/utils/esm/buildPolyfills/index.js
index fd18228..562543b 100644
--- a/node_modules/@sentry/utils/esm/buildPolyfills/index.js
+++ b/node_modules/@sentry/utils/esm/buildPolyfills/index.js
@@ -1,13 +1,6 @@
 export { _asyncNullishCoalesce } from './_asyncNullishCoalesce.js';
 export { _asyncOptionalChain } from './_asyncOptionalChain.js';
 export { _asyncOptionalChainDelete } from './_asyncOptionalChainDelete.js';
-export { _createNamedExportFrom } from './_createNamedExportFrom.js';
-export { _createStarExport } from './_createStarExport.js';
-export { _interopDefault } from './_interopDefault.js';
-export { _interopNamespace } from './_interopNamespace.js';
-export { _interopNamespaceDefaultOnly } from './_interopNamespaceDefaultOnly.js';
-export { _interopRequireDefault } from './_interopRequireDefault.js';
-export { _interopRequireWildcard } from './_interopRequireWildcard.js';
 export { _nullishCoalesce } from './_nullishCoalesce.js';
 export { _optionalChain } from './_optionalChain.js';
 export { _optionalChainDelete } from './_optionalChainDelete.js';
diff --git a/node_modules/@sentry/utils/esm/buildPolyfills/index.js.map b/node_modules/@sentry/utils/esm/buildPolyfills/index.js.map
index dff53ae..88f5618 100644
--- a/node_modules/@sentry/utils/esm/buildPolyfills/index.js.map
+++ b/node_modules/@sentry/utils/esm/buildPolyfills/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sources":[],"sourcesContent":[],"names":[],"mappings":";;;;;;;;;;;;"}
\ No newline at end of file
+{"version":3,"file":"index.js","sources":[],"sourcesContent":[],"names":[],"mappings":";;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/env.js b/node_modules/@sentry/utils/esm/env.js
index dacd2f1..46dc077 100644
--- a/node_modules/@sentry/utils/esm/env.js
+++ b/node_modules/@sentry/utils/esm/env.js
@@ -26,7 +26,7 @@ function isBrowserBundle() {
  * Get source of SDK.
  */
 function getSDKSource() {
-  // @ts-ignore "npm" is injected by rollup during build process
+  // @ts-expect-error "npm" is injected by rollup during build process
   return "npm";
 }
 
diff --git a/node_modules/@sentry/utils/esm/env.js.map b/node_modules/@sentry/utils/esm/env.js.map
index 674ec7e..138c99e 100644
--- a/node_modules/@sentry/utils/esm/env.js.map
+++ b/node_modules/@sentry/utils/esm/env.js.map
@@ -1 +1 @@
-{"version":3,"file":"env.js","sources":["../../src/env.ts"],"sourcesContent":["/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-ignore __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA,SAAA,eAAA,GAAA;AACA,EAAA,OAAA,OAAA,yBAAA,KAAA,WAAA,IAAA,CAAA,CAAA,yBAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,YAAA,GAAA;AACA;AACA,EAAA,OAAA,KAAA,CAAA;AACA;;;;"}
\ No newline at end of file
+{"version":3,"file":"env.js","sources":["../../src/env.ts"],"sourcesContent":["/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-expect-error __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA,SAAA,eAAA,GAAA;AACA,EAAA,OAAA,OAAA,yBAAA,KAAA,WAAA,IAAA,CAAA,CAAA,yBAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,YAAA,GAAA;AACA;AACA,EAAA,OAAA,KAAA,CAAA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/eventbuilder.js b/node_modules/@sentry/utils/esm/eventbuilder.js
new file mode 100644
index 0000000..bf4832e
--- /dev/null
+++ b/node_modules/@sentry/utils/esm/eventbuilder.js
@@ -0,0 +1,123 @@
+import { isError, isPlainObject } from './is.js';
+import { addExceptionTypeValue, addExceptionMechanism } from './misc.js';
+import { normalizeToSize } from './normalize.js';
+import { extractExceptionKeysForMessage } from './object.js';
+
+/**
+ * Extracts stack frames from the error.stack string
+ */
+function parseStackFrames(stackParser, error) {
+  return stackParser(error.stack || '', 1);
+}
+
+/**
+ * Extracts stack frames from the error and builds a Sentry Exception
+ */
+function exceptionFromError(stackParser, error) {
+  const exception = {
+    type: error.name || error.constructor.name,
+    value: error.message,
+  };
+
+  const frames = parseStackFrames(stackParser, error);
+  if (frames.length) {
+    exception.stacktrace = { frames };
+  }
+
+  return exception;
+}
+
+/**
+ * Builds and Event from a Exception
+ * @hidden
+ */
+function eventFromUnknownInput(
+  getCurrentHub,
+  stackParser,
+  exception,
+  hint,
+) {
+  let ex = exception;
+  const providedMechanism =
+    hint && hint.data && (hint.data ).mechanism;
+  const mechanism = providedMechanism || {
+    handled: true,
+    type: 'generic',
+  };
+
+  if (!isError(exception)) {
+    if (isPlainObject(exception)) {
+      // This will allow us to group events based on top-level keys
+      // which is much better than creating new group when any key/value change
+      const message = `Non-Error exception captured with keys: ${extractExceptionKeysForMessage(exception)}`;
+
+      const hub = getCurrentHub();
+      const client = hub.getClient();
+      const normalizeDepth = client && client.getOptions().normalizeDepth;
+      hub.configureScope(scope => {
+        scope.setExtra('__serialized__', normalizeToSize(exception, normalizeDepth));
+      });
+
+      ex = (hint && hint.syntheticException) || new Error(message);
+      (ex ).message = message;
+    } else {
+      // This handles when someone does: `throw "something awesome";`
+      // We use synthesized Error here so we can extract a (rough) stack trace.
+      ex = (hint && hint.syntheticException) || new Error(exception );
+      (ex ).message = exception ;
+    }
+    mechanism.synthetic = true;
+  }
+
+  const event = {
+    exception: {
+      values: [exceptionFromError(stackParser, ex )],
+    },
+  };
+
+  addExceptionTypeValue(event, undefined, undefined);
+  addExceptionMechanism(event, mechanism);
+
+  return {
+    ...event,
+    event_id: hint && hint.event_id,
+  };
+}
+
+/**
+ * Builds and Event from a Message
+ * @hidden
+ */
+function eventFromMessage(
+  stackParser,
+  message,
+  // eslint-disable-next-line deprecation/deprecation
+  level = 'info',
+  hint,
+  attachStacktrace,
+) {
+  const event = {
+    event_id: hint && hint.event_id,
+    level,
+    message,
+  };
+
+  if (attachStacktrace && hint && hint.syntheticException) {
+    const frames = parseStackFrames(stackParser, hint.syntheticException);
+    if (frames.length) {
+      event.exception = {
+        values: [
+          {
+            value: message,
+            stacktrace: { frames },
+          },
+        ],
+      };
+    }
+  }
+
+  return event;
+}
+
+export { eventFromMessage, eventFromUnknownInput, exceptionFromError, parseStackFrames };
+//# sourceMappingURL=eventbuilder.js.map
diff --git a/node_modules/@sentry/utils/esm/eventbuilder.js.map b/node_modules/@sentry/utils/esm/eventbuilder.js.map
new file mode 100644
index 0000000..a9236bf
--- /dev/null
+++ b/node_modules/@sentry/utils/esm/eventbuilder.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"eventbuilder.js","sources":["../../src/eventbuilder.ts"],"sourcesContent":["import type {\n  Event,\n  EventHint,\n  Exception,\n  Hub,\n  Mechanism,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\n\nimport { isError, isPlainObject } from './is';\nimport { addExceptionMechanism, addExceptionTypeValue } from './misc';\nimport { normalizeToSize } from './normalize';\nimport { extractExceptionKeysForMessage } from './object';\n\n/**\n * Extracts stack frames from the error.stack string\n */\nexport function parseStackFrames(stackParser: StackParser, error: Error): StackFrame[] {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nexport function exceptionFromError(stackParser: StackParser, error: Error): Exception {\n  const exception: Exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nexport function eventFromUnknownInput(\n  getCurrentHub: () => Hub,\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n): Event {\n  let ex: unknown = exception;\n  const providedMechanism: Mechanism | undefined =\n    hint && hint.data && (hint.data as { mechanism: Mechanism }).mechanism;\n  const mechanism: Mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  if (!isError(exception)) {\n    if (isPlainObject(exception)) {\n      // This will allow us to group events based on top-level keys\n      // which is much better than creating new group when any key/value change\n      const message = `Non-Error exception captured with keys: ${extractExceptionKeysForMessage(exception)}`;\n\n      const hub = getCurrentHub();\n      const client = hub.getClient();\n      const normalizeDepth = client && client.getOptions().normalizeDepth;\n      hub.configureScope(scope => {\n        scope.setExtra('__serialized__', normalizeToSize(exception, normalizeDepth));\n      });\n\n      ex = (hint && hint.syntheticException) || new Error(message);\n      (ex as Error).message = message;\n    } else {\n      // This handles when someone does: `throw \"something awesome\";`\n      // We use synthesized Error here so we can extract a (rough) stack trace.\n      ex = (hint && hint.syntheticException) || new Error(exception as string);\n      (ex as Error).message = exception as string;\n    }\n    mechanism.synthetic = true;\n  }\n\n  const event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex as Error)],\n    },\n  };\n\n  addExceptionTypeValue(event, undefined, undefined);\n  addExceptionMechanism(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {\n    event_id: hint && hint.event_id,\n    level,\n    message,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n    }\n  }\n\n  return event;\n}\n"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/index.js b/node_modules/@sentry/utils/esm/index.js
index 787efe3..a1283b1 100644
--- a/node_modules/@sentry/utils/esm/index.js
+++ b/node_modules/@sentry/utils/esm/index.js
@@ -3,9 +3,9 @@ export { getDomElement, getLocationHref, htmlTreeAsString } from './browser.js';
 export { dsnFromString, dsnToString, makeDsn } from './dsn.js';
 export { SentryError } from './error.js';
 export { GLOBAL_OBJ, getGlobalObject, getGlobalSingleton } from './worldwide.js';
-export { SENTRY_XHR_DATA_KEY, addInstrumentationHandler, parseFetchArgs } from './instrument.js';
-export { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable } from './is.js';
-export { CONSOLE_LEVELS, consoleSandbox, logger } from './logger.js';
+export { SENTRY_XHR_DATA_KEY, addInstrumentationHandler, instrumentDOM, instrumentXHR, parseFetchArgs, resetInstrumentationHandlers } from './instrument.js';
+export { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable, isVueViewModel } from './is.js';
+export { CONSOLE_LEVELS, consoleSandbox, logger, originalConsoleMethods } from './logger.js';
 export { memoBuilder } from './memo.js';
 export { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 } from './misc.js';
 export { dynamicRequire, isNodeEnv, loadModule } from './node.js';
@@ -29,6 +29,7 @@ export { BAGGAGE_HEADER_NAME, MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREF
 export { getNumberOfUrlSegments, getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment } from './url.js';
 export { addOrUpdateIntegration } from './userIntegrations.js';
 export { makeFifoCache } from './cache.js';
+export { eventFromMessage, eventFromUnknownInput, exceptionFromError, parseStackFrames } from './eventbuilder.js';
 export { escapeStringForRegex } from './vendor/escapeStringForRegex.js';
 export { supportsHistory } from './vendor/supportsHistory.js';
 //# sourceMappingURL=index.js.map
diff --git a/node_modules/@sentry/utils/esm/index.js.map b/node_modules/@sentry/utils/esm/index.js.map
index 8f59729..efaf032 100644
--- a/node_modules/@sentry/utils/esm/index.js.map
+++ b/node_modules/@sentry/utils/esm/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sources":[],"sourcesContent":[],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
+{"version":3,"file":"index.js","sources":[],"sourcesContent":[],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/instrument.js b/node_modules/@sentry/utils/esm/instrument.js
index 618cf3c..9eb5a9e 100644
--- a/node_modules/@sentry/utils/esm/instrument.js
+++ b/node_modules/@sentry/utils/esm/instrument.js
@@ -1,9 +1,9 @@
 import { isString } from './is.js';
-import { logger, CONSOLE_LEVELS } from './logger.js';
+import { logger, CONSOLE_LEVELS, originalConsoleMethods } from './logger.js';
 import { fill } from './object.js';
 import { getFunctionName } from './stacktrace.js';
 import { supportsNativeFetch } from './supports.js';
-import { getGlobalObject } from './worldwide.js';
+import { getGlobalObject, GLOBAL_OBJ } from './worldwide.js';
 import { supportsHistory } from './vendor/supportsHistory.js';
 
 // eslint-disable-next-line deprecation/deprecation
@@ -72,6 +72,16 @@ function addInstrumentationHandler(type, callback) {
   instrument(type);
 }
 
+/**
+ * Reset all instrumentation handlers.
+ * This can be used by tests to ensure we have a clean slate of instrumentation handlers.
+ */
+function resetInstrumentationHandlers() {
+  Object.keys(handlers).forEach(key => {
+    handlers[key ] = undefined;
+  });
+}
+
 /** JSDoc */
 function triggerHandlers(type, data) {
   if (!type || !handlers[type]) {
@@ -93,23 +103,23 @@ function triggerHandlers(type, data) {
 
 /** JSDoc */
 function instrumentConsole() {
-  if (!('console' in WINDOW)) {
+  if (!('console' in GLOBAL_OBJ)) {
     return;
   }
 
   CONSOLE_LEVELS.forEach(function (level) {
-    if (!(level in WINDOW.console)) {
+    if (!(level in GLOBAL_OBJ.console)) {
       return;
     }
 
-    fill(WINDOW.console, level, function (originalConsoleMethod) {
+    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {
+      originalConsoleMethods[level] = originalConsoleMethod;
+
       return function (...args) {
         triggerHandlers('console', { args, level });
 
-        // this fails for some browsers. :(
-        if (originalConsoleMethod) {
-          originalConsoleMethod.apply(WINDOW.console, args);
-        }
+        const log = originalConsoleMethods[level];
+        log && log.apply(GLOBAL_OBJ.console, args);
       };
     });
   });
@@ -121,7 +131,7 @@ function instrumentFetch() {
     return;
   }
 
-  fill(WINDOW, 'fetch', function (originalFetch) {
+  fill(GLOBAL_OBJ, 'fetch', function (originalFetch) {
     return function (...args) {
       const { method, url } = parseFetchArgs(args);
 
@@ -139,7 +149,7 @@ function instrumentFetch() {
       });
 
       // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
-      return originalFetch.apply(WINDOW, args).then(
+      return originalFetch.apply(GLOBAL_OBJ, args).then(
         (response) => {
           triggerHandlers('fetch', {
             ...handlerData,
@@ -214,7 +224,8 @@ function parseFetchArgs(fetchArgs) {
 
 /** JSDoc */
 function instrumentXHR() {
-  if (!('XMLHttpRequest' in WINDOW)) {
+  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
+  if (!(WINDOW ).XMLHttpRequest) {
     return;
   }
 
@@ -485,7 +496,7 @@ function makeDOMEventHandler(handler, globalListener = false) {
 
 /** JSDoc */
 function instrumentDOM() {
-  if (!('document' in WINDOW)) {
+  if (!WINDOW.document) {
     return;
   }
 
@@ -627,5 +638,5 @@ function instrumentUnhandledRejection() {
   WINDOW.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;
 }
 
-export { SENTRY_XHR_DATA_KEY, addInstrumentationHandler, parseFetchArgs };
+export { SENTRY_XHR_DATA_KEY, addInstrumentationHandler, instrumentDOM, instrumentXHR, parseFetchArgs, resetInstrumentationHandlers };
 //# sourceMappingURL=instrument.js.map
diff --git a/node_modules/@sentry/utils/esm/instrument.js.map b/node_modules/@sentry/utils/esm/instrument.js.map
index 4ae246d..c653d06 100644
--- a/node_modules/@sentry/utils/esm/instrument.js.map
+++ b/node_modules/@sentry/utils/esm/instrument.js.map
@@ -1 +1 @@
-{"version":3,"file":"instrument.js","sources":["../../src/instrument.ts"],"sourcesContent":["/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type {\n  HandlerDataFetch,\n  HandlerDataXhr,\n  SentryWrappedXMLHttpRequest,\n  SentryXhrData,\n  WrappedFunction,\n} from '@sentry/types';\n\nimport { isString } from './is';\nimport { CONSOLE_LEVELS, logger } from './logger';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v2__';\n\nexport type InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      __DEBUG_BUILD__ && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(type: InstrumentHandlerType, callback: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      __DEBUG_BUILD__ &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in WINDOW)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: string): void {\n    if (!(level in WINDOW.console)) {\n      return;\n    }\n\n    fill(WINDOW.console, level, function (originalConsoleMethod: () => any): Function {\n      return function (...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(WINDOW.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(WINDOW, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(WINDOW, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\n/** JSDoc */\nfunction instrumentXHR(): void {\n  if (!('XMLHttpRequest' in WINDOW)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const url = args[1];\n      const xhrInfo: SentryXhrData = (this[SENTRY_XHR_DATA_KEY] = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n        request_headers: {},\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args: args as [string, string],\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr: this,\n          } as HandlerDataXhr);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs as [string, string];\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n      if (sentryXhrData && args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous: Event | undefined, current: Event): boolean {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event: Event): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target as HTMLElement;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler: Function, globalListener: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\n/** JSDoc */\nfunction instrumentDOM(): void {\n  if (!('document' in WINDOW)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler: (typeof WINDOW)['onerror'] | null = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg: unknown, url: unknown, line: unknown, column: unknown, error: unknown): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  WINDOW.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nlet _oldOnUnhandledRejectionHandler: (typeof WINDOW)['onunhandledrejection'] | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  WINDOW.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"instrument.js","sources":["../../src/instrument.ts"],"sourcesContent":["/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type {\n  HandlerDataFetch,\n  HandlerDataXhr,\n  SentryWrappedXMLHttpRequest,\n  SentryXhrData,\n  WrappedFunction,\n} from '@sentry/types';\n\nimport { isString } from './is';\nimport type { ConsoleLevel } from './logger';\nimport { CONSOLE_LEVELS, logger, originalConsoleMethods } from './logger';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\nimport { getGlobalObject, GLOBAL_OBJ } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v2__';\n\nexport type InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      __DEBUG_BUILD__ && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(type: InstrumentHandlerType, callback: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(callback);\n  instrument(type);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      __DEBUG_BUILD__ &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\n/** JSDoc */\nexport function instrumentXHR(): void {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW as any).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const url = args[1];\n      const xhrInfo: SentryXhrData = (this[SENTRY_XHR_DATA_KEY] = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n        request_headers: {},\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args: args as [string, string],\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr: this,\n          } as HandlerDataXhr);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs as [string, string];\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n      if (sentryXhrData && args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous: Event | undefined, current: Event): boolean {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event: Event): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target as HTMLElement;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler: Function, globalListener: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\n/** JSDoc */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler: (typeof WINDOW)['onerror'] | null = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg: unknown, url: unknown, line: unknown, column: unknown, error: unknown): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  WINDOW.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nlet _oldOnUnhandledRejectionHandler: (typeof WINDOW)['onunhandledrejection'] | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  WINDOW.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/is.js b/node_modules/@sentry/utils/esm/is.js
index 8b60633..2ed8c2e 100644
--- a/node_modules/@sentry/utils/esm/is.js
+++ b/node_modules/@sentry/utils/esm/is.js
@@ -175,5 +175,16 @@ function isInstanceOf(wat, base) {
   }
 }
 
-export { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };
+/**
+ * Checks whether given value's type is a Vue ViewModel.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+function isVueViewModel(wat) {
+  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.
+  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));
+}
+
+export { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable, isVueViewModel };
 //# sourceMappingURL=is.js.map
diff --git a/node_modules/@sentry/utils/esm/is.js.map b/node_modules/@sentry/utils/esm/is.js.map
index 321cbb5..f4829fb 100644
--- a/node_modules/@sentry/utils/esm/is.js.map
+++ b/node_modules/@sentry/utils/esm/is.js.map
@@ -1 +1 @@
-{"version":3,"file":"is.js","sources":["../../src/is.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"is.js","sources":["../../src/is.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n"],"names":[],"mappings":"AAKA;AACA,MAAA,cAAA,GAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,OAAA,CAAA,GAAA,EAAA;AACA,EAAA,QAAA,cAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,IAAA,KAAA,gBAAA,CAAA;AACA,IAAA,KAAA,oBAAA,CAAA;AACA,IAAA,KAAA,uBAAA;AACA,MAAA,OAAA,IAAA,CAAA;AACA,IAAA;AACA,MAAA,OAAA,YAAA,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;AACA,GAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,SAAA,CAAA,GAAA,EAAA,SAAA,EAAA;AACA,EAAA,OAAA,cAAA,CAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,QAAA,EAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,YAAA,CAAA,GAAA,EAAA;AACA,EAAA,OAAA,SAAA,CAAA,GAAA,EAAA,YAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,UAAA,CAAA,GAAA,EAAA;AACA,EAAA,OAAA,SAAA,CAAA,GAAA,EAAA,UAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,cAAA,CAAA,GAAA,EAAA;AACA,EAAA,OAAA,SAAA,CAAA,GAAA,EAAA,cAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,QAAA,CAAA,GAAA,EAAA;AACA,EAAA,OAAA,SAAA,CAAA,GAAA,EAAA,QAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,WAAA,CAAA,GAAA,EAAA;AACA,EAAA,OAAA,GAAA,KAAA,IAAA,KAAA,OAAA,GAAA,KAAA,QAAA,IAAA,OAAA,GAAA,KAAA,UAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,aAAA,CAAA,GAAA,EAAA;AACA,EAAA,OAAA,SAAA,CAAA,GAAA,EAAA,QAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,OAAA,CAAA,GAAA,EAAA;AACA,EAAA,OAAA,OAAA,KAAA,KAAA,WAAA,IAAA,YAAA,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,SAAA,CAAA,GAAA,EAAA;AACA,EAAA,OAAA,OAAA,OAAA,KAAA,WAAA,IAAA,YAAA,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,QAAA,CAAA,GAAA,EAAA;AACA,EAAA,OAAA,SAAA,CAAA,GAAA,EAAA,QAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,UAAA,CAAA,GAAA,EAAA;AACA;AACA,EAAA,OAAA,OAAA,CAAA,GAAA,IAAA,GAAA,CAAA,IAAA,IAAA,OAAA,GAAA,CAAA,IAAA,KAAA,UAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,gBAAA,CAAA,GAAA,EAAA;AACA,EAAA,OAAA,aAAA,CAAA,GAAA,CAAA,IAAA,aAAA,IAAA,GAAA,IAAA,gBAAA,IAAA,GAAA,IAAA,iBAAA,IAAA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,KAAA,CAAA,GAAA,EAAA;AACA,EAAA,OAAA,OAAA,GAAA,KAAA,QAAA,IAAA,GAAA,KAAA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,YAAA,CAAA,GAAA,EAAA,IAAA,EAAA;AACA,EAAA,IAAA;AACA,IAAA,OAAA,GAAA,YAAA,IAAA,CAAA;AACA,GAAA,CAAA,OAAA,EAAA,EAAA;AACA,IAAA,OAAA,KAAA,CAAA;AACA,GAAA;AACA,CAAA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,cAAA,CAAA,GAAA,EAAA;AACA;AACA,EAAA,OAAA,CAAA,EAAA,OAAA,GAAA,KAAA,QAAA,IAAA,GAAA,KAAA,IAAA,KAAA,CAAA,GAAA,GAAA,OAAA,IAAA,CAAA,GAAA,GAAA,MAAA,CAAA,CAAA,CAAA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/logger.js b/node_modules/@sentry/utils/esm/logger.js
index 6c8c644..efa35e4 100644
--- a/node_modules/@sentry/utils/esm/logger.js
+++ b/node_modules/@sentry/utils/esm/logger.js
@@ -1,10 +1,17 @@
-import { getGlobalSingleton, GLOBAL_OBJ } from './worldwide.js';
+import { GLOBAL_OBJ } from './worldwide.js';
 
 /** Prefix for logging strings */
 const PREFIX = 'Sentry Logger ';
 
 const CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;
 
+/** This may be mutated by the console instrumentation. */
+const originalConsoleMethods
+
+ = {};
+
+/** JSDoc */
+
 /**
  * Temporarily disable sentry console instrumentations.
  *
@@ -16,26 +23,24 @@ function consoleSandbox(callback) {
     return callback();
   }
 
-  const originalConsole = GLOBAL_OBJ.console ;
-  const wrappedLevels = {};
+  const console = GLOBAL_OBJ.console ;
+  const wrappedFuncs = {};
+
+  const wrappedLevels = Object.keys(originalConsoleMethods) ;
 
   // Restore all wrapped console methods
-  CONSOLE_LEVELS.forEach(level => {
-    // TODO(v7): Remove this check as it's only needed for Node 6
-    const originalWrappedFunc =
-      originalConsole[level] && (originalConsole[level] ).__sentry_original__;
-    if (level in originalConsole && originalWrappedFunc) {
-      wrappedLevels[level] = originalConsole[level] ;
-      originalConsole[level] = originalWrappedFunc ;
-    }
+  wrappedLevels.forEach(level => {
+    const originalConsoleMethod = originalConsoleMethods[level] ;
+    wrappedFuncs[level] = console[level] ;
+    console[level] = originalConsoleMethod;
   });
 
   try {
     return callback();
   } finally {
     // Revert restoration to wrapped state
-    Object.keys(wrappedLevels).forEach(level => {
-      originalConsole[level] = wrappedLevels[level ];
+    wrappedLevels.forEach(level => {
+      console[level] = wrappedFuncs[level] ;
     });
   }
 }
@@ -71,13 +76,7 @@ function makeLogger() {
   return logger ;
 }
 
-// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used
-let logger;
-if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {
-  logger = getGlobalSingleton('logger', makeLogger);
-} else {
-  logger = makeLogger();
-}
+const logger = makeLogger();
 
-export { CONSOLE_LEVELS, consoleSandbox, logger };
+export { CONSOLE_LEVELS, consoleSandbox, logger, originalConsoleMethods };
 //# sourceMappingURL=logger.js.map
diff --git a/node_modules/@sentry/utils/esm/logger.js.map b/node_modules/@sentry/utils/esm/logger.js.map
index bbf71b8..cbf0cd8 100644
--- a/node_modules/@sentry/utils/esm/logger.js.map
+++ b/node_modules/@sentry/utils/esm/logger.js.map
@@ -1 +1 @@
-{"version":3,"file":"logger.js","sources":["../../src/logger.ts"],"sourcesContent":["import type { WrappedFunction } from '@sentry/types';\n\nimport { getGlobalSingleton, GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] as const;\nexport type ConsoleLevel = (typeof CONSOLE_LEVELS)[number];\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<(typeof CONSOLE_LEVELS)[number], LoggerMethod>;\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = GLOBAL_OBJ.console as Console & Record<string, unknown>;\n  const wrappedLevels: Partial<LoggerConsoleMethods> = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] as WrappedFunction).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] as LoggerConsoleMethods[typeof level];\n      originalConsole[level] = originalWrappedFunc as Console[typeof level];\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level as (typeof CONSOLE_LEVELS)[number]];\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if (__DEBUG_BUILD__) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger: Logger;\nif (__DEBUG_BUILD__) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { logger };\n"],"names":[],"mappings":";;AAIA;AACA,MAAA,MAAA,GAAA,gBAAA,CAAA;AACA;AACA,MAAA,cAAA,GAAA,CAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA,OAAA,CAAA,EAAA;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,cAAA,CAAA,QAAA,EAAA;AACA,EAAA,IAAA,EAAA,SAAA,IAAA,UAAA,CAAA,EAAA;AACA,IAAA,OAAA,QAAA,EAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,eAAA,GAAA,UAAA,CAAA,OAAA,EAAA;AACA,EAAA,MAAA,aAAA,GAAA,EAAA,CAAA;AACA;AACA;AACA,EAAA,cAAA,CAAA,OAAA,CAAA,KAAA,IAAA;AACA;AACA,IAAA,MAAA,mBAAA;AACA,MAAA,eAAA,CAAA,KAAA,CAAA,IAAA,CAAA,eAAA,CAAA,KAAA,CAAA,GAAA,mBAAA,CAAA;AACA,IAAA,IAAA,KAAA,IAAA,eAAA,IAAA,mBAAA,EAAA;AACA,MAAA,aAAA,CAAA,KAAA,CAAA,GAAA,eAAA,CAAA,KAAA,CAAA,EAAA;AACA,MAAA,eAAA,CAAA,KAAA,CAAA,GAAA,mBAAA,EAAA;AACA,KAAA;AACA,GAAA,CAAA,CAAA;AACA;AACA,EAAA,IAAA;AACA,IAAA,OAAA,QAAA,EAAA,CAAA;AACA,GAAA,SAAA;AACA;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,OAAA,CAAA,KAAA,IAAA;AACA,MAAA,eAAA,CAAA,KAAA,CAAA,GAAA,aAAA,CAAA,KAAA,EAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA;AACA,CAAA;AACA;AACA,SAAA,UAAA,GAAA;AACA,EAAA,IAAA,OAAA,GAAA,KAAA,CAAA;AACA,EAAA,MAAA,MAAA,GAAA;AACA,IAAA,MAAA,EAAA,MAAA;AACA,MAAA,OAAA,GAAA,IAAA,CAAA;AACA,KAAA;AACA,IAAA,OAAA,EAAA,MAAA;AACA,MAAA,OAAA,GAAA,KAAA,CAAA;AACA,KAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,KAAA,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA,GAAA;AACA,IAAA,cAAA,CAAA,OAAA,CAAA,IAAA,IAAA;AACA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,IAAA,KAAA;AACA,QAAA,IAAA,OAAA,EAAA;AACA,UAAA,cAAA,CAAA,MAAA;AACA,YAAA,UAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,EAAA,GAAA,IAAA,CAAA,CAAA;AACA,WAAA,CAAA,CAAA;AACA,SAAA;AACA,OAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA,MAAA;AACA,IAAA,cAAA,CAAA,OAAA,CAAA,IAAA,IAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,GAAA,MAAA,SAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA,MAAA,EAAA;AACA,CAAA;AACA;AACA;AACA,IAAA,OAAA;AACA,KAAA,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA,GAAA;AACA,EAAA,MAAA,GAAA,kBAAA,CAAA,QAAA,EAAA,UAAA,CAAA,CAAA;AACA,CAAA,MAAA;AACA,EAAA,MAAA,GAAA,UAAA,EAAA,CAAA;AACA;;;;"}
\ No newline at end of file
+{"version":3,"file":"logger.js","sources":["../../src/logger.ts"],"sourcesContent":["import { GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] as const;\nexport type ConsoleLevel = (typeof CONSOLE_LEVELS)[number];\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key in ConsoleLevel]?: (...args: any[]) => void;\n} = {};\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\n    wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as LoggerMethod;\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if (__DEBUG_BUILD__) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\nexport const logger = makeLogger();\n"],"names":[],"mappings":";;AAEA;AACA,MAAA,MAAA,GAAA,gBAAA,CAAA;AACA;AACA,MAAA,cAAA,GAAA,CAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA,OAAA,CAAA,EAAA;;AAMA;AACA,MAAA,sBAAA;;AAGA,GAAA,GAAA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,cAAA,CAAA,QAAA,EAAA;AACA,EAAA,IAAA,EAAA,SAAA,IAAA,UAAA,CAAA,EAAA;AACA,IAAA,OAAA,QAAA,EAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,OAAA,GAAA,UAAA,CAAA,OAAA,EAAA;AACA,EAAA,MAAA,YAAA,GAAA,EAAA,CAAA;AACA;AACA,EAAA,MAAA,aAAA,GAAA,MAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,EAAA;AACA;AACA;AACA,EAAA,aAAA,CAAA,OAAA,CAAA,KAAA,IAAA;AACA,IAAA,MAAA,qBAAA,GAAA,sBAAA,CAAA,KAAA,CAAA,EAAA;AACA,IAAA,YAAA,CAAA,KAAA,CAAA,GAAA,OAAA,CAAA,KAAA,CAAA,EAAA;AACA,IAAA,OAAA,CAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AACA,GAAA,CAAA,CAAA;AACA;AACA,EAAA,IAAA;AACA,IAAA,OAAA,QAAA,EAAA,CAAA;AACA,GAAA,SAAA;AACA;AACA,IAAA,aAAA,CAAA,OAAA,CAAA,KAAA,IAAA;AACA,MAAA,OAAA,CAAA,KAAA,CAAA,GAAA,YAAA,CAAA,KAAA,CAAA,EAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA;AACA,CAAA;AACA;AACA,SAAA,UAAA,GAAA;AACA,EAAA,IAAA,OAAA,GAAA,KAAA,CAAA;AACA,EAAA,MAAA,MAAA,GAAA;AACA,IAAA,MAAA,EAAA,MAAA;AACA,MAAA,OAAA,GAAA,IAAA,CAAA;AACA,KAAA;AACA,IAAA,OAAA,EAAA,MAAA;AACA,MAAA,OAAA,GAAA,KAAA,CAAA;AACA,KAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,KAAA,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA,GAAA;AACA,IAAA,cAAA,CAAA,OAAA,CAAA,IAAA,IAAA;AACA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,IAAA,KAAA;AACA,QAAA,IAAA,OAAA,EAAA;AACA,UAAA,cAAA,CAAA,MAAA;AACA,YAAA,UAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,EAAA,GAAA,IAAA,CAAA,CAAA;AACA,WAAA,CAAA,CAAA;AACA,SAAA;AACA,OAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA,MAAA;AACA,IAAA,cAAA,CAAA,OAAA,CAAA,IAAA,IAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,GAAA,MAAA,SAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA,MAAA,EAAA;AACA,CAAA;AACA;AACA,MAAA,MAAA,GAAA,UAAA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/misc.js b/node_modules/@sentry/utils/esm/misc.js
index ffb7cae..ce1294e 100644
--- a/node_modules/@sentry/utils/esm/misc.js
+++ b/node_modules/@sentry/utils/esm/misc.js
@@ -11,13 +11,19 @@ function uuid4() {
   const gbl = GLOBAL_OBJ ;
   const crypto = gbl.crypto || gbl.msCrypto;
 
-  if (crypto && crypto.randomUUID) {
-    return crypto.randomUUID().replace(/-/g, '');
+  let getRandomByte = () => Math.random() * 16;
+  try {
+    if (crypto && crypto.randomUUID) {
+      return crypto.randomUUID().replace(/-/g, '');
+    }
+    if (crypto && crypto.getRandomValues) {
+      getRandomByte = () => crypto.getRandomValues(new Uint8Array(1));
+    }
+  } catch (_) {
+    // some runtimes can crash invoking crypto
+    // https://github.com/getsentry/sentry-javascript/issues/8935
   }
 
-  const getRandomByte =
-    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;
-
   // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523
   // Concatenating the following numbers as strings results in '10000000100040008000100000000000'
   return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>
diff --git a/node_modules/@sentry/utils/esm/misc.js.map b/node_modules/@sentry/utils/esm/misc.js.map
index 6a8f65b..1ad95d4 100644
--- a/node_modules/@sentry/utils/esm/misc.js.map
+++ b/node_modules/@sentry/utils/esm/misc.js.map
@@ -1 +1 @@
-{"version":3,"file":"misc.js","sources":["../../src/misc.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"misc.js","sources":["../../src/misc.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => crypto.getRandomValues(new Uint8Array(1))[0];\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n"],"names":[],"mappings":";;;;AAkBA;AACA;AACA;AACA;AACA;AACA,SAAA,KAAA,GAAA;AACA,EAAA,MAAA,GAAA,GAAA,UAAA,EAAA;AACA,EAAA,MAAA,MAAA,GAAA,GAAA,CAAA,MAAA,IAAA,GAAA,CAAA,QAAA,CAAA;AACA;AACA,EAAA,IAAA,aAAA,GAAA,MAAA,IAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA;AACA,EAAA,IAAA;AACA,IAAA,IAAA,MAAA,IAAA,MAAA,CAAA,UAAA,EAAA;AACA,MAAA,OAAA,MAAA,CAAA,UAAA,EAAA,CAAA,OAAA,CAAA,IAAA,EAAA,EAAA,CAAA,CAAA;AACA,KAAA;AACA,IAAA,IAAA,MAAA,IAAA,MAAA,CAAA,eAAA,EAAA;AACA,MAAA,aAAA,GAAA,MAAA,MAAA,CAAA,eAAA,CAAA,IAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,KAAA;AACA,GAAA,CAAA,OAAA,CAAA,EAAA;AACA;AACA;AACA,GAAA;AACA;AACA;AACA;AACA,EAAA,OAAA,CAAA,CAAA,CAAA,GAAA,CAAA,KAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,EAAA,OAAA,CAAA,QAAA,EAAA,CAAA;AACA;AACA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,aAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,QAAA,CAAA,EAAA,CAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA,SAAA,iBAAA,CAAA,KAAA,EAAA;AACA,EAAA,OAAA,KAAA,CAAA,SAAA,IAAA,KAAA,CAAA,SAAA,CAAA,MAAA,GAAA,KAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,mBAAA,CAAA,KAAA,EAAA;AACA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,EAAA,GAAA,KAAA,CAAA;AACA,EAAA,IAAA,OAAA,EAAA;AACA,IAAA,OAAA,OAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,cAAA,GAAA,iBAAA,CAAA,KAAA,CAAA,CAAA;AACA,EAAA,IAAA,cAAA,EAAA;AACA,IAAA,IAAA,cAAA,CAAA,IAAA,IAAA,cAAA,CAAA,KAAA,EAAA;AACA,MAAA,OAAA,CAAA,EAAA,cAAA,CAAA,IAAA,CAAA,EAAA,EAAA,cAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,KAAA;AACA,IAAA,OAAA,cAAA,CAAA,IAAA,IAAA,cAAA,CAAA,KAAA,IAAA,OAAA,IAAA,WAAA,CAAA;AACA,GAAA;AACA,EAAA,OAAA,OAAA,IAAA,WAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,qBAAA,CAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA;AACA,EAAA,MAAA,SAAA,IAAA,KAAA,CAAA,SAAA,GAAA,KAAA,CAAA,SAAA,IAAA,EAAA,CAAA,CAAA;AACA,EAAA,MAAA,MAAA,IAAA,SAAA,CAAA,MAAA,GAAA,SAAA,CAAA,MAAA,IAAA,EAAA,CAAA,CAAA;AACA,EAAA,MAAA,cAAA,IAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA;AACA,EAAA,IAAA,CAAA,cAAA,CAAA,KAAA,EAAA;AACA,IAAA,cAAA,CAAA,KAAA,GAAA,KAAA,IAAA,EAAA,CAAA;AACA,GAAA;AACA,EAAA,IAAA,CAAA,cAAA,CAAA,IAAA,EAAA;AACA,IAAA,cAAA,CAAA,IAAA,GAAA,IAAA,IAAA,OAAA,CAAA;AACA,GAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,qBAAA,CAAA,KAAA,EAAA,YAAA,EAAA;AACA,EAAA,MAAA,cAAA,GAAA,iBAAA,CAAA,KAAA,CAAA,CAAA;AACA,EAAA,IAAA,CAAA,cAAA,EAAA;AACA,IAAA,OAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,gBAAA,GAAA,EAAA,IAAA,EAAA,SAAA,EAAA,OAAA,EAAA,IAAA,EAAA,CAAA;AACA,EAAA,MAAA,gBAAA,GAAA,cAAA,CAAA,SAAA,CAAA;AACA,EAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,gBAAA,EAAA,GAAA,gBAAA,EAAA,GAAA,YAAA,EAAA,CAAA;AACA;AACA,EAAA,IAAA,YAAA,IAAA,MAAA,IAAA,YAAA,EAAA;AACA,IAAA,MAAA,UAAA,GAAA,EAAA,IAAA,gBAAA,IAAA,gBAAA,CAAA,IAAA,CAAA,EAAA,GAAA,YAAA,CAAA,IAAA,EAAA,CAAA;AACA,IAAA,cAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAA,CAAA;AACA,GAAA;AACA,CAAA;AACA;AACA;AACA,MAAA,aAAA;AACA,EAAA,qLAAA,CAAA;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA,SAAA,WAAA,CAAA,KAAA,EAAA;AACA,EAAA,MAAA,KAAA,GAAA,KAAA,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,CAAA;AACA,EAAA,MAAA,KAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA;AACA,EAAA,MAAA,KAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA;AACA,EAAA,MAAA,KAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA;AACA,EAAA,OAAA;AACA,IAAA,aAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,IAAA,KAAA,EAAA,KAAA,CAAA,KAAA,CAAA,GAAA,SAAA,GAAA,KAAA;AACA,IAAA,KAAA,EAAA,KAAA,CAAA,KAAA,CAAA,GAAA,SAAA,GAAA,KAAA;AACA,IAAA,KAAA,EAAA,KAAA,CAAA,KAAA,CAAA,GAAA,SAAA,GAAA,KAAA;AACA,IAAA,UAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,iBAAA,CAAA,KAAA,EAAA,KAAA,EAAA,cAAA,GAAA,CAAA,EAAA;AACA;AACA,EAAA,IAAA,KAAA,CAAA,MAAA,KAAA,SAAA,EAAA;AACA,IAAA,OAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,QAAA,GAAA,KAAA,CAAA,MAAA,CAAA;AACA,EAAA,MAAA,UAAA,GAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,QAAA,GAAA,CAAA,EAAA,KAAA,CAAA,MAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA;AACA,EAAA,KAAA,CAAA,WAAA,GAAA,KAAA;AACA,KAAA,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,EAAA,UAAA,GAAA,cAAA,CAAA,EAAA,UAAA,CAAA;AACA,KAAA,GAAA,CAAA,CAAA,IAAA,KAAA,QAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,EAAA,KAAA,CAAA,YAAA,GAAA,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA,QAAA,GAAA,CAAA,EAAA,UAAA,CAAA,CAAA,EAAA,KAAA,CAAA,KAAA,IAAA,CAAA,CAAA,CAAA;AACA;AACA,EAAA,KAAA,CAAA,YAAA,GAAA,KAAA;AACA,KAAA,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,GAAA,CAAA,EAAA,QAAA,CAAA,EAAA,UAAA,GAAA,CAAA,GAAA,cAAA,CAAA;AACA,KAAA,GAAA,CAAA,CAAA,IAAA,KAAA,QAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,uBAAA,CAAA,SAAA,EAAA;AACA;AACA,EAAA,IAAA,SAAA,IAAA,CAAA,SAAA,GAAA,mBAAA,EAAA;AACA,IAAA,OAAA,IAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA;AACA;AACA;AACA,IAAA,wBAAA,CAAA,SAAA,GAAA,qBAAA,EAAA,IAAA,CAAA,CAAA;AACA,GAAA,CAAA,OAAA,GAAA,EAAA;AACA;AACA,GAAA;AACA;AACA,EAAA,OAAA,KAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,QAAA,CAAA,UAAA,EAAA;AACA,EAAA,OAAA,KAAA,CAAA,OAAA,CAAA,UAAA,CAAA,GAAA,UAAA,GAAA,CAAA,UAAA,CAAA,CAAA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/normalize.js b/node_modules/@sentry/utils/esm/normalize.js
index 5d52c58..a8a81ee 100644
--- a/node_modules/@sentry/utils/esm/normalize.js
+++ b/node_modules/@sentry/utils/esm/normalize.js
@@ -1,4 +1,4 @@
-import { isNaN, isSyntheticEvent } from './is.js';
+import { isNaN, isVueViewModel, isSyntheticEvent } from './is.js';
 import { memoBuilder } from './memo.js';
 import { convertToPlainObject } from './object.js';
 import { getFunctionName } from './stacktrace.js';
@@ -201,6 +201,10 @@ function stringifyValue(
       return '[Document]';
     }
 
+    if (isVueViewModel(value)) {
+      return '[VueViewModel]';
+    }
+
     // React's SyntheticEvent thingy
     if (isSyntheticEvent(value)) {
       return '[SyntheticEvent]';
diff --git a/node_modules/@sentry/utils/esm/normalize.js.map b/node_modules/@sentry/utils/esm/normalize.js.map
index dcaee36..b764123 100644
--- a/node_modules/@sentry/utils/esm/normalize.js.map
+++ b/node_modules/@sentry/utils/esm/normalize.js.map
@@ -1 +1 @@
-{"version":3,"file":"normalize.js","sources":["../../src/normalize.ts"],"sourcesContent":["import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n// TODO remove this in v7 (this means the method will no longer be exported, under any name)\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"normalize.js","sources":["../../src/normalize.ts"],"sourcesContent":["import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent, isVueViewModel } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n// TODO remove this in v7 (this means the method will no longer be exported, under any name)\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/string.js b/node_modules/@sentry/utils/esm/string.js
index 3398545..b6d3514 100644
--- a/node_modules/@sentry/utils/esm/string.js
+++ b/node_modules/@sentry/utils/esm/string.js
@@ -1,4 +1,4 @@
-import { isString, isRegExp } from './is.js';
+import { isVueViewModel, isString, isRegExp } from './is.js';
 
 /**
  * Truncates given string to the maximum characters count
@@ -74,7 +74,16 @@ function safeJoin(input, delimiter) {
   for (let i = 0; i < input.length; i++) {
     const value = input[i];
     try {
-      output.push(String(value));
+      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of
+      // console warnings. This happens when a Vue template is rendered with
+      // an undeclared variable, which we try to stringify, ultimately causing
+      // Vue to issue another warning which repeats indefinitely.
+      // see: https://github.com/getsentry/sentry-javascript/pull/8981
+      if (isVueViewModel(value)) {
+        output.push('[VueViewModel]');
+      } else {
+        output.push(String(value));
+      }
     } catch (e) {
       output.push('[value cannot be serialized]');
     }
diff --git a/node_modules/@sentry/utils/esm/string.js.map b/node_modules/@sentry/utils/esm/string.js.map
index ba7b016..a994ba3 100644
--- a/node_modules/@sentry/utils/esm/string.js.map
+++ b/node_modules/@sentry/utils/esm/string.js.map
@@ -1 +1 @@
-{"version":3,"file":"string.js","sources":["../../src/string.ts"],"sourcesContent":["import { isRegExp, isString } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"string.js","sources":["../../src/string.ts"],"sourcesContent":["import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/supports.js b/node_modules/@sentry/utils/esm/supports.js
index 7a560a3..8e0d9b2 100644
--- a/node_modules/@sentry/utils/esm/supports.js
+++ b/node_modules/@sentry/utils/esm/supports.js
@@ -29,7 +29,7 @@ function supportsDOMError() {
   try {
     // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':
     // 1 argument required, but only 0 present.
-    // @ts-ignore It really needs 1 argument, not 0.
+    // @ts-expect-error It really needs 1 argument, not 0.
     new DOMError('');
     return true;
   } catch (e) {
diff --git a/node_modules/@sentry/utils/esm/supports.js.map b/node_modules/@sentry/utils/esm/supports.js.map
index bf309cf..255e36e 100644
--- a/node_modules/@sentry/utils/esm/supports.js.map
+++ b/node_modules/@sentry/utils/esm/supports.js.map
@@ -1 +1 @@
-{"version":3,"file":"supports.js","sources":["../../src/supports.ts"],"sourcesContent":["import { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      __DEBUG_BUILD__ &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"supports.js","sources":["../../src/supports.ts"],"sourcesContent":["import { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      __DEBUG_BUILD__ &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/esm/tracing.js b/node_modules/@sentry/utils/esm/tracing.js
index f8d265b..4928f07 100644
--- a/node_modules/@sentry/utils/esm/tracing.js
+++ b/node_modules/@sentry/utils/esm/tracing.js
@@ -57,7 +57,7 @@ function tracingContextFromHeaders(
   const propagationContext = {
     traceId: traceId || uuid4(),
     spanId: uuid4().substring(16),
-    sampled: parentSampled === undefined ? false : parentSampled,
+    sampled: parentSampled,
   };
 
   if (parentSpanId) {
diff --git a/node_modules/@sentry/utils/esm/tracing.js.map b/node_modules/@sentry/utils/esm/tracing.js.map
index 1017b49..26db461 100644
--- a/node_modules/@sentry/utils/esm/tracing.js.map
+++ b/node_modules/@sentry/utils/esm/tracing.js.map
@@ -1 +1 @@
-{"version":3,"file":"tracing.js","sources":["../../src/tracing.ts"],"sourcesContent":["import type { DynamicSamplingContext, PropagationContext, TraceparentData } from '@sentry/types';\n\nimport { baggageHeaderToDynamicSamplingContext } from './baggage';\nimport { uuid4 } from './misc';\n\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent?: string): TraceparentData | undefined {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled: boolean | undefined;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n */\nexport function tracingContextFromHeaders(\n  sentryTrace: Parameters<typeof extractTraceparentData>[0],\n  baggage: Parameters<typeof baggageHeaderToDynamicSamplingContext>[0],\n): {\n  traceparentData: ReturnType<typeof extractTraceparentData>;\n  dynamicSamplingContext: ReturnType<typeof baggageHeaderToDynamicSamplingContext>;\n  propagationContext: PropagationContext;\n} {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  const propagationContext: PropagationContext = {\n    traceId: traceId || uuid4(),\n    spanId: uuid4().substring(16),\n    sampled: parentSampled === undefined ? false : parentSampled,\n  };\n\n  if (parentSpanId) {\n    propagationContext.parentSpanId = parentSpanId;\n  }\n\n  if (dynamicSamplingContext) {\n    propagationContext.dsc = dynamicSamplingContext as DynamicSamplingContext;\n  }\n\n  return {\n    traceparentData,\n    dynamicSamplingContext,\n    propagationContext,\n  };\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nexport function generateSentryTraceHeader(\n  traceId: string = uuid4(),\n  spanId: string = uuid4().substring(16),\n  sampled?: boolean,\n): string {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n"],"names":[],"mappings":";;;AAKA,MAAA,kBAAA,GAAA,IAAA,MAAA;AACA,EAAA,UAAA;AACA,IAAA,iBAAA;AACA,IAAA,mBAAA;AACA,IAAA,WAAA;AACA,IAAA,UAAA;AACA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,sBAAA,CAAA,WAAA,EAAA;AACA,EAAA,IAAA,CAAA,WAAA,EAAA;AACA,IAAA,OAAA,SAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,OAAA,GAAA,WAAA,CAAA,KAAA,CAAA,kBAAA,CAAA,CAAA;AACA,EAAA,IAAA,CAAA,OAAA,EAAA;AACA,IAAA,OAAA,SAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,aAAA,CAAA;AACA,EAAA,IAAA,OAAA,CAAA,CAAA,CAAA,KAAA,GAAA,EAAA;AACA,IAAA,aAAA,GAAA,IAAA,CAAA;AACA,GAAA,MAAA,IAAA,OAAA,CAAA,CAAA,CAAA,KAAA,GAAA,EAAA;AACA,IAAA,aAAA,GAAA,KAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA;AACA,IAAA,OAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,IAAA,aAAA;AACA,IAAA,YAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,yBAAA;AACA,EAAA,WAAA;AACA,EAAA,OAAA;AACA;;AAIA,CAAA;AACA,EAAA,MAAA,eAAA,GAAA,sBAAA,CAAA,WAAA,CAAA,CAAA;AACA,EAAA,MAAA,sBAAA,GAAA,qCAAA,CAAA,OAAA,CAAA,CAAA;AACA;AACA,EAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,aAAA,EAAA,GAAA,eAAA,IAAA,EAAA,CAAA;AACA;AACA,EAAA,MAAA,kBAAA,GAAA;AACA,IAAA,OAAA,EAAA,OAAA,IAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,KAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA;AACA,IAAA,OAAA,EAAA,aAAA,KAAA,SAAA,GAAA,KAAA,GAAA,aAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,IAAA,YAAA,EAAA;AACA,IAAA,kBAAA,CAAA,YAAA,GAAA,YAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,sBAAA,EAAA;AACA,IAAA,kBAAA,CAAA,GAAA,GAAA,sBAAA,EAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA;AACA,IAAA,eAAA;AACA,IAAA,sBAAA;AACA,IAAA,kBAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,yBAAA;AACA,EAAA,OAAA,GAAA,KAAA,EAAA;AACA,EAAA,MAAA,GAAA,KAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA;AACA,EAAA,OAAA;AACA,EAAA;AACA,EAAA,IAAA,aAAA,GAAA,EAAA,CAAA;AACA,EAAA,IAAA,OAAA,KAAA,SAAA,EAAA;AACA,IAAA,aAAA,GAAA,OAAA,GAAA,IAAA,GAAA,IAAA,CAAA;AACA,GAAA;AACA,EAAA,OAAA,CAAA,EAAA,OAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,aAAA,CAAA,CAAA,CAAA;AACA;;;;"}
\ No newline at end of file
+{"version":3,"file":"tracing.js","sources":["../../src/tracing.ts"],"sourcesContent":["import type { DynamicSamplingContext, PropagationContext, TraceparentData } from '@sentry/types';\n\nimport { baggageHeaderToDynamicSamplingContext } from './baggage';\nimport { uuid4 } from './misc';\n\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent?: string): TraceparentData | undefined {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled: boolean | undefined;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n */\nexport function tracingContextFromHeaders(\n  sentryTrace: Parameters<typeof extractTraceparentData>[0],\n  baggage: Parameters<typeof baggageHeaderToDynamicSamplingContext>[0],\n): {\n  traceparentData: ReturnType<typeof extractTraceparentData>;\n  dynamicSamplingContext: ReturnType<typeof baggageHeaderToDynamicSamplingContext>;\n  propagationContext: PropagationContext;\n} {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  const propagationContext: PropagationContext = {\n    traceId: traceId || uuid4(),\n    spanId: uuid4().substring(16),\n    sampled: parentSampled,\n  };\n\n  if (parentSpanId) {\n    propagationContext.parentSpanId = parentSpanId;\n  }\n\n  if (dynamicSamplingContext) {\n    propagationContext.dsc = dynamicSamplingContext as DynamicSamplingContext;\n  }\n\n  return {\n    traceparentData,\n    dynamicSamplingContext,\n    propagationContext,\n  };\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nexport function generateSentryTraceHeader(\n  traceId: string = uuid4(),\n  spanId: string = uuid4().substring(16),\n  sampled?: boolean,\n): string {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n"],"names":[],"mappings":";;;AAKA,MAAA,kBAAA,GAAA,IAAA,MAAA;AACA,EAAA,UAAA;AACA,IAAA,iBAAA;AACA,IAAA,mBAAA;AACA,IAAA,WAAA;AACA,IAAA,UAAA;AACA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,sBAAA,CAAA,WAAA,EAAA;AACA,EAAA,IAAA,CAAA,WAAA,EAAA;AACA,IAAA,OAAA,SAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,OAAA,GAAA,WAAA,CAAA,KAAA,CAAA,kBAAA,CAAA,CAAA;AACA,EAAA,IAAA,CAAA,OAAA,EAAA;AACA,IAAA,OAAA,SAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,aAAA,CAAA;AACA,EAAA,IAAA,OAAA,CAAA,CAAA,CAAA,KAAA,GAAA,EAAA;AACA,IAAA,aAAA,GAAA,IAAA,CAAA;AACA,GAAA,MAAA,IAAA,OAAA,CAAA,CAAA,CAAA,KAAA,GAAA,EAAA;AACA,IAAA,aAAA,GAAA,KAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA;AACA,IAAA,OAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,IAAA,aAAA;AACA,IAAA,YAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,yBAAA;AACA,EAAA,WAAA;AACA,EAAA,OAAA;AACA;;AAIA,CAAA;AACA,EAAA,MAAA,eAAA,GAAA,sBAAA,CAAA,WAAA,CAAA,CAAA;AACA,EAAA,MAAA,sBAAA,GAAA,qCAAA,CAAA,OAAA,CAAA,CAAA;AACA;AACA,EAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,aAAA,EAAA,GAAA,eAAA,IAAA,EAAA,CAAA;AACA;AACA,EAAA,MAAA,kBAAA,GAAA;AACA,IAAA,OAAA,EAAA,OAAA,IAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,KAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA;AACA,IAAA,OAAA,EAAA,aAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,IAAA,YAAA,EAAA;AACA,IAAA,kBAAA,CAAA,YAAA,GAAA,YAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,sBAAA,EAAA;AACA,IAAA,kBAAA,CAAA,GAAA,GAAA,sBAAA,EAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA;AACA,IAAA,eAAA;AACA,IAAA,sBAAA;AACA,IAAA,kBAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,yBAAA;AACA,EAAA,OAAA,GAAA,KAAA,EAAA;AACA,EAAA,MAAA,GAAA,KAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA;AACA,EAAA,OAAA;AACA,EAAA;AACA,EAAA,IAAA,aAAA,GAAA,EAAA,CAAA;AACA,EAAA,IAAA,OAAA,KAAA,SAAA,EAAA;AACA,IAAA,aAAA,GAAA,OAAA,GAAA,IAAA,GAAA,IAAA,CAAA;AACA,GAAA;AACA,EAAA,OAAA,CAAA,EAAA,OAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,aAAA,CAAA,CAAA,CAAA;AACA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types-ts3.8/aggregate-errors.d.ts b/node_modules/@sentry/utils/types-ts3.8/aggregate-errors.d.ts
new file mode 100644
index 0000000..6998e80
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/aggregate-errors.d.ts
@@ -0,0 +1,6 @@
+import { Event, EventHint, Exception, StackParser } from '@sentry/types';
+/**
+ * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.
+ */
+export declare function applyAggregateErrorsToEvent(exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception, parser: StackParser, maxValueLimit: number | undefined, key: string, limit: number, event: Event, hint?: EventHint): void;
+//# sourceMappingURL=aggregate-errors.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/baggage.d.ts b/node_modules/@sentry/utils/types-ts3.8/baggage.d.ts
new file mode 100644
index 0000000..4f1e3ec
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/baggage.d.ts
@@ -0,0 +1,29 @@
+import { DynamicSamplingContext } from '@sentry/types';
+export declare const BAGGAGE_HEADER_NAME = "baggage";
+export declare const SENTRY_BAGGAGE_KEY_PREFIX = "sentry-";
+export declare const SENTRY_BAGGAGE_KEY_PREFIX_REGEX: RegExp;
+/**
+ * Max length of a serialized baggage string
+ *
+ * https://www.w3.org/TR/baggage/#limits
+ */
+export declare const MAX_BAGGAGE_STRING_LENGTH = 8192;
+/**
+ * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the "sentry-" prefixed values
+ * from it.
+ *
+ * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.
+ * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.
+ */
+export declare function baggageHeaderToDynamicSamplingContext(baggageHeader: string | string[] | number | null | undefined | boolean): Partial<DynamicSamplingContext> | undefined;
+/**
+ * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with "sentry-".
+ *
+ * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility
+ * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is
+ * `undefined` the function will return `undefined`.
+ * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`
+ * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.
+ */
+export declare function dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext?: Partial<DynamicSamplingContext>): string | undefined;
+//# sourceMappingURL=baggage.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/browser.d.ts b/node_modules/@sentry/utils/types-ts3.8/browser.d.ts
new file mode 100644
index 0000000..24ed1ec
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/browser.d.ts
@@ -0,0 +1,32 @@
+/**
+ * Given a child DOM element, returns a query-selector statement describing that
+ * and its ancestors
+ * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]
+ * @returns generated DOM path
+ */
+export declare function htmlTreeAsString(elem: unknown, options?: string[] | {
+    keyAttrs?: string[];
+    maxStringLength?: number;
+}): string;
+/**
+ * A safe form of location.href
+ */
+export declare function getLocationHref(): string;
+/**
+ * Gets a DOM element by using document.querySelector.
+ *
+ * This wrapper will first check for the existance of the function before
+ * actually calling it so that we don't have to take care of this check,
+ * every time we want to access the DOM.
+ *
+ * Reason: DOM/querySelector is not available in all environments.
+ *
+ * We have to cast to any because utils can be consumed by a variety of environments,
+ * and we don't want to break TS users. If you know what element will be selected by
+ * `document.querySelector`, specify it as part of the generic call. For example,
+ * `const element = getDomElement<Element>('selector');`
+ *
+ * @param selector the selector string passed on to document.querySelector
+ */
+export declare function getDomElement<E = any>(selector: string): E | null;
+//# sourceMappingURL=browser.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_asyncNullishCoalesce.d.ts b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_asyncNullishCoalesce.d.ts
new file mode 100644
index 0000000..29dd19b
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_asyncNullishCoalesce.d.ts
@@ -0,0 +1,15 @@
+/**
+ * Polyfill for the nullish coalescing operator (`??`), when used in situations where at least one of the values is the
+ * result of an async operation.
+ *
+ * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the
+ * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.
+ *
+ * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
+ *
+ * @param lhs The value of the expression to the left of the `??`
+ * @param rhsFn A function returning the value of the expression to the right of the `??`
+ * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value
+ */
+export declare function _asyncNullishCoalesce(lhs: unknown, rhsFn: () => unknown): Promise<unknown>;
+//# sourceMappingURL=_asyncNullishCoalesce.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_asyncOptionalChain.d.ts b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_asyncOptionalChain.d.ts
new file mode 100644
index 0000000..75c6278
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_asyncOptionalChain.d.ts
@@ -0,0 +1,12 @@
+/**
+ * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,
+ * descriptors, and functions, for situations in which at least one part of the expression is async.
+ *
+ * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See
+ * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15
+ *
+ * @param ops Array result of expression conversion
+ * @returns The value of the expression
+ */
+export declare function _asyncOptionalChain(ops: unknown[]): Promise<unknown>;
+//# sourceMappingURL=_asyncOptionalChain.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_asyncOptionalChainDelete.d.ts b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_asyncOptionalChainDelete.d.ts
new file mode 100644
index 0000000..7c00fbb
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_asyncOptionalChainDelete.d.ts
@@ -0,0 +1,14 @@
+/**
+ * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,
+ * descriptors, and functions, in cases where the value of the expression is to be deleted.
+ *
+ * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See
+ * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15
+ *
+ * @param ops Array result of expression conversion
+ * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable
+ * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which
+ * case `false`.
+ */
+export declare function _asyncOptionalChainDelete(ops: unknown[]): Promise<boolean>;
+//# sourceMappingURL=_asyncOptionalChainDelete.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_nullishCoalesce.d.ts b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_nullishCoalesce.d.ts
new file mode 100644
index 0000000..a3cd829
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_nullishCoalesce.d.ts
@@ -0,0 +1,14 @@
+/**
+ * Polyfill for the nullish coalescing operator (`??`).
+ *
+ * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the
+ * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.
+ *
+ * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
+ *
+ * @param lhs The value of the expression to the left of the `??`
+ * @param rhsFn A function returning the value of the expression to the right of the `??`
+ * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value
+ */
+export declare function _nullishCoalesce(lhs: unknown, rhsFn: () => unknown): unknown;
+//# sourceMappingURL=_nullishCoalesce.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_optionalChain.d.ts b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_optionalChain.d.ts
new file mode 100644
index 0000000..d502a5a
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_optionalChain.d.ts
@@ -0,0 +1,12 @@
+/**
+ * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,
+ * descriptors, and functions.
+ *
+ * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
+ * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15
+ *
+ * @param ops Array result of expression conversion
+ * @returns The value of the expression
+ */
+export declare function _optionalChain(ops: unknown[]): unknown;
+//# sourceMappingURL=_optionalChain.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_optionalChainDelete.d.ts b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_optionalChainDelete.d.ts
new file mode 100644
index 0000000..8934b65
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/_optionalChainDelete.d.ts
@@ -0,0 +1,14 @@
+/**
+ * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,
+ * descriptors, and functions, in cases where the value of the expression is to be deleted.
+ *
+ * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See
+ * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15
+ *
+ * @param ops Array result of expression conversion
+ * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable
+ * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which
+ * case `false`.
+ */
+export declare function _optionalChainDelete(ops: unknown[]): boolean;
+//# sourceMappingURL=_optionalChainDelete.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/index.d.ts b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/index.d.ts
new file mode 100644
index 0000000..86acde5
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/index.d.ts
@@ -0,0 +1,7 @@
+export { _asyncNullishCoalesce } from './_asyncNullishCoalesce';
+export { _asyncOptionalChain } from './_asyncOptionalChain';
+export { _asyncOptionalChainDelete } from './_asyncOptionalChainDelete';
+export { _nullishCoalesce } from './_nullishCoalesce';
+export { _optionalChain } from './_optionalChain';
+export { _optionalChainDelete } from './_optionalChainDelete';
+//# sourceMappingURL=index.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/types.d.ts b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/types.d.ts
new file mode 100644
index 0000000..cd4d94e
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/buildPolyfills/types.d.ts
@@ -0,0 +1,8 @@
+import { Primitive } from '@sentry/types';
+export type GenericObject = {
+    [key: string]: Value;
+};
+export type GenericFunction = (...args: unknown[]) => Value;
+export type Value = Primitive | GenericFunction | GenericObject;
+export type RequireResult = GenericObject | (GenericFunction & GenericObject);
+//# sourceMappingURL=types.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/cache.d.ts b/node_modules/@sentry/utils/types-ts3.8/cache.d.ts
new file mode 100644
index 0000000..37d8fb8
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/cache.d.ts
@@ -0,0 +1,12 @@
+/**
+ * Creates a cache that evicts keys in fifo order
+ * @param size {Number}
+ */
+export declare function makeFifoCache<Key extends string, Value>(size: number): {
+    get: (key: Key) => Value | undefined;
+    add: (key: Key, value: Value) => void;
+    delete: (key: Key) => boolean;
+    clear: () => void;
+    size: () => number;
+};
+//# sourceMappingURL=cache.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/clientreport.d.ts b/node_modules/@sentry/utils/types-ts3.8/clientreport.d.ts
new file mode 100644
index 0000000..59eb7e5
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/clientreport.d.ts
@@ -0,0 +1,8 @@
+import { ClientReport, ClientReportEnvelope } from '@sentry/types';
+/**
+ * Creates client report envelope
+ * @param discarded_events An array of discard events
+ * @param dsn A DSN that can be set on the header. Optional.
+ */
+export declare function createClientReportEnvelope(discarded_events: ClientReport['discarded_events'], dsn?: string, timestamp?: number): ClientReportEnvelope;
+//# sourceMappingURL=clientreport.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/dsn.d.ts b/node_modules/@sentry/utils/types-ts3.8/dsn.d.ts
new file mode 100644
index 0000000..15de2d7
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/dsn.d.ts
@@ -0,0 +1,24 @@
+import { DsnComponents, DsnLike } from '@sentry/types';
+/**
+ * Renders the string representation of this Dsn.
+ *
+ * By default, this will render the public representation without the password
+ * component. To get the deprecated private representation, set `withPassword`
+ * to true.
+ *
+ * @param withPassword When set to true, the password will be included.
+ */
+export declare function dsnToString(dsn: DsnComponents, withPassword?: boolean): string;
+/**
+ * Parses a Dsn from a given string.
+ *
+ * @param str A Dsn as string
+ * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string
+ */
+export declare function dsnFromString(str: string): DsnComponents | undefined;
+/**
+ * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.
+ * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source
+ */
+export declare function makeDsn(from: DsnLike): DsnComponents | undefined;
+//# sourceMappingURL=dsn.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/env.d.ts b/node_modules/@sentry/utils/types-ts3.8/env.d.ts
new file mode 100644
index 0000000..3e543da
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/env.d.ts
@@ -0,0 +1,12 @@
+export type SdkSource = 'npm' | 'cdn' | 'loader';
+/**
+ * Figures out if we're building a browser bundle.
+ *
+ * @returns true if this is a browser bundle build.
+ */
+export declare function isBrowserBundle(): boolean;
+/**
+ * Get source of SDK.
+ */
+export declare function getSDKSource(): SdkSource;
+//# sourceMappingURL=env.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/envelope.d.ts b/node_modules/@sentry/utils/types-ts3.8/envelope.d.ts
new file mode 100644
index 0000000..4a8d8fd
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/envelope.d.ts
@@ -0,0 +1,51 @@
+import { Attachment, AttachmentItem, DataCategory, DsnComponents, Envelope, EnvelopeItemType, Event, EventEnvelopeHeaders, SdkInfo, SdkMetadata, TextEncoderInternal } from '@sentry/types';
+/**
+ * Creates an envelope.
+ * Make sure to always explicitly provide the generic to this function
+ * so that the envelope types resolve correctly.
+ */
+export declare function createEnvelope<E extends Envelope>(headers: E[0], items?: E[1]): E;
+/**
+ * Add an item to an envelope.
+ * Make sure to always explicitly provide the generic to this function
+ * so that the envelope types resolve correctly.
+ */
+export declare function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E;
+/**
+ * Convenience function to loop through the items and item types of an envelope.
+ * (This function was mostly created because working with envelope types is painful at the moment)
+ *
+ * If the callback returns true, the rest of the items will be skipped.
+ */
+export declare function forEachEnvelopeItem<E extends Envelope>(envelope: Envelope, callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void): boolean;
+/**
+ * Returns true if the envelope contains any of the given envelope item types
+ */
+export declare function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean;
+/**
+ * Serializes an envelope.
+ */
+export declare function serializeEnvelope(envelope: Envelope, textEncoder?: TextEncoderInternal): string | Uint8Array;
+export interface TextDecoderInternal {
+    decode(input?: Uint8Array): string;
+}
+/**
+ * Parses an envelope
+ */
+export declare function parseEnvelope(env: string | Uint8Array, textEncoder: TextEncoderInternal, textDecoder: TextDecoderInternal): Envelope;
+/**
+ * Creates attachment envelope items
+ */
+export declare function createAttachmentEnvelopeItem(attachment: Attachment, textEncoder?: TextEncoderInternal): AttachmentItem;
+/**
+ * Maps the type of an envelope item to a data category.
+ */
+export declare function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory;
+/** Extracts the minimal SDK info from from the metadata or an events */
+export declare function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined;
+/**
+ * Creates event envelope headers, based on event, sdk info and tunnel
+ * Note: This function was extracted from the core package to make it available in Replay
+ */
+export declare function createEventEnvelopeHeaders(event: Event, sdkInfo: SdkInfo | undefined, tunnel: string | undefined, dsn: DsnComponents): EventEnvelopeHeaders;
+//# sourceMappingURL=envelope.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/error.d.ts b/node_modules/@sentry/utils/types-ts3.8/error.d.ts
new file mode 100644
index 0000000..5cf5fe6
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/error.d.ts
@@ -0,0 +1,10 @@
+import { ConsoleLevel } from './logger';
+/** An error emitted by Sentry SDKs and related utilities. */
+export declare class SentryError extends Error {
+    message: string;
+    /** Display name of this error instance. */
+    name: string;
+    logLevel: ConsoleLevel;
+    constructor(message: string, logLevel?: ConsoleLevel);
+}
+//# sourceMappingURL=error.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/eventbuilder.d.ts b/node_modules/@sentry/utils/types-ts3.8/eventbuilder.d.ts
new file mode 100644
index 0000000..9791d3b
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/eventbuilder.d.ts
@@ -0,0 +1,20 @@
+import { Event, EventHint, Exception, Hub, Severity, SeverityLevel, StackFrame, StackParser } from '@sentry/types';
+/**
+ * Extracts stack frames from the error.stack string
+ */
+export declare function parseStackFrames(stackParser: StackParser, error: Error): StackFrame[];
+/**
+ * Extracts stack frames from the error and builds a Sentry Exception
+ */
+export declare function exceptionFromError(stackParser: StackParser, error: Error): Exception;
+/**
+ * Builds and Event from a Exception
+ * @hidden
+ */
+export declare function eventFromUnknownInput(getCurrentHub: () => Hub, stackParser: StackParser, exception: unknown, hint?: EventHint): Event;
+/**
+ * Builds and Event from a Message
+ * @hidden
+ */
+export declare function eventFromMessage(stackParser: StackParser, message: string, level?: Severity | SeverityLevel, hint?: EventHint, attachStacktrace?: boolean): Event;
+//# sourceMappingURL=eventbuilder.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/index.d.ts b/node_modules/@sentry/utils/types-ts3.8/index.d.ts
new file mode 100644
index 0000000..e4407ab
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/index.d.ts
@@ -0,0 +1,33 @@
+export * from './aggregate-errors';
+export * from './browser';
+export * from './dsn';
+export * from './error';
+export * from './worldwide';
+export * from './instrument';
+export * from './is';
+export * from './logger';
+export * from './memo';
+export * from './misc';
+export * from './node';
+export * from './normalize';
+export * from './object';
+export * from './path';
+export * from './promisebuffer';
+export * from './requestdata';
+export * from './severity';
+export * from './stacktrace';
+export * from './string';
+export * from './supports';
+export * from './syncpromise';
+export * from './time';
+export * from './tracing';
+export * from './env';
+export * from './envelope';
+export * from './clientreport';
+export * from './ratelimit';
+export * from './baggage';
+export * from './url';
+export * from './userIntegrations';
+export * from './cache';
+export * from './eventbuilder';
+//# sourceMappingURL=index.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/instrument.d.ts b/node_modules/@sentry/utils/types-ts3.8/instrument.d.ts
new file mode 100644
index 0000000..5ce1f96
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/instrument.d.ts
@@ -0,0 +1,26 @@
+export declare const SENTRY_XHR_DATA_KEY = "__sentry_xhr_v2__";
+export type InstrumentHandlerType = 'console' | 'dom' | 'fetch' | 'history' | 'sentry' | 'xhr' | 'error' | 'unhandledrejection';
+export type InstrumentHandlerCallback = (data: any) => void;
+/**
+ * Add handler that will be called when given type of instrumentation triggers.
+ * Use at your own risk, this might break without changelog notice, only used internally.
+ * @hidden
+ */
+export declare function addInstrumentationHandler(type: InstrumentHandlerType, callback: InstrumentHandlerCallback): void;
+/**
+ * Reset all instrumentation handlers.
+ * This can be used by tests to ensure we have a clean slate of instrumentation handlers.
+ */
+export declare function resetInstrumentationHandlers(): void;
+/**
+ * Parses the fetch arguments to find the used Http method and the url of the request
+ */
+export declare function parseFetchArgs(fetchArgs: unknown[]): {
+    method: string;
+    url: string;
+};
+/** JSDoc */
+export declare function instrumentXHR(): void;
+/** JSDoc */
+export declare function instrumentDOM(): void;
+//# sourceMappingURL=instrument.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/is.d.ts b/node_modules/@sentry/utils/types-ts3.8/is.d.ts
new file mode 100644
index 0000000..ab4e1ba
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/is.d.ts
@@ -0,0 +1,119 @@
+import { PolymorphicEvent, Primitive } from '@sentry/types';
+/**
+ * Checks whether given value's type is one of a few Error or Error-like
+ * {@link isError}.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isError(wat: unknown): wat is Error;
+/**
+ * Checks whether given value's type is ErrorEvent
+ * {@link isErrorEvent}.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isErrorEvent(wat: unknown): boolean;
+/**
+ * Checks whether given value's type is DOMError
+ * {@link isDOMError}.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isDOMError(wat: unknown): boolean;
+/**
+ * Checks whether given value's type is DOMException
+ * {@link isDOMException}.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isDOMException(wat: unknown): boolean;
+/**
+ * Checks whether given value's type is a string
+ * {@link isString}.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isString(wat: unknown): wat is string;
+/**
+ * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)
+ * {@link isPrimitive}.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isPrimitive(wat: unknown): wat is Primitive;
+/**
+ * Checks whether given value's type is an object literal
+ * {@link isPlainObject}.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isPlainObject(wat: unknown): wat is Record<string, unknown>;
+/**
+ * Checks whether given value's type is an Event instance
+ * {@link isEvent}.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isEvent(wat: unknown): wat is PolymorphicEvent;
+/**
+ * Checks whether given value's type is an Element instance
+ * {@link isElement}.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isElement(wat: unknown): boolean;
+/**
+ * Checks whether given value's type is an regexp
+ * {@link isRegExp}.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isRegExp(wat: unknown): wat is RegExp;
+/**
+ * Checks whether given value has a then function.
+ * @param wat A value to be checked.
+ */
+export declare function isThenable(wat: any): wat is PromiseLike<any>;
+/**
+ * Checks whether given value's type is a SyntheticEvent
+ * {@link isSyntheticEvent}.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isSyntheticEvent(wat: unknown): boolean;
+/**
+ * Checks whether given value is NaN
+ * {@link isNaN}.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isNaN(wat: unknown): boolean;
+/**
+ * Checks whether given value's type is an instance of provided constructor.
+ * {@link isInstanceOf}.
+ *
+ * @param wat A value to be checked.
+ * @param base A constructor to be used in a check.
+ * @returns A boolean representing the result.
+ */
+export declare function isInstanceOf(wat: any, base: any): boolean;
+/**
+ * Checks whether given value's type is a Vue ViewModel.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isVueViewModel(wat: unknown): boolean;
+//# sourceMappingURL=is.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/logger.d.ts b/node_modules/@sentry/utils/types-ts3.8/logger.d.ts
new file mode 100644
index 0000000..cc9298f
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/logger.d.ts
@@ -0,0 +1,31 @@
+export declare const CONSOLE_LEVELS: readonly [
+    "debug",
+    "info",
+    "warn",
+    "error",
+    "log",
+    "assert",
+    "trace"
+];
+export type ConsoleLevel = (typeof CONSOLE_LEVELS)[number];
+type LoggerMethod = (...args: unknown[]) => void;
+type LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;
+/** This may be mutated by the console instrumentation. */
+export declare const originalConsoleMethods: {
+    [key in ConsoleLevel]?: (...args: any[]) => void;
+};
+/** JSDoc */
+interface Logger extends LoggerConsoleMethods {
+    disable(): void;
+    enable(): void;
+}
+/**
+ * Temporarily disable sentry console instrumentations.
+ *
+ * @param callback The function to run against the original `console` messages
+ * @returns The results of the callback
+ */
+export declare function consoleSandbox<T>(callback: () => T): T;
+export declare const logger: Logger;
+export {};
+//# sourceMappingURL=logger.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/memo.d.ts b/node_modules/@sentry/utils/types-ts3.8/memo.d.ts
new file mode 100644
index 0000000..0f152a0
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/memo.d.ts
@@ -0,0 +1,9 @@
+export type MemoFunc = [
+    (obj: any) => boolean,
+    (obj: any) => void
+];
+/**
+ * Helper to decycle json objects
+ */
+export declare function memoBuilder(): MemoFunc;
+//# sourceMappingURL=memo.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/misc.d.ts b/node_modules/@sentry/utils/types-ts3.8/misc.d.ts
new file mode 100644
index 0000000..499773d
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/misc.d.ts
@@ -0,0 +1,82 @@
+import { Event, Mechanism, StackFrame } from '@sentry/types';
+/**
+ * UUID4 generator
+ *
+ * @returns string Generated UUID4.
+ */
+export declare function uuid4(): string;
+/**
+ * Extracts either message or type+value from an event that can be used for user-facing logs
+ * @returns event's description
+ */
+export declare function getEventDescription(event: Event): string;
+/**
+ * Adds exception values, type and value to an synthetic Exception.
+ * @param event The event to modify.
+ * @param value Value of the exception.
+ * @param type Type of the exception.
+ * @hidden
+ */
+export declare function addExceptionTypeValue(event: Event, value?: string, type?: string): void;
+/**
+ * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.
+ *
+ * @param event The event to modify.
+ * @param newMechanism Mechanism data to add to the event.
+ * @hidden
+ */
+export declare function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void;
+/**
+ * Represents Semantic Versioning object
+ */
+interface SemVer {
+    major?: number;
+    minor?: number;
+    patch?: number;
+    prerelease?: string;
+    buildmetadata?: string;
+}
+/**
+ * Parses input into a SemVer interface
+ * @param input string representation of a semver version
+ */
+export declare function parseSemver(input: string): SemVer;
+/**
+ * This function adds context (pre/post/line) lines to the provided frame
+ *
+ * @param lines string[] containing all lines
+ * @param frame StackFrame that will be mutated
+ * @param linesOfContext number of context lines we want to add pre/post
+ */
+export declare function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext?: number): void;
+/**
+ * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object
+ * in question), and marks it captured if not.
+ *
+ * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and
+ * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so
+ * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because
+ * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not
+ * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This
+ * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we
+ * see it.
+ *
+ * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on
+ * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent
+ * object wrapper forms so that this check will always work. However, because we need to flag the exact object which
+ * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification
+ * must be done before the exception captured.
+ *
+ * @param A thrown exception to check or flag as having been seen
+ * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)
+ */
+export declare function checkOrSetAlreadyCaught(exception: unknown): boolean;
+/**
+ * Checks whether the given input is already an array, and if it isn't, wraps it in one.
+ *
+ * @param maybeArray Input to turn into an array, if necessary
+ * @returns The input, if already an array, or an array with the input as the only element, if not
+ */
+export declare function arrayify<T = unknown>(maybeArray: T | T[]): T[];
+export {};
+//# sourceMappingURL=misc.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/node-stack-trace.d.ts b/node_modules/@sentry/utils/types-ts3.8/node-stack-trace.d.ts
new file mode 100644
index 0000000..1c5f990
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/node-stack-trace.d.ts
@@ -0,0 +1,5 @@
+import { StackLineParserFn } from '@sentry/types';
+export type GetModuleFn = (filename: string | undefined) => string | undefined;
+/** Node Stack line parser */
+export declare function node(getModule?: GetModuleFn): StackLineParserFn;
+//# sourceMappingURL=node-stack-trace.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/node.d.ts b/node_modules/@sentry/utils/types-ts3.8/node.d.ts
new file mode 100644
index 0000000..f4c1f4d
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/node.d.ts
@@ -0,0 +1,31 @@
+/**
+ * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,
+ * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.
+ */
+/**
+ * Checks whether we're in the Node.js or Browser environment
+ *
+ * @returns Answer to given question
+ */
+export declare function isNodeEnv(): boolean;
+/**
+ * Requires a module which is protected against bundler minification.
+ *
+ * @param request The module path to resolve
+ */
+export declare function dynamicRequire(mod: any, request: string): any;
+/**
+ * Helper for dynamically loading module that should work with linked dependencies.
+ * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`
+ * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during
+ * build time. `require.resolve` is also not available in any other way, so we cannot create,
+ * a fake helper like we do with `dynamicRequire`.
+ *
+ * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.
+ * That is to mimic the behavior of `require.resolve` exactly.
+ *
+ * @param moduleName module name to require
+ * @returns possibly required module
+ */
+export declare function loadModule<T>(moduleName: string): T | undefined;
+//# sourceMappingURL=node.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/normalize.d.ts b/node_modules/@sentry/utils/types-ts3.8/normalize.d.ts
new file mode 100644
index 0000000..8e7cd7f
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/normalize.d.ts
@@ -0,0 +1,41 @@
+import { Primitive } from '@sentry/types';
+import { MemoFunc } from './memo';
+type ObjOrArray<T> = {
+    [key: string]: T;
+};
+/**
+ * Recursively normalizes the given object.
+ *
+ * - Creates a copy to prevent original input mutation
+ * - Skips non-enumerable properties
+ * - When stringifying, calls `toJSON` if implemented
+ * - Removes circular references
+ * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format
+ * - Translates known global objects/classes to a string representations
+ * - Takes care of `Error` object serialization
+ * - Optionally limits depth of final output
+ * - Optionally limits number of properties/elements included in any single object/array
+ *
+ * @param input The object to be normalized.
+ * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)
+ * @param maxProperties The max number of elements or properties to be included in any single array or
+ * object in the normallized output.
+ * @returns A normalized version of the object, or `"**non-serializable**"` if any errors are thrown during normalization.
+ */
+export declare function normalize(input: unknown, depth?: number, maxProperties?: number): any;
+/** JSDoc */
+export declare function normalizeToSize<T>(object: {
+    [key: string]: any;
+}, depth?: number, maxSize?: number): T;
+/**
+ * Visits a node to perform normalization on it
+ *
+ * @param key The key corresponding to the given node
+ * @param value The node to be visited
+ * @param depth Optional number indicating the maximum recursion depth
+ * @param maxProperties Optional maximum number of properties/elements included in any single object/array
+ * @param memo Optional Memo class handling decycling
+ */
+declare function visit(key: string, value: unknown, depth?: number, maxProperties?: number, memo?: MemoFunc): Primitive | ObjOrArray<unknown>;
+export { visit as walk };
+//# sourceMappingURL=normalize.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/object.d.ts b/node_modules/@sentry/utils/types-ts3.8/object.d.ts
new file mode 100644
index 0000000..c11d3db
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/object.d.ts
@@ -0,0 +1,94 @@
+import { WrappedFunction } from '@sentry/types';
+/**
+ * Replace a method in an object with a wrapped version of itself.
+ *
+ * @param source An object that contains a method to be wrapped.
+ * @param name The name of the method to be wrapped.
+ * @param replacementFactory A higher-order function that takes the original version of the given method and returns a
+ * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to
+ * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other
+ * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.
+ * @returns void
+ */
+export declare function fill(source: {
+    [key: string]: any;
+}, name: string, replacementFactory: (...args: any[]) => any): void;
+/**
+ * Defines a non-enumerable property on the given object.
+ *
+ * @param obj The object on which to set the property
+ * @param name The name of the property to be set
+ * @param value The value to which to set the property
+ */
+export declare function addNonEnumerableProperty(obj: {
+    [key: string]: unknown;
+}, name: string, value: unknown): void;
+/**
+ * Remembers the original function on the wrapped function and
+ * patches up the prototype.
+ *
+ * @param wrapped the wrapper function
+ * @param original the original function that gets wrapped
+ */
+export declare function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void;
+/**
+ * This extracts the original function if available.  See
+ * `markFunctionWrapped` for more information.
+ *
+ * @param func the function to unwrap
+ * @returns the unwrapped version of the function if available.
+ */
+export declare function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined;
+/**
+ * Encodes given object into url-friendly format
+ *
+ * @param object An object that contains serializable values
+ * @returns string Encoded
+ */
+export declare function urlEncode(object: {
+    [key: string]: any;
+}): string;
+/**
+ * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their
+ * non-enumerable properties attached.
+ *
+ * @param value Initial source that we have to transform in order for it to be usable by the serializer
+ * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor
+ *  an Error.
+ */
+export declare function convertToPlainObject<V>(value: V): {
+    [ownProps: string]: unknown;
+    type: string;
+    target: string;
+    currentTarget: string;
+    detail?: unknown;
+} | {
+    [ownProps: string]: unknown;
+    message: string;
+    name: string;
+    stack?: string;
+} | V;
+/**
+ * Given any captured exception, extract its keys and create a sorted
+ * and truncated list that will be used inside the event message.
+ * eg. `Non-error exception captured with keys: foo, bar, baz`
+ */
+export declare function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength?: number): string;
+/**
+ * Given any object, return a new object having removed all fields whose value was `undefined`.
+ * Works recursively on objects and arrays.
+ *
+ * Attention: This function keeps circular references in the returned object.
+ */
+export declare function dropUndefinedKeys<T>(inputValue: T): T;
+/**
+ * Ensure that something is an object.
+ *
+ * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper
+ * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.
+ *
+ * @param wat The subject of the objectification
+ * @returns A version of `wat` which can safely be used with `Object` class methods
+ */
+export declare function objectify(wat: unknown): typeof Object;
+//# sourceMappingURL=object.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/path.d.ts b/node_modules/@sentry/utils/types-ts3.8/path.d.ts
new file mode 100644
index 0000000..f4de8e5
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/path.d.ts
@@ -0,0 +1,15 @@
+/** JSDoc */
+export declare function resolve(...args: string[]): string;
+/** JSDoc */
+export declare function relative(from: string, to: string): string;
+/** JSDoc */
+export declare function normalizePath(path: string): string;
+/** JSDoc */
+export declare function isAbsolute(path: string): boolean;
+/** JSDoc */
+export declare function join(...args: string[]): string;
+/** JSDoc */
+export declare function dirname(path: string): string;
+/** JSDoc */
+export declare function basename(path: string, ext?: string): string;
+//# sourceMappingURL=path.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/promisebuffer.d.ts b/node_modules/@sentry/utils/types-ts3.8/promisebuffer.d.ts
new file mode 100644
index 0000000..1255a81
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/promisebuffer.d.ts
@@ -0,0 +1,11 @@
+export interface PromiseBuffer<T> {
+    $: Array<PromiseLike<T>>;
+    add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;
+    drain(timeout?: number): PromiseLike<boolean>;
+}
+/**
+ * Creates an new PromiseBuffer object with the specified limit
+ * @param limit max number of promises that can be stored in the buffer
+ */
+export declare function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T>;
+//# sourceMappingURL=promisebuffer.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/ratelimit.d.ts b/node_modules/@sentry/utils/types-ts3.8/ratelimit.d.ts
new file mode 100644
index 0000000..8b6da4f
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/ratelimit.d.ts
@@ -0,0 +1,29 @@
+import { TransportMakeRequestResponse } from '@sentry/types';
+export type RateLimits = Record<string, number>;
+export declare const DEFAULT_RETRY_AFTER: number;
+/**
+ * Extracts Retry-After value from the request header or returns default value
+ * @param header string representation of 'Retry-After' header
+ * @param now current unix timestamp
+ *
+ */
+export declare function parseRetryAfterHeader(header: string, now?: number): number;
+/**
+ * Gets the time that the given category is disabled until for rate limiting.
+ * In case no category-specific limit is set but a general rate limit across all categories is active,
+ * that time is returned.
+ *
+ * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.
+ */
+export declare function disabledUntil(limits: RateLimits, category: string): number;
+/**
+ * Checks if a category is rate limited
+ */
+export declare function isRateLimited(limits: RateLimits, category: string, now?: number): boolean;
+/**
+ * Update ratelimits from incoming headers.
+ *
+ * @return the updated RateLimits object.
+ */
+export declare function updateRateLimits(limits: RateLimits, { statusCode, headers }: TransportMakeRequestResponse, now?: number): RateLimits;
+//# sourceMappingURL=ratelimit.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/requestdata.d.ts b/node_modules/@sentry/utils/types-ts3.8/requestdata.d.ts
new file mode 100644
index 0000000..28202c6
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/requestdata.d.ts
@@ -0,0 +1,96 @@
+/**
+ * The functions here, which enrich an event with request data, are mostly for use in Node, but are safe for use in a
+ * browser context. They live here in `@sentry/utils` rather than in `@sentry/node` so that they can be used in
+ * frameworks (like nextjs), which, because of SSR, run the same code in both Node and browser contexts.
+ *
+ * TODO (v8 / #5257): Remove the note below
+ * Note that for now, the tests for this code have to live in `@sentry/node`, since they test both these functions and
+ * the backwards-compatibility-preserving wrappers which still live in `handlers.ts` there.
+ */
+import { Event, ExtractedNodeRequestData, PolymorphicRequest, Transaction, TransactionSource } from '@sentry/types';
+type InjectedNodeDeps = {
+    cookie: {
+        parse: (cookieStr: string) => Record<string, string>;
+    };
+    url: {
+        parse: (urlStr: string) => {
+            query: string | null;
+        };
+    };
+};
+/**
+ * Sets parameterized route as transaction name e.g.: `GET /users/:id`
+ * Also adds more context data on the transaction from the request
+ */
+export declare function addRequestDataToTransaction(transaction: Transaction | undefined, req: PolymorphicRequest, deps?: InjectedNodeDeps): void;
+/**
+ * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.
+ * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.
+ *
+ * Additionally, this function determines and returns the transaction name source
+ *
+ * eg. GET /mountpoint/user/:id
+ *
+ * @param req A request object
+ * @param options What to include in the transaction name (method, path, or a custom route name to be
+ *                used instead of the request's route)
+ *
+ * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')
+ */
+export declare function extractPathForTransaction(req: PolymorphicRequest, options?: {
+    path?: boolean;
+    method?: boolean;
+    customRoute?: string;
+}): [
+    string,
+    TransactionSource
+];
+type TransactionNamingScheme = 'path' | 'methodPath' | 'handler';
+/**
+ * Normalize data from the request object, accounting for framework differences.
+ *
+ * @param req The request object from which to extract data
+ * @param options.include An optional array of keys to include in the normalized data. Defaults to
+ * DEFAULT_REQUEST_INCLUDES if not provided.
+ * @param options.deps Injected, platform-specific dependencies
+ * @returns An object containing normalized request data
+ */
+export declare function extractRequestData(req: PolymorphicRequest, options?: {
+    include?: string[];
+    deps?: InjectedNodeDeps;
+}): ExtractedNodeRequestData;
+/**
+ * Options deciding what parts of the request to use when enhancing an event
+ */
+export interface AddRequestDataToEventOptions {
+    /** Flags controlling whether each type of data should be added to the event */
+    include?: {
+        ip?: boolean;
+        request?: boolean | string[];
+        transaction?: boolean | TransactionNamingScheme;
+        user?: boolean | string[];
+    };
+    /** Injected platform-specific dependencies */
+    deps?: {
+        cookie: {
+            parse: (cookieStr: string) => Record<string, string>;
+        };
+        url: {
+            parse: (urlStr: string) => {
+                query: string | null;
+            };
+        };
+    };
+}
+/**
+ * Add data from the given request to the given event
+ *
+ * @param event The event to which the request data will be added
+ * @param req Request object
+ * @param options.include Flags to control what data is included
+ * @param options.deps Injected platform-specific dependencies
+ * @hidden
+ */
+export declare function addRequestDataToEvent(event: Event, req: PolymorphicRequest, options?: AddRequestDataToEventOptions): Event;
+export {};
+//# sourceMappingURL=requestdata.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/severity.d.ts b/node_modules/@sentry/utils/types-ts3.8/severity.d.ts
new file mode 100644
index 0000000..66dfb37
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/severity.d.ts
@@ -0,0 +1,19 @@
+import { Severity, SeverityLevel } from '@sentry/types';
+export declare const validSeverityLevels: string[];
+/**
+ * Converts a string-based level into a member of the deprecated {@link Severity} enum.
+ *
+ * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.
+ *
+ * @param level String representation of Severity
+ * @returns Severity
+ */
+export declare function severityFromString(level: Severity | SeverityLevel | string): Severity;
+/**
+ * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.
+ *
+ * @param level String representation of desired `SeverityLevel`.
+ * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.
+ */
+export declare function severityLevelFromString(level: SeverityLevel | string): SeverityLevel;
+//# sourceMappingURL=severity.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/stacktrace.d.ts b/node_modules/@sentry/utils/types-ts3.8/stacktrace.d.ts
new file mode 100644
index 0000000..a77a0e7
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/stacktrace.d.ts
@@ -0,0 +1,36 @@
+import { StackFrame, StackLineParser, StackParser } from '@sentry/types';
+import { GetModuleFn } from './node-stack-trace';
+/**
+ * Creates a stack parser with the supplied line parsers
+ *
+ * StackFrames are returned in the correct order for Sentry Exception
+ * frames and with Sentry SDK internal frames removed from the top and bottom
+ *
+ */
+export declare function createStackParser(...parsers: StackLineParser[]): StackParser;
+/**
+ * Gets a stack parser implementation from Options.stackParser
+ * @see Options
+ *
+ * If options contains an array of line parsers, it is converted into a parser
+ */
+export declare function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser;
+/**
+ * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.
+ * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the
+ * function that caused the crash is the last frame in the array.
+ * @hidden
+ */
+export declare function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[];
+/**
+ * Safely extract function name from itself
+ */
+export declare function getFunctionName(fn: unknown): string;
+/**
+ * Node.js stack line parser
+ *
+ * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.
+ * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain
+ */
+export declare function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser;
+//# sourceMappingURL=stacktrace.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/string.d.ts b/node_modules/@sentry/utils/types-ts3.8/string.d.ts
new file mode 100644
index 0000000..665cf4d
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/string.d.ts
@@ -0,0 +1,46 @@
+export { escapeStringForRegex } from './vendor/escapeStringForRegex';
+/**
+ * Truncates given string to the maximum characters count
+ *
+ * @param str An object that contains serializable values
+ * @param max Maximum number of characters in truncated string (0 = unlimited)
+ * @returns string Encoded
+ */
+export declare function truncate(str: string, max?: number): string;
+/**
+ * This is basically just `trim_line` from
+ * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67
+ *
+ * @param str An object that contains serializable values
+ * @param max Maximum number of characters in truncated string
+ * @returns string Encoded
+ */
+export declare function snipLine(line: string, colno: number): string;
+/**
+ * Join values in array
+ * @param input array of values to be joined together
+ * @param delimiter string to be placed in-between values
+ * @returns Joined values
+ */
+export declare function safeJoin(input: any[], delimiter?: string): string;
+/**
+ * Checks if the given value matches a regex or string
+ *
+ * @param value The string to test
+ * @param pattern Either a regex or a string against which `value` will be matched
+ * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match
+ * `pattern` if it contains `pattern`. Only applies to string-type patterns.
+ */
+export declare function isMatchingPattern(value: string, pattern: RegExp | string, requireExactStringMatch?: boolean): boolean;
+/**
+ * Test the given string against an array of strings and regexes. By default, string matching is done on a
+ * substring-inclusion basis rather than a strict equality basis
+ *
+ * @param testString The string to test
+ * @param patterns The patterns against which to test the string
+ * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to
+ * count. If false, `testString` will match a string pattern if it contains that pattern.
+ * @returns
+ */
+export declare function stringMatchesSomePattern(testString: string, patterns?: Array<string | RegExp>, requireExactStringMatch?: boolean): boolean;
+//# sourceMappingURL=string.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/supports.d.ts b/node_modules/@sentry/utils/types-ts3.8/supports.d.ts
new file mode 100644
index 0000000..011ea62
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/supports.d.ts
@@ -0,0 +1,55 @@
+export { supportsHistory } from './vendor/supportsHistory';
+/**
+ * Tells whether current environment supports ErrorEvent objects
+ * {@link supportsErrorEvent}.
+ *
+ * @returns Answer to the given question.
+ */
+export declare function supportsErrorEvent(): boolean;
+/**
+ * Tells whether current environment supports DOMError objects
+ * {@link supportsDOMError}.
+ *
+ * @returns Answer to the given question.
+ */
+export declare function supportsDOMError(): boolean;
+/**
+ * Tells whether current environment supports DOMException objects
+ * {@link supportsDOMException}.
+ *
+ * @returns Answer to the given question.
+ */
+export declare function supportsDOMException(): boolean;
+/**
+ * Tells whether current environment supports Fetch API
+ * {@link supportsFetch}.
+ *
+ * @returns Answer to the given question.
+ */
+export declare function supportsFetch(): boolean;
+/**
+ * isNativeFetch checks if the given function is a native implementation of fetch()
+ */
+export declare function isNativeFetch(func: Function): boolean;
+/**
+ * Tells whether current environment supports Fetch API natively
+ * {@link supportsNativeFetch}.
+ *
+ * @returns true if `window.fetch` is natively implemented, false otherwise
+ */
+export declare function supportsNativeFetch(): boolean;
+/**
+ * Tells whether current environment supports ReportingObserver API
+ * {@link supportsReportingObserver}.
+ *
+ * @returns Answer to the given question.
+ */
+export declare function supportsReportingObserver(): boolean;
+/**
+ * Tells whether current environment supports Referrer Policy API
+ * {@link supportsReferrerPolicy}.
+ *
+ * @returns Answer to the given question.
+ */
+export declare function supportsReferrerPolicy(): boolean;
+//# sourceMappingURL=supports.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/syncpromise.d.ts b/node_modules/@sentry/utils/types-ts3.8/syncpromise.d.ts
new file mode 100644
index 0000000..d6f2d21
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/syncpromise.d.ts
@@ -0,0 +1,35 @@
+export declare function resolvedSyncPromise(): PromiseLike<void>;
+export declare function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;
+/**
+ * Creates a rejected sync promise.
+ *
+ * @param value the value to reject the promise with
+ * @returns the rejected sync promise
+ */
+export declare function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T>;
+/**
+ * Thenable class that behaves like a Promise and follows it's interface
+ * but is not async internally
+ */
+declare class SyncPromise<T> implements PromiseLike<T> {
+    private _state;
+    private _handlers;
+    private _value;
+    constructor(executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void);
+    /** JSDoc */
+    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null): PromiseLike<TResult1 | TResult2>;
+    /** JSDoc */
+    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null): PromiseLike<T | TResult>;
+    /** JSDoc */
+    finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult>;
+    /** JSDoc */
+    private readonly _resolve;
+    /** JSDoc */
+    private readonly _reject;
+    /** JSDoc */
+    private readonly _setResult;
+    /** JSDoc */
+    private readonly _executeHandlers;
+}
+export { SyncPromise };
+//# sourceMappingURL=syncpromise.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/time.d.ts b/node_modules/@sentry/utils/types-ts3.8/time.d.ts
new file mode 100644
index 0000000..5cf6b99
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/time.d.ts
@@ -0,0 +1,37 @@
+/**
+ * Returns a timestamp in seconds since the UNIX epoch using the Date API.
+ */
+export declare const dateTimestampInSeconds: () => number;
+/**
+ * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the
+ * availability of the Performance API.
+ *
+ * See `usingPerformanceAPI` to test whether the Performance API is used.
+ *
+ * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is
+ * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The
+ * skew can grow to arbitrary amounts like days, weeks or months.
+ * See https://github.com/getsentry/sentry-javascript/issues/2590.
+ */
+export declare const timestampInSeconds: () => number;
+/**
+ * Re-exported with an old name for backwards-compatibility.
+ * TODO (v8): Remove this
+ *
+ * @deprecated Use `timestampInSeconds` instead.
+ */
+export declare const timestampWithMs: () => number;
+/**
+ * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.
+ */
+export declare const usingPerformanceAPI: boolean;
+/**
+ * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.
+ */
+export declare let _browserPerformanceTimeOriginMode: string;
+/**
+ * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the
+ * performance API is available.
+ */
+export declare const browserPerformanceTimeOrigin: number | undefined;
+//# sourceMappingURL=time.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/tracing.d.ts b/node_modules/@sentry/utils/types-ts3.8/tracing.d.ts
new file mode 100644
index 0000000..e1bf076
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/tracing.d.ts
@@ -0,0 +1,24 @@
+import { PropagationContext, TraceparentData } from '@sentry/types';
+import { baggageHeaderToDynamicSamplingContext } from './baggage';
+export declare const TRACEPARENT_REGEXP: RegExp;
+/**
+ * Extract transaction context data from a `sentry-trace` header.
+ *
+ * @param traceparent Traceparent string
+ *
+ * @returns Object containing data from the header, or undefined if traceparent string is malformed
+ */
+export declare function extractTraceparentData(traceparent?: string): TraceparentData | undefined;
+/**
+ * Create tracing context from incoming headers.
+ */
+export declare function tracingContextFromHeaders(sentryTrace: Parameters<typeof extractTraceparentData>[0], baggage: Parameters<typeof baggageHeaderToDynamicSamplingContext>[0]): {
+    traceparentData: ReturnType<typeof extractTraceparentData>;
+    dynamicSamplingContext: ReturnType<typeof baggageHeaderToDynamicSamplingContext>;
+    propagationContext: PropagationContext;
+};
+/**
+ * Create sentry-trace header from span context values.
+ */
+export declare function generateSentryTraceHeader(traceId?: string, spanId?: string, sampled?: boolean): string;
+//# sourceMappingURL=tracing.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/url.d.ts b/node_modules/@sentry/utils/types-ts3.8/url.d.ts
new file mode 100644
index 0000000..fd44b0c
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/url.d.ts
@@ -0,0 +1,34 @@
+type PartialURL = {
+    host?: string;
+    path?: string;
+    protocol?: string;
+    relative?: string;
+    search?: string;
+    hash?: string;
+};
+/**
+ * Parses string form of URL into an object
+ * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B
+ * // intentionally using regex and not <a/> href parsing trick because React Native and other
+ * // environments where DOM might not be available
+ * @returns parsed URL object
+ */
+export declare function parseUrl(url: string): PartialURL;
+/**
+ * Strip the query string and fragment off of a given URL or path (if present)
+ *
+ * @param urlPath Full URL or path, including possible query string and/or fragment
+ * @returns URL or path without query string or fragment
+ */
+export declare function stripUrlQueryAndFragment(urlPath: string): string;
+/**
+ * Returns number of URL segments of a passed string URL.
+ */
+export declare function getNumberOfUrlSegments(url: string): number;
+/**
+ * Takes a URL object and returns a sanitized string which is safe to use as span description
+ * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data
+ */
+export declare function getSanitizedUrlString(url: PartialURL): string;
+export {};
+//# sourceMappingURL=url.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/userIntegrations.d.ts b/node_modules/@sentry/utils/types-ts3.8/userIntegrations.d.ts
new file mode 100644
index 0000000..239c797
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/userIntegrations.d.ts
@@ -0,0 +1,30 @@
+import { Integration } from '@sentry/types';
+export type UserIntegrationsFunction = (integrations: Integration[]) => Integration[];
+export type UserIntegrations = Integration[] | UserIntegrationsFunction;
+export type IntegrationWithExclusionOption = Integration & {
+    /**
+     * Allow the user to exclude this integration by not returning it from a function provided as the `integrations` option
+     * in `Sentry.init()`. Meant to be used with default integrations, the idea being that if a user has actively filtered
+     * an integration out, we should be able to respect that choice if we wish.
+     */
+    allowExclusionByUser?: boolean;
+};
+type ForcedIntegrationOptions = {
+    [keyPath: string]: unknown;
+};
+/**
+ * Enforces inclusion of a given integration with specified options in an integration array originally determined by the
+ * user, by either including the given default instance or by patching an existing user instance with the given options.
+ *
+ * Ideally this would happen when integrations are set up, but there isn't currently a mechanism there for merging
+ * options from a default integration instance with those from a user-provided instance of the same integration, only
+ * for allowing the user to override a default instance entirely. (TODO: Fix that.)
+ *
+ * @param defaultIntegrationInstance An instance of the integration with the correct options already set
+ * @param userIntegrations Integrations defined by the user.
+ * @param forcedOptions Options with which to patch an existing user-derived instance on the integration.
+ * @returns A final integrations array.
+ */
+export declare function addOrUpdateIntegration<T extends UserIntegrations>(defaultIntegrationInstance: Integration, userIntegrations: T, forcedOptions?: ForcedIntegrationOptions): T;
+export {};
+//# sourceMappingURL=userIntegrations.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/vendor/escapeStringForRegex.d.ts b/node_modules/@sentry/utils/types-ts3.8/vendor/escapeStringForRegex.d.ts
new file mode 100644
index 0000000..6cdf0d3
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/vendor/escapeStringForRegex.d.ts
@@ -0,0 +1,9 @@
+/**
+ * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to
+ * `new RegExp()`.
+ *
+ * @param regexString The string to escape
+ * @returns An version of the string with all special regex characters escaped
+ */
+export declare function escapeStringForRegex(regexString: string): string;
+//# sourceMappingURL=escapeStringForRegex.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/vendor/supportsHistory.d.ts b/node_modules/@sentry/utils/types-ts3.8/vendor/supportsHistory.d.ts
new file mode 100644
index 0000000..37c7dd2
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/vendor/supportsHistory.d.ts
@@ -0,0 +1,8 @@
+/**
+ * Tells whether current environment supports History API
+ * {@link supportsHistory}.
+ *
+ * @returns Answer to the given question.
+ */
+export declare function supportsHistory(): boolean;
+//# sourceMappingURL=supportsHistory.d.ts.map
diff --git a/node_modules/@sentry/utils/types-ts3.8/worldwide.d.ts b/node_modules/@sentry/utils/types-ts3.8/worldwide.d.ts
new file mode 100644
index 0000000..fcdd14b
--- /dev/null
+++ b/node_modules/@sentry/utils/types-ts3.8/worldwide.d.ts
@@ -0,0 +1,79 @@
+/**
+ * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,
+ * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.
+ *
+ * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing
+ * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).
+ *
+ * Why worldwide?
+ *
+ * Why not?
+ */
+import { Integration } from '@sentry/types';
+import { SdkSource } from './env';
+/** Internal global with common properties and Sentry extensions  */
+export interface InternalGlobal {
+    navigator?: {
+        userAgent?: string;
+    };
+    console: Console;
+    Sentry?: {
+        Integrations?: Integration[];
+    };
+    onerror?: {
+        (msg: unknown, url: unknown, line: unknown, column: unknown, error: unknown): boolean;
+        __SENTRY_INSTRUMENTED__?: true;
+        __SENTRY_LOADER__?: true;
+    };
+    onunhandledrejection?: {
+        (event: unknown): boolean;
+        __SENTRY_INSTRUMENTED__?: true;
+        __SENTRY_LOADER__?: true;
+    };
+    SENTRY_ENVIRONMENT?: string;
+    SENTRY_DSN?: string;
+    SENTRY_RELEASE?: {
+        id?: string;
+    };
+    SENTRY_SDK_SOURCE?: SdkSource;
+    /**
+     * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map
+     * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS
+     * file.
+     */
+    _sentryDebugIds?: Record<string, string>;
+    __SENTRY__: {
+        globalEventProcessors: any;
+        hub: any;
+        logger: any;
+        extensions?: {
+            /** Extension methods for the hub, which are bound to the current Hub instance */
+            [key: string]: Function;
+        };
+    };
+    /**
+     * Raw module metadata that is injected by bundler plugins.
+     *
+     * Keys are `error.stack` strings, values are the metadata.
+     */
+    _sentryModuleMetadata?: Record<string, any>;
+}
+/** Get's the global object for the current JavaScript runtime */
+export declare const GLOBAL_OBJ: InternalGlobal;
+/**
+ * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8
+ */
+export declare function getGlobalObject<T>(): T & InternalGlobal;
+/**
+ * Returns a global singleton contained in the global `__SENTRY__` object.
+ *
+ * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory
+ * function and added to the `__SENTRY__` object.
+ *
+ * @param name name of the global singleton on __SENTRY__
+ * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`
+ * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value
+ * @returns the singleton
+ */
+export declare function getGlobalSingleton<T>(name: keyof InternalGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T;
+//# sourceMappingURL=worldwide.d.ts.map
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_createNamedExportFrom.d.ts b/node_modules/@sentry/utils/types/buildPolyfills/_createNamedExportFrom.d.ts
deleted file mode 100644
index 874b7e8..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_createNamedExportFrom.d.ts
+++ /dev/null
@@ -1,12 +0,0 @@
-import type { GenericObject } from './types';
-/**
- * Copy a property from the given object into `exports`, under the given name.
- *
- * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
- *
- * @param obj The object containing the property to copy.
- * @param localName The name under which to export the property
- * @param importedName The name under which the property lives in `obj`
- */
-export declare function _createNamedExportFrom(obj: GenericObject, localName: string, importedName: string): void;
-//# sourceMappingURL=_createNamedExportFrom.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_createNamedExportFrom.d.ts.map b/node_modules/@sentry/utils/types/buildPolyfills/_createNamedExportFrom.d.ts.map
deleted file mode 100644
index 567c041..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_createNamedExportFrom.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_createNamedExportFrom.d.ts","sourceRoot":"","sources":["../../../src/buildPolyfills/_createNamedExportFrom.ts"],"names":[],"mappings":"AAwBA,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAI7C;;;;;;;;GAQG;AACH,wBAAgB,sBAAsB,CAAC,GAAG,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,IAAI,CAExG"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_createStarExport.d.ts b/node_modules/@sentry/utils/types/buildPolyfills/_createStarExport.d.ts
deleted file mode 100644
index 8754f51..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_createStarExport.d.ts
+++ /dev/null
@@ -1,10 +0,0 @@
-import type { GenericObject } from './types';
-/**
- * Copy properties from an object into `exports`.
- *
- * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
- *
- * @param obj The object containing the properties to copy.
- */
-export declare function _createStarExport(obj: GenericObject): void;
-//# sourceMappingURL=_createStarExport.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_createStarExport.d.ts.map b/node_modules/@sentry/utils/types/buildPolyfills/_createStarExport.d.ts.map
deleted file mode 100644
index 1207506..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_createStarExport.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_createStarExport.d.ts","sourceRoot":"","sources":["../../../src/buildPolyfills/_createStarExport.ts"],"names":[],"mappings":"AAwBA,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAI7C;;;;;;GAMG;AACH,wBAAgB,iBAAiB,CAAC,GAAG,EAAE,aAAa,GAAG,IAAI,CAI1D"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_interopDefault.d.ts b/node_modules/@sentry/utils/types/buildPolyfills/_interopDefault.d.ts
deleted file mode 100644
index d7eb498..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_interopDefault.d.ts
+++ /dev/null
@@ -1,11 +0,0 @@
-import type { RequireResult } from './types';
-/**
- * Unwraps a module if it has been wrapped in an object under the key `default`.
- *
- * Adapted from Rollup (https://github.com/rollup/rollup)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns The full module, unwrapped if necessary.
- */
-export declare function _interopDefault(requireResult: RequireResult): RequireResult;
-//# sourceMappingURL=_interopDefault.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_interopDefault.d.ts.map b/node_modules/@sentry/utils/types/buildPolyfills/_interopDefault.d.ts.map
deleted file mode 100644
index 5ba31f0..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_interopDefault.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopDefault.d.ts","sourceRoot":"","sources":["../../../src/buildPolyfills/_interopDefault.ts"],"names":[],"mappings":"AAmBA,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAE7C;;;;;;;GAOG;AACH,wBAAgB,eAAe,CAAC,aAAa,EAAE,aAAa,GAAG,aAAa,CAE3E"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_interopNamespace.d.ts b/node_modules/@sentry/utils/types/buildPolyfills/_interopNamespace.d.ts
deleted file mode 100644
index 8804fcc..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_interopNamespace.d.ts
+++ /dev/null
@@ -1,11 +0,0 @@
-import type { RequireResult } from './types';
-/**
- * Adds a self-referential `default` property to CJS modules which aren't the result of transpilation from ESM modules.
- *
- * Adapted from Rollup (https://github.com/rollup/rollup)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property
- */
-export declare function _interopNamespace(requireResult: RequireResult): RequireResult;
-//# sourceMappingURL=_interopNamespace.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_interopNamespace.d.ts.map b/node_modules/@sentry/utils/types/buildPolyfills/_interopNamespace.d.ts.map
deleted file mode 100644
index f9a4ade..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_interopNamespace.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopNamespace.d.ts","sourceRoot":"","sources":["../../../src/buildPolyfills/_interopNamespace.ts"],"names":[],"mappings":"AAmBA,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAE7C;;;;;;;GAOG;AACH,wBAAgB,iBAAiB,CAAC,aAAa,EAAE,aAAa,GAAG,aAAa,CAE7E"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_interopNamespaceDefaultOnly.d.ts b/node_modules/@sentry/utils/types/buildPolyfills/_interopNamespaceDefaultOnly.d.ts
deleted file mode 100644
index 61bde2b..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_interopNamespaceDefaultOnly.d.ts
+++ /dev/null
@@ -1,11 +0,0 @@
-import type { RequireResult } from './types';
-/**
- * Wrap a module in an object, as the value under the key `default`.
- *
- * Adapted from Rollup (https://github.com/rollup/rollup)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns An object containing the key-value pair (`default`, `requireResult`)
- */
-export declare function _interopNamespaceDefaultOnly(requireResult: RequireResult): RequireResult;
-//# sourceMappingURL=_interopNamespaceDefaultOnly.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_interopNamespaceDefaultOnly.d.ts.map b/node_modules/@sentry/utils/types/buildPolyfills/_interopNamespaceDefaultOnly.d.ts.map
deleted file mode 100644
index 0d1c8af..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_interopNamespaceDefaultOnly.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopNamespaceDefaultOnly.d.ts","sourceRoot":"","sources":["../../../src/buildPolyfills/_interopNamespaceDefaultOnly.ts"],"names":[],"mappings":"AAmBA,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAE7C;;;;;;;GAOG;AACH,wBAAgB,4BAA4B,CAAC,aAAa,EAAE,aAAa,GAAG,aAAa,CAKxF"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_interopRequireDefault.d.ts b/node_modules/@sentry/utils/types/buildPolyfills/_interopRequireDefault.d.ts
deleted file mode 100644
index 586cd35..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_interopRequireDefault.d.ts
+++ /dev/null
@@ -1,11 +0,0 @@
-import type { RequireResult } from './types';
-/**
- * Wraps modules which aren't the result of transpiling an ESM module in an object under the key `default`
- *
- * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns `requireResult` or `requireResult` wrapped in an object, keyed as `default`
- */
-export declare function _interopRequireDefault(requireResult: RequireResult): RequireResult;
-//# sourceMappingURL=_interopRequireDefault.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_interopRequireDefault.d.ts.map b/node_modules/@sentry/utils/types/buildPolyfills/_interopRequireDefault.d.ts.map
deleted file mode 100644
index cb3110b..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_interopRequireDefault.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopRequireDefault.d.ts","sourceRoot":"","sources":["../../../src/buildPolyfills/_interopRequireDefault.ts"],"names":[],"mappings":"AAwBA,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAE7C;;;;;;;GAOG;AACH,wBAAgB,sBAAsB,CAAC,aAAa,EAAE,aAAa,GAAG,aAAa,CAElF"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_interopRequireWildcard.d.ts b/node_modules/@sentry/utils/types/buildPolyfills/_interopRequireWildcard.d.ts
deleted file mode 100644
index cf6170a..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_interopRequireWildcard.d.ts
+++ /dev/null
@@ -1,11 +0,0 @@
-import type { RequireResult } from './types';
-/**
- * Adds a `default` property to CJS modules which aren't the result of transpilation from ESM modules.
- *
- * Adapted from Sucrase (https://github.com/alangpierce/sucrase)
- *
- * @param requireResult The result of calling `require` on a module
- * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property
- */
-export declare function _interopRequireWildcard(requireResult: RequireResult): RequireResult;
-//# sourceMappingURL=_interopRequireWildcard.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/_interopRequireWildcard.d.ts.map b/node_modules/@sentry/utils/types/buildPolyfills/_interopRequireWildcard.d.ts.map
deleted file mode 100644
index eda4886..0000000
--- a/node_modules/@sentry/utils/types/buildPolyfills/_interopRequireWildcard.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_interopRequireWildcard.d.ts","sourceRoot":"","sources":["../../../src/buildPolyfills/_interopRequireWildcard.ts"],"names":[],"mappings":"AAwBA,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAE7C;;;;;;;GAOG;AACH,wBAAgB,uBAAuB,CAAC,aAAa,EAAE,aAAa,GAAG,aAAa,CAEnF"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/index.d.ts b/node_modules/@sentry/utils/types/buildPolyfills/index.d.ts
index 4f6c491..6c60ac8 100644
--- a/node_modules/@sentry/utils/types/buildPolyfills/index.d.ts
+++ b/node_modules/@sentry/utils/types/buildPolyfills/index.d.ts
@@ -1,13 +1,6 @@
 export { _asyncNullishCoalesce } from './_asyncNullishCoalesce';
 export { _asyncOptionalChain } from './_asyncOptionalChain';
 export { _asyncOptionalChainDelete } from './_asyncOptionalChainDelete';
-export { _createNamedExportFrom } from './_createNamedExportFrom';
-export { _createStarExport } from './_createStarExport';
-export { _interopDefault } from './_interopDefault';
-export { _interopNamespace } from './_interopNamespace';
-export { _interopNamespaceDefaultOnly } from './_interopNamespaceDefaultOnly';
-export { _interopRequireDefault } from './_interopRequireDefault';
-export { _interopRequireWildcard } from './_interopRequireWildcard';
 export { _nullishCoalesce } from './_nullishCoalesce';
 export { _optionalChain } from './_optionalChain';
 export { _optionalChainDelete } from './_optionalChainDelete';
diff --git a/node_modules/@sentry/utils/types/buildPolyfills/index.d.ts.map b/node_modules/@sentry/utils/types/buildPolyfills/index.d.ts.map
index dd4d93e..5aef1db 100644
--- a/node_modules/@sentry/utils/types/buildPolyfills/index.d.ts.map
+++ b/node_modules/@sentry/utils/types/buildPolyfills/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../src/buildPolyfills/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAChE,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,yBAAyB,EAAE,MAAM,6BAA6B,CAAC;AACxE,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAClE,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AAC9E,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAClE,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AACpE,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../src/buildPolyfills/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAChE,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,yBAAyB,EAAE,MAAM,6BAA6B,CAAC;AACxE,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/eventbuilder.d.ts b/node_modules/@sentry/utils/types/eventbuilder.d.ts
new file mode 100644
index 0000000..2429cc8
--- /dev/null
+++ b/node_modules/@sentry/utils/types/eventbuilder.d.ts
@@ -0,0 +1,20 @@
+import type { Event, EventHint, Exception, Hub, Severity, SeverityLevel, StackFrame, StackParser } from '@sentry/types';
+/**
+ * Extracts stack frames from the error.stack string
+ */
+export declare function parseStackFrames(stackParser: StackParser, error: Error): StackFrame[];
+/**
+ * Extracts stack frames from the error and builds a Sentry Exception
+ */
+export declare function exceptionFromError(stackParser: StackParser, error: Error): Exception;
+/**
+ * Builds and Event from a Exception
+ * @hidden
+ */
+export declare function eventFromUnknownInput(getCurrentHub: () => Hub, stackParser: StackParser, exception: unknown, hint?: EventHint): Event;
+/**
+ * Builds and Event from a Message
+ * @hidden
+ */
+export declare function eventFromMessage(stackParser: StackParser, message: string, level?: Severity | SeverityLevel, hint?: EventHint, attachStacktrace?: boolean): Event;
+//# sourceMappingURL=eventbuilder.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/eventbuilder.d.ts.map b/node_modules/@sentry/utils/types/eventbuilder.d.ts.map
new file mode 100644
index 0000000..9a34b4b
--- /dev/null
+++ b/node_modules/@sentry/utils/types/eventbuilder.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"eventbuilder.d.ts","sourceRoot":"","sources":["../../src/eventbuilder.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EACV,KAAK,EACL,SAAS,EACT,SAAS,EACT,GAAG,EAEH,QAAQ,EACR,aAAa,EACb,UAAU,EACV,WAAW,EACZ,MAAM,eAAe,CAAC;AAOvB;;GAEG;AACH,wBAAgB,gBAAgB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,GAAG,UAAU,EAAE,CAErF;AAED;;GAEG;AACH,wBAAgB,kBAAkB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,GAAG,SAAS,CAYpF;AAED;;;GAGG;AACH,wBAAgB,qBAAqB,CACnC,aAAa,EAAE,MAAM,GAAG,EACxB,WAAW,EAAE,WAAW,EACxB,SAAS,EAAE,OAAO,EAClB,IAAI,CAAC,EAAE,SAAS,GACf,KAAK,CA8CP;AAED;;;GAGG;AACH,wBAAgB,gBAAgB,CAC9B,WAAW,EAAE,WAAW,EACxB,OAAO,EAAE,MAAM,EAEf,KAAK,GAAE,QAAQ,GAAG,aAAsB,EACxC,IAAI,CAAC,EAAE,SAAS,EAChB,gBAAgB,CAAC,EAAE,OAAO,GACzB,KAAK,CAsBP"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/index.d.ts b/node_modules/@sentry/utils/types/index.d.ts
index 1936577..c27d6e8 100644
--- a/node_modules/@sentry/utils/types/index.d.ts
+++ b/node_modules/@sentry/utils/types/index.d.ts
@@ -29,4 +29,5 @@ export * from './baggage';
 export * from './url';
 export * from './userIntegrations';
 export * from './cache';
+export * from './eventbuilder';
 //# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/index.d.ts.map b/node_modules/@sentry/utils/types/index.d.ts.map
index 0755d35..4162efd 100644
--- a/node_modules/@sentry/utils/types/index.d.ts.map
+++ b/node_modules/@sentry/utils/types/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,cAAc,oBAAoB,CAAC;AACnC,cAAc,WAAW,CAAC;AAC1B,cAAc,OAAO,CAAC;AACtB,cAAc,SAAS,CAAC;AACxB,cAAc,aAAa,CAAC;AAC5B,cAAc,cAAc,CAAC;AAC7B,cAAc,MAAM,CAAC;AACrB,cAAc,UAAU,CAAC;AACzB,cAAc,QAAQ,CAAC;AACvB,cAAc,QAAQ,CAAC;AACvB,cAAc,QAAQ,CAAC;AACvB,cAAc,aAAa,CAAC;AAC5B,cAAc,UAAU,CAAC;AACzB,cAAc,QAAQ,CAAC;AACvB,cAAc,iBAAiB,CAAC;AAEhC,cAAc,eAAe,CAAC;AAC9B,cAAc,YAAY,CAAC;AAC3B,cAAc,cAAc,CAAC;AAC7B,cAAc,UAAU,CAAC;AACzB,cAAc,YAAY,CAAC;AAC3B,cAAc,eAAe,CAAC;AAC9B,cAAc,QAAQ,CAAC;AACvB,cAAc,WAAW,CAAC;AAC1B,cAAc,OAAO,CAAC;AACtB,cAAc,YAAY,CAAC;AAC3B,cAAc,gBAAgB,CAAC;AAC/B,cAAc,aAAa,CAAC;AAC5B,cAAc,WAAW,CAAC;AAC1B,cAAc,OAAO,CAAC;AACtB,cAAc,oBAAoB,CAAC;AACnC,cAAc,SAAS,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,cAAc,oBAAoB,CAAC;AACnC,cAAc,WAAW,CAAC;AAC1B,cAAc,OAAO,CAAC;AACtB,cAAc,SAAS,CAAC;AACxB,cAAc,aAAa,CAAC;AAC5B,cAAc,cAAc,CAAC;AAC7B,cAAc,MAAM,CAAC;AACrB,cAAc,UAAU,CAAC;AACzB,cAAc,QAAQ,CAAC;AACvB,cAAc,QAAQ,CAAC;AACvB,cAAc,QAAQ,CAAC;AACvB,cAAc,aAAa,CAAC;AAC5B,cAAc,UAAU,CAAC;AACzB,cAAc,QAAQ,CAAC;AACvB,cAAc,iBAAiB,CAAC;AAEhC,cAAc,eAAe,CAAC;AAC9B,cAAc,YAAY,CAAC;AAC3B,cAAc,cAAc,CAAC;AAC7B,cAAc,UAAU,CAAC;AACzB,cAAc,YAAY,CAAC;AAC3B,cAAc,eAAe,CAAC;AAC9B,cAAc,QAAQ,CAAC;AACvB,cAAc,WAAW,CAAC;AAC1B,cAAc,OAAO,CAAC;AACtB,cAAc,YAAY,CAAC;AAC3B,cAAc,gBAAgB,CAAC;AAC/B,cAAc,aAAa,CAAC;AAC5B,cAAc,WAAW,CAAC;AAC1B,cAAc,OAAO,CAAC;AACtB,cAAc,oBAAoB,CAAC;AACnC,cAAc,SAAS,CAAC;AACxB,cAAc,gBAAgB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/instrument.d.ts b/node_modules/@sentry/utils/types/instrument.d.ts
index 5f63dd9..c9db2c1 100644
--- a/node_modules/@sentry/utils/types/instrument.d.ts
+++ b/node_modules/@sentry/utils/types/instrument.d.ts
@@ -7,6 +7,11 @@ export type InstrumentHandlerCallback = (data: any) => void;
  * @hidden
  */
 export declare function addInstrumentationHandler(type: InstrumentHandlerType, callback: InstrumentHandlerCallback): void;
+/**
+ * Reset all instrumentation handlers.
+ * This can be used by tests to ensure we have a clean slate of instrumentation handlers.
+ */
+export declare function resetInstrumentationHandlers(): void;
 /**
  * Parses the fetch arguments to find the used Http method and the url of the request
  */
@@ -14,4 +19,8 @@ export declare function parseFetchArgs(fetchArgs: unknown[]): {
     method: string;
     url: string;
 };
+/** JSDoc */
+export declare function instrumentXHR(): void;
+/** JSDoc */
+export declare function instrumentDOM(): void;
 //# sourceMappingURL=instrument.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/instrument.d.ts.map b/node_modules/@sentry/utils/types/instrument.d.ts.map
index 72da8cc..204651b 100644
--- a/node_modules/@sentry/utils/types/instrument.d.ts.map
+++ b/node_modules/@sentry/utils/types/instrument.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"instrument.d.ts","sourceRoot":"","sources":["../../src/instrument.ts"],"names":[],"mappings":"AAqBA,eAAO,MAAM,mBAAmB,sBAAsB,CAAC;AAEvD,MAAM,MAAM,qBAAqB,GAC7B,SAAS,GACT,KAAK,GACL,OAAO,GACP,SAAS,GACT,QAAQ,GACR,KAAK,GACL,OAAO,GACP,oBAAoB,CAAC;AACzB,MAAM,MAAM,yBAAyB,GAAG,CAAC,IAAI,EAAE,GAAG,KAAK,IAAI,CAAC;AAoD5D;;;;GAIG;AACH,wBAAgB,yBAAyB,CAAC,IAAI,EAAE,qBAAqB,EAAE,QAAQ,EAAE,yBAAyB,GAAG,IAAI,CAIhH;AAwHD;;GAEG;AACH,wBAAgB,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE,GAAG;IAAE,MAAM,EAAE,MAAM,CAAC;IAAC,GAAG,EAAE,MAAM,CAAA;CAAE,CAmBpF"}
\ No newline at end of file
+{"version":3,"file":"instrument.d.ts","sourceRoot":"","sources":["../../src/instrument.ts"],"names":[],"mappings":"AAsBA,eAAO,MAAM,mBAAmB,sBAAsB,CAAC;AAEvD,MAAM,MAAM,qBAAqB,GAC7B,SAAS,GACT,KAAK,GACL,OAAO,GACP,SAAS,GACT,QAAQ,GACR,KAAK,GACL,OAAO,GACP,oBAAoB,CAAC;AACzB,MAAM,MAAM,yBAAyB,GAAG,CAAC,IAAI,EAAE,GAAG,KAAK,IAAI,CAAC;AAoD5D;;;;GAIG;AACH,wBAAgB,yBAAyB,CAAC,IAAI,EAAE,qBAAqB,EAAE,QAAQ,EAAE,yBAAyB,GAAG,IAAI,CAIhH;AAED;;;GAGG;AACH,wBAAgB,4BAA4B,IAAI,IAAI,CAInD;AAwHD;;GAEG;AACH,wBAAgB,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE,GAAG;IAAE,MAAM,EAAE,MAAM,CAAC;IAAC,GAAG,EAAE,MAAM,CAAA;CAAE,CAmBpF;AAED,YAAY;AACZ,wBAAgB,aAAa,IAAI,IAAI,CAkGpC;AAkMD,YAAY;AACZ,wBAAgB,aAAa,IAAI,IAAI,CAiGpC"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/is.d.ts b/node_modules/@sentry/utils/types/is.d.ts
index de5afa1..b8b37cf 100644
--- a/node_modules/@sentry/utils/types/is.d.ts
+++ b/node_modules/@sentry/utils/types/is.d.ts
@@ -109,4 +109,11 @@ export declare function isNaN(wat: unknown): boolean;
  * @returns A boolean representing the result.
  */
 export declare function isInstanceOf(wat: any, base: any): boolean;
+/**
+ * Checks whether given value's type is a Vue ViewModel.
+ *
+ * @param wat A value to be checked.
+ * @returns A boolean representing the result.
+ */
+export declare function isVueViewModel(wat: unknown): boolean;
 //# sourceMappingURL=is.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/is.d.ts.map b/node_modules/@sentry/utils/types/is.d.ts.map
index 69413ed..8f93c1c 100644
--- a/node_modules/@sentry/utils/types/is.d.ts.map
+++ b/node_modules/@sentry/utils/types/is.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"is.d.ts","sourceRoot":"","sources":["../../src/is.ts"],"names":[],"mappings":"AAGA,OAAO,KAAK,EAAE,gBAAgB,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAKjE;;;;;;GAMG;AACH,wBAAgB,OAAO,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,KAAK,CASlD;AAYD;;;;;;GAMG;AACH,wBAAgB,YAAY,CAAC,GAAG,EAAE,OAAO,GAAG,OAAO,CAElD;AAED;;;;;;GAMG;AACH,wBAAgB,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,OAAO,CAEhD;AAED;;;;;;GAMG;AACH,wBAAgB,cAAc,CAAC,GAAG,EAAE,OAAO,GAAG,OAAO,CAEpD;AAED;;;;;;GAMG;AACH,wBAAgB,QAAQ,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,MAAM,CAEpD;AAED;;;;;;GAMG;AACH,wBAAgB,WAAW,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,SAAS,CAE1D;AAED;;;;;;GAMG;AACH,wBAAgB,aAAa,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAE1E;AAED;;;;;;GAMG;AACH,wBAAgB,OAAO,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,gBAAgB,CAE7D;AAED;;;;;;GAMG;AACH,wBAAgB,SAAS,CAAC,GAAG,EAAE,OAAO,GAAG,OAAO,CAE/C;AAED;;;;;;GAMG;AACH,wBAAgB,QAAQ,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,MAAM,CAEpD;AAED;;;GAGG;AACH,wBAAgB,UAAU,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAG5D;AAED;;;;;;GAMG;AACH,wBAAgB,gBAAgB,CAAC,GAAG,EAAE,OAAO,GAAG,OAAO,CAEtD;AAED;;;;;;GAMG;AACH,wBAAgB,KAAK,CAAC,GAAG,EAAE,OAAO,GAAG,OAAO,CAE3C;AAED;;;;;;;GAOG;AACH,wBAAgB,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,OAAO,CAMzD"}
\ No newline at end of file
+{"version":3,"file":"is.d.ts","sourceRoot":"","sources":["../../src/is.ts"],"names":[],"mappings":"AAGA,OAAO,KAAK,EAAE,gBAAgB,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAKjE;;;;;;GAMG;AACH,wBAAgB,OAAO,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,KAAK,CASlD;AAYD;;;;;;GAMG;AACH,wBAAgB,YAAY,CAAC,GAAG,EAAE,OAAO,GAAG,OAAO,CAElD;AAED;;;;;;GAMG;AACH,wBAAgB,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,OAAO,CAEhD;AAED;;;;;;GAMG;AACH,wBAAgB,cAAc,CAAC,GAAG,EAAE,OAAO,GAAG,OAAO,CAEpD;AAED;;;;;;GAMG;AACH,wBAAgB,QAAQ,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,MAAM,CAEpD;AAED;;;;;;GAMG;AACH,wBAAgB,WAAW,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,SAAS,CAE1D;AAED;;;;;;GAMG;AACH,wBAAgB,aAAa,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAE1E;AAED;;;;;;GAMG;AACH,wBAAgB,OAAO,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,gBAAgB,CAE7D;AAED;;;;;;GAMG;AACH,wBAAgB,SAAS,CAAC,GAAG,EAAE,OAAO,GAAG,OAAO,CAE/C;AAED;;;;;;GAMG;AACH,wBAAgB,QAAQ,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,MAAM,CAEpD;AAED;;;GAGG;AACH,wBAAgB,UAAU,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAG5D;AAED;;;;;;GAMG;AACH,wBAAgB,gBAAgB,CAAC,GAAG,EAAE,OAAO,GAAG,OAAO,CAEtD;AAED;;;;;;GAMG;AACH,wBAAgB,KAAK,CAAC,GAAG,EAAE,OAAO,GAAG,OAAO,CAE3C;AAED;;;;;;;GAOG;AACH,wBAAgB,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,OAAO,CAMzD;AAQD;;;;;GAKG;AACH,wBAAgB,cAAc,CAAC,GAAG,EAAE,OAAO,GAAG,OAAO,CAGpD"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/logger.d.ts b/node_modules/@sentry/utils/types/logger.d.ts
index d075263..f2d6577 100644
--- a/node_modules/@sentry/utils/types/logger.d.ts
+++ b/node_modules/@sentry/utils/types/logger.d.ts
@@ -1,7 +1,11 @@
 export declare const CONSOLE_LEVELS: readonly ["debug", "info", "warn", "error", "log", "assert", "trace"];
 export type ConsoleLevel = (typeof CONSOLE_LEVELS)[number];
 type LoggerMethod = (...args: unknown[]) => void;
-type LoggerConsoleMethods = Record<(typeof CONSOLE_LEVELS)[number], LoggerMethod>;
+type LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;
+/** This may be mutated by the console instrumentation. */
+export declare const originalConsoleMethods: {
+    [key in ConsoleLevel]?: (...args: any[]) => void;
+};
 /** JSDoc */
 interface Logger extends LoggerConsoleMethods {
     disable(): void;
@@ -14,6 +18,6 @@ interface Logger extends LoggerConsoleMethods {
  * @returns The results of the callback
  */
 export declare function consoleSandbox<T>(callback: () => T): T;
-declare let logger: Logger;
-export { logger };
+export declare const logger: Logger;
+export {};
 //# sourceMappingURL=logger.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/logger.d.ts.map b/node_modules/@sentry/utils/types/logger.d.ts.map
index 3ee6b1e..e82f699 100644
--- a/node_modules/@sentry/utils/types/logger.d.ts.map
+++ b/node_modules/@sentry/utils/types/logger.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"logger.d.ts","sourceRoot":"","sources":["../../src/logger.ts"],"names":[],"mappings":"AAOA,eAAO,MAAM,cAAc,uEAAwE,CAAC;AACpG,MAAM,MAAM,YAAY,GAAG,CAAC,OAAO,cAAc,CAAC,CAAC,MAAM,CAAC,CAAC;AAE3D,KAAK,YAAY,GAAG,CAAC,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,IAAI,CAAC;AACjD,KAAK,oBAAoB,GAAG,MAAM,CAAC,CAAC,OAAO,cAAc,CAAC,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,CAAC;AAElF,YAAY;AACZ,UAAU,MAAO,SAAQ,oBAAoB;IAC3C,OAAO,IAAI,IAAI,CAAC;IAChB,MAAM,IAAI,IAAI,CAAC;CAChB;AAED;;;;;GAKG;AACH,wBAAgB,cAAc,CAAC,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CA2BtD;AAkCD,QAAA,IAAI,MAAM,EAAE,MAAM,CAAC;AAOnB,OAAO,EAAE,MAAM,EAAE,CAAC"}
\ No newline at end of file
+{"version":3,"file":"logger.d.ts","sourceRoot":"","sources":["../../src/logger.ts"],"names":[],"mappings":"AAKA,eAAO,MAAM,cAAc,uEAAwE,CAAC;AACpG,MAAM,MAAM,YAAY,GAAG,CAAC,OAAO,cAAc,CAAC,CAAC,MAAM,CAAC,CAAC;AAE3D,KAAK,YAAY,GAAG,CAAC,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,IAAI,CAAC;AACjD,KAAK,oBAAoB,GAAG,MAAM,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AAE/D,0DAA0D;AAC1D,eAAO,MAAM,sBAAsB,EAAE;KAElC,GAAG,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,KAAK,IAAI;CAC5C,CAAC;AAEP,YAAY;AACZ,UAAU,MAAO,SAAQ,oBAAoB;IAC3C,OAAO,IAAI,IAAI,CAAC;IAChB,MAAM,IAAI,IAAI,CAAC;CAChB;AAED;;;;;GAKG;AACH,wBAAgB,cAAc,CAAC,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAyBtD;AAiCD,eAAO,MAAM,MAAM,QAAe,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/misc.d.ts.map b/node_modules/@sentry/utils/types/misc.d.ts.map
index 937ccf7..3d11156 100644
--- a/node_modules/@sentry/utils/types/misc.d.ts.map
+++ b/node_modules/@sentry/utils/types/misc.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"misc.d.ts","sourceRoot":"","sources":["../../src/misc.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,KAAK,EAAa,SAAS,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAiB7E;;;;GAIG;AACH,wBAAgB,KAAK,IAAI,MAAM,CAiB9B;AAMD;;;GAGG;AACH,wBAAgB,mBAAmB,CAAC,KAAK,EAAE,KAAK,GAAG,MAAM,CAcxD;AAED;;;;;;GAMG;AACH,wBAAgB,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,MAAM,GAAG,IAAI,CAUvF;AAED;;;;;;GAMG;AACH,wBAAgB,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,YAAY,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAc3F;AAMD;;GAEG;AACH,UAAU,MAAM;IACd,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,UAAU,CAAC,EAAE,MAAM,CAAC;IACpB,aAAa,CAAC,EAAE,MAAM,CAAC;CACxB;AAED;;;GAGG;AACH,wBAAgB,WAAW,CAAC,KAAK,EAAE,MAAM,GAAG,MAAM,CAYjD;AAED;;;;;;GAMG;AACH,wBAAgB,iBAAiB,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,cAAc,GAAE,MAAU,GAAG,IAAI,CAkBtG;AAED;;;;;;;;;;;;;;;;;;;;GAoBG;AACH,wBAAgB,uBAAuB,CAAC,SAAS,EAAE,OAAO,GAAG,OAAO,CAenE;AAED;;;;;GAKG;AACH,wBAAgB,QAAQ,CAAC,CAAC,GAAG,OAAO,EAAE,UAAU,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAE9D"}
\ No newline at end of file
+{"version":3,"file":"misc.d.ts","sourceRoot":"","sources":["../../src/misc.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,KAAK,EAAa,SAAS,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAiB7E;;;;GAIG;AACH,wBAAgB,KAAK,IAAI,MAAM,CAuB9B;AAMD;;;GAGG;AACH,wBAAgB,mBAAmB,CAAC,KAAK,EAAE,KAAK,GAAG,MAAM,CAcxD;AAED;;;;;;GAMG;AACH,wBAAgB,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,MAAM,GAAG,IAAI,CAUvF;AAED;;;;;;GAMG;AACH,wBAAgB,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,YAAY,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAc3F;AAMD;;GAEG;AACH,UAAU,MAAM;IACd,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,UAAU,CAAC,EAAE,MAAM,CAAC;IACpB,aAAa,CAAC,EAAE,MAAM,CAAC;CACxB;AAED;;;GAGG;AACH,wBAAgB,WAAW,CAAC,KAAK,EAAE,MAAM,GAAG,MAAM,CAYjD;AAED;;;;;;GAMG;AACH,wBAAgB,iBAAiB,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,cAAc,GAAE,MAAU,GAAG,IAAI,CAkBtG;AAED;;;;;;;;;;;;;;;;;;;;GAoBG;AACH,wBAAgB,uBAAuB,CAAC,SAAS,EAAE,OAAO,GAAG,OAAO,CAenE;AAED;;;;;GAKG;AACH,wBAAgB,QAAQ,CAAC,CAAC,GAAG,OAAO,EAAE,UAAU,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAE9D"}
\ No newline at end of file
diff --git a/node_modules/@sentry/utils/types/string.d.ts.map b/node_modules/@sentry/utils/types/string.d.ts.map
index 3077c88..66d08c6 100644
--- a/node_modules/@sentry/utils/types/string.d.ts.map
+++ b/node_modules/@sentry/utils/types/string.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"string.d.ts","sourceRoot":"","sources":["../../src/string.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,oBAAoB,EAAE,MAAM,+BAA+B,CAAC;AAErE;;;;;;GAMG;AACH,wBAAgB,QAAQ,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,GAAE,MAAU,GAAG,MAAM,CAK7D;AAED;;;;;;;GAOG;AACH,wBAAgB,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,CAiC5D;AAED;;;;;GAKG;AAEH,wBAAgB,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,EAAE,MAAM,GAAG,MAAM,CAiBjE;AAED;;;;;;;GAOG;AACH,wBAAgB,iBAAiB,CAC/B,KAAK,EAAE,MAAM,EACb,OAAO,EAAE,MAAM,GAAG,MAAM,EACxB,uBAAuB,GAAE,OAAe,GACvC,OAAO,CAaT;AAED;;;;;;;;;GASG;AACH,wBAAgB,wBAAwB,CACtC,UAAU,EAAE,MAAM,EAClB,QAAQ,GAAE,KAAK,CAAC,MAAM,GAAG,MAAM,CAAM,EACrC,uBAAuB,GAAE,OAAe,GACvC,OAAO,CAET"}
\ No newline at end of file
+{"version":3,"file":"string.d.ts","sourceRoot":"","sources":["../../src/string.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,oBAAoB,EAAE,MAAM,+BAA+B,CAAC;AAErE;;;;;;GAMG;AACH,wBAAgB,QAAQ,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,GAAE,MAAU,GAAG,MAAM,CAK7D;AAED;;;;;;;GAOG;AACH,wBAAgB,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,CAiC5D;AAED;;;;;GAKG;AAEH,wBAAgB,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,EAAE,MAAM,GAAG,MAAM,CA0BjE;AAED;;;;;;;GAOG;AACH,wBAAgB,iBAAiB,CAC/B,KAAK,EAAE,MAAM,EACb,OAAO,EAAE,MAAM,GAAG,MAAM,EACxB,uBAAuB,GAAE,OAAe,GACvC,OAAO,CAaT;AAED;;;;;;;;;GASG;AACH,wBAAgB,wBAAwB,CACtC,UAAU,EAAE,MAAM,EAClB,QAAQ,GAAE,KAAK,CAAC,MAAM,GAAG,MAAM,CAAM,EACrC,uBAAuB,GAAE,OAAe,GACvC,OAAO,CAET"}
\ No newline at end of file
